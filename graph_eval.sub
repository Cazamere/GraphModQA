#!/bin/bash

#SBATCH -J test_file                         # Job name
#SBATCH -o ll3_8_non_chain_%j.out                  # output file (%j expands to jobID) test_file_%j.out
#SBATCH -e ll3_8_non_chain_%j.err                  # error log file (%j expands to jobID) test_file_%j.err
#SBATCH --mail-type=ALL                      # Request status by email 
#SBATCH --mail-user=clc348@cornell.edu       # Email address to send results to.
#SBATCH -N 1                                 # Total number of nodes requested
#SBATCH -n 1                                 # Total number of cores requested
#SBATCH --get-user-env                       # retrieve the users login environment
#SBATCH --mem=16G                           # server memory requested (per node)
#SBATCH -t 80:00:00                           # Time limit (hh:mm:ss)
#SBATCH --partition=nlplarge-lillian-highpri       # Request partition, --partition=default_partition       
#SBATCH --gres=gpu:a100:1              # Type/number of GPUs needed, --gres=gpu:1080ti:1, gpu:titanrtx:4,lee-compute-01, gpu:a100:8(S:0-1),nlplarge-compute-01,nlplarge-lillian-highpri, gpu:a100:8(S:0-1),nlplarge-compute-01,nlplarge-lillian-highpri-interactive

# Define arguments for Python file
MODEL="llama3" # ["llama2", "llama3", "opt", "openelm", "mistral", "mixtral", "phi"]
SIZE="8B"
# prompt_types: "add_edge" "remove_edge" "add_node" "remove_node" "node_count" "edge_count" "node_degree" "edge_exists" "connected_nodes" "cycle" "chain_print" "chain_node_count" "chain_edge_count" "chain_node_degree" "chain_edge_exists" "chain_connected_nodes" "chain_cycle"
MAX_LENGTH=4000 # if the model take in a 20x20 adjacency matrix with whitespace in between each entry, that input is of size ~1600

# opt: 125m, 350m, 1.3b, 6.7b # nonsense?
# openelm: 270M, 450M, 1_1B, 3B # not built for these types of questions?
# llama2: 7b, 13b, 70b 
# llama3: 8B, 70B
# mistral: 7B
# mixtral: 7B, 22B
# phi: 4k, 128k # doesn't output anything?

# Run Python file with arguments
python3 model_eval.py --model $MODEL --size $SIZE --prompt_types "node_count" "edge_count" "node_degree" "edge_exists" "connected_nodes" "cycle" "remove_edge" "add_node" "remove_node"  --max_length $MAX_LENGTH