Generating graph 0
-------------------
Graph before chain:[[0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Graph has only one edge or one node, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Graph is disconnected after removing node 0, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 1 0 1 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_exists
Graph before final task:[[0 0 1 0 1 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 1 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 1 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Picked all tasks!
Final task: cycle
Graph before final task:[[0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 1 0 0 0 1 0 0 0]
 [1 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: node_count
Graph before final task:[[0 1 0 0 0 1 0 0 0]
 [1 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_count
Graph before final task:[[0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Graph has only one edge or one node, so we need to sample a new task.
Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: node_degree
Graph before final task:[[0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]

Graph is disconnected after removing node 0, so we need to sample a new task.
Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: connected_nodes
Graph before final task:[[0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]

Graph is disconnected after removing node 0, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: print_adjacency_matrix
Graph before final task:[[0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Generating graph 1
-------------------
Graph before chain:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Graph has only one edge or one node, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_exists
Graph before final task:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: cycle
Graph before final task:[[0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Graph has only one edge or one node, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Graph is disconnected after removing node 3, so we need to sample a new task.
Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: node_count
Graph before final task:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]

Graph has only one edge or one node, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 1 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_count
Graph before final task:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 1 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Graph is disconnected after removing node 3, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: node_degree
Graph before final task:[[0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]

Graph is disconnected after removing node 3, so we need to sample a new task.
Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Graph is disconnected after removing node 3, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: connected_nodes
Graph before final task:[[0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Graph has only one edge or one node, so we need to sample a new task.
Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: print_adjacency_matrix
Graph before final task:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]]
Generating graph 2
-------------------
Graph before chain:[[0 0 0 1 0 1]
 [0 0 0 1 1 0]
 [0 0 0 0 0 0]
 [1 1 0 0 0 0]
 [0 1 0 0 0 1]
 [1 0 0 0 1 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 1 0 1]
 [0 0 0 1 1 0]
 [0 0 0 0 0 0]
 [1 1 0 0 0 0]
 [0 1 0 0 0 1]
 [1 0 0 0 1 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 1 0 1]
 [0 0 0 1 0 0]
 [0 0 0 0 0 0]
 [1 1 0 0 0 0]
 [0 0 0 0 0 1]
 [1 0 0 0 1 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 1 0 1]
 [0 0 0 1 0 0]
 [0 0 0 0 0 0]
 [1 1 0 0 0 0]
 [0 0 0 0 0 1]
 [1 0 0 0 1 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 0 1]
 [0 0 1 1 0 0]
 [0 1 0 0 0 0]
 [1 1 0 0 0 0]
 [0 0 0 0 0 1]
 [1 0 0 0 1 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 1 0 1]
 [0 0 1 1 0 0]
 [0 1 0 0 0 0]
 [1 1 0 0 0 0]
 [0 0 0 0 0 1]
 [1 0 0 0 1 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 1 0 1 0]
 [0 0 1 1 0 0 0]
 [0 1 0 0 0 0 0]
 [1 1 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [1 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_exists
Graph before final task:[[0 0 0 1 0 1 0]
 [0 0 1 1 0 0 0]
 [0 1 0 0 0 0 0]
 [1 1 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [1 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0 1]
 [0 0 0 1 1 0]
 [0 0 0 0 0 0]
 [1 1 0 0 0 0]
 [0 1 0 0 0 1]
 [1 0 0 0 1 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 1 0 1]
 [0 0 0 1 1 0]
 [0 0 0 0 0 0]
 [1 1 0 0 0 0]
 [0 1 0 0 0 1]
 [1 0 0 0 1 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 1 1]
 [0 0 0 1 0]
 [0 0 0 0 0]
 [1 1 0 0 0]
 [1 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 1 1]
 [0 0 0 1 0]
 [0 0 0 0 0]
 [1 1 0 0 0]
 [1 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 1 1]
 [0 0 0 1 0]
 [0 0 0 0 0]
 [1 1 0 0 0]
 [1 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 1 1]
 [0 0 0 1 0]
 [0 0 0 0 0]
 [1 1 0 0 0]
 [1 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 1]
 [0 0 0 1]
 [0 0 0 0]
 [1 1 0 0]]
Picked all tasks!
Final task: cycle
Graph before final task:[[0 0 0 1]
 [0 0 0 1]
 [0 0 0 0]
 [1 1 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0 1]
 [0 0 0 1 1 0]
 [0 0 0 0 0 0]
 [1 1 0 0 0 0]
 [0 1 0 0 0 1]
 [1 0 0 0 1 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 1 0 1]
 [0 0 0 1 1 0]
 [0 0 0 0 0 0]
 [1 1 0 0 0 0]
 [0 1 0 0 0 1]
 [1 0 0 0 1 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 0 1]
 [0 0 0 1 1 0]
 [0 0 0 1 0 0]
 [1 1 1 0 0 0]
 [0 1 0 0 0 1]
 [1 0 0 0 1 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 1 0 1]
 [0 0 0 1 1 0]
 [0 0 0 1 0 0]
 [1 1 1 0 0 0]
 [0 1 0 0 0 1]
 [1 0 0 0 1 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 1 0 1]
 [0 0 1 1 0]
 [1 1 0 0 0]
 [0 1 0 0 1]
 [1 0 0 1 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 1 0 1]
 [0 0 1 1 0]
 [1 1 0 0 0]
 [0 1 0 0 1]
 [1 0 0 1 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 1 0 0]
 [0 0 1 1 0]
 [1 1 0 0 0]
 [0 1 0 0 1]
 [0 0 0 1 0]]
Picked all tasks!
Final task: node_count
Graph before final task:[[0 0 1 0 0]
 [0 0 1 1 0]
 [1 1 0 0 0]
 [0 1 0 0 1]
 [0 0 0 1 0]]
-------------------
Graph before chain:[[0 0 0 1 0 1]
 [0 0 0 1 1 0]
 [0 0 0 0 0 0]
 [1 1 0 0 0 0]
 [0 1 0 0 0 1]
 [1 0 0 0 1 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 1 0 1]
 [0 0 0 1 1 0]
 [0 0 0 0 0 0]
 [1 1 0 0 0 0]
 [0 1 0 0 0 1]
 [1 0 0 0 1 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 1 0 0]
 [0 0 0 1 1 0]
 [0 0 0 0 0 0]
 [1 1 0 0 0 0]
 [0 1 0 0 0 1]
 [0 0 0 0 1 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 1 0 0]
 [0 0 0 1 1 0]
 [0 0 0 0 0 0]
 [1 1 0 0 0 0]
 [0 1 0 0 0 1]
 [0 0 0 0 1 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 1 0 0]
 [0 0 0 1 1 0]
 [0 0 0 0 0 0]
 [1 1 0 0 0 0]
 [0 1 0 0 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 1 0 0]
 [0 0 0 1 1 0]
 [0 0 0 0 0 0]
 [1 1 0 0 0 0]
 [0 1 0 0 0 0]
 [0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 1 0]
 [0 0 0 1 1]
 [0 0 0 0 0]
 [1 1 0 0 0]
 [0 1 0 0 0]]
Picked all tasks!
Final task: edge_count
Graph before final task:[[0 0 0 1 0]
 [0 0 0 1 1]
 [0 0 0 0 0]
 [1 1 0 0 0]
 [0 1 0 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0 1]
 [0 0 0 1 1 0]
 [0 0 0 0 0 0]
 [1 1 0 0 0 0]
 [0 1 0 0 0 1]
 [1 0 0 0 1 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 1 0 1]
 [0 0 0 1 1 0]
 [0 0 0 0 0 0]
 [1 1 0 0 0 0]
 [0 1 0 0 0 1]
 [1 0 0 0 1 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 1]
 [0 0 0 1 0]
 [0 0 0 0 0]
 [0 1 0 0 1]
 [1 0 0 1 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 1]
 [0 0 0 1 0]
 [0 0 0 0 0]
 [0 1 0 0 1]
 [1 0 0 1 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 1]
 [0 0 0 0]
 [0 0 0 1]
 [1 0 1 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 1]
 [0 0 0 0]
 [0 0 0 1]
 [1 0 1 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 1 1]
 [0 0 0 0]
 [1 0 0 1]
 [1 0 1 0]]
Picked all tasks!
Final task: node_degree
Graph before final task:[[0 0 1 1]
 [0 0 0 0]
 [1 0 0 1]
 [1 0 1 0]]
-------------------
Graph before chain:[[0 0 0 1 0 1]
 [0 0 0 1 1 0]
 [0 0 0 0 0 0]
 [1 1 0 0 0 0]
 [0 1 0 0 0 1]
 [1 0 0 0 1 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 1 0 1]
 [0 0 0 1 1 0]
 [0 0 0 0 0 0]
 [1 1 0 0 0 0]
 [0 1 0 0 0 1]
 [1 0 0 0 1 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 1 0 1]
 [0 0 0 1 0 0]
 [0 0 0 0 0 0]
 [1 1 0 0 0 0]
 [0 0 0 0 0 1]
 [1 0 0 0 1 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 1 0 1]
 [0 0 0 1 0 0]
 [0 0 0 0 0 0]
 [1 1 0 0 0 0]
 [0 0 0 0 0 1]
 [1 0 0 0 1 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 0 1]
 [0 0 0 1 1 0]
 [0 0 0 0 0 0]
 [1 1 0 0 0 0]
 [0 1 0 0 0 1]
 [1 0 0 0 1 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 1 0 1]
 [0 0 0 1 1 0]
 [0 0 0 0 0 0]
 [1 1 0 0 0 0]
 [0 1 0 0 0 1]
 [1 0 0 0 1 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 0 1]
 [0 0 0 1 1 0]
 [0 0 0 0 0 0]
 [1 1 0 0 1 0]
 [0 1 0 1 0 1]
 [1 0 0 0 1 0]]
Picked all tasks!
Final task: connected_nodes
Graph before final task:[[0 0 0 1 0 1]
 [0 0 0 1 1 0]
 [0 0 0 0 0 0]
 [1 1 0 0 1 0]
 [0 1 0 1 0 1]
 [1 0 0 0 1 0]]
-------------------
Graph before chain:[[0 0 0 1 0 1]
 [0 0 0 1 1 0]
 [0 0 0 0 0 0]
 [1 1 0 0 0 0]
 [0 1 0 0 0 1]
 [1 0 0 0 1 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 1 0 1]
 [0 0 0 1 1 0]
 [0 0 0 0 0 0]
 [1 1 0 0 0 0]
 [0 1 0 0 0 1]
 [1 0 0 0 1 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 1 1]
 [0 0 0 1 0]
 [0 0 0 0 0]
 [1 1 0 0 0]
 [1 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 1 1]
 [0 0 0 1 0]
 [0 0 0 0 0]
 [1 1 0 0 0]
 [1 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 1]
 [0 0 0 0]
 [0 0 0 0]
 [1 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 1]
 [0 0 0 0]
 [0 0 0 0]
 [1 0 0 0]]

Graph is disconnected after removing node 0, so we need to sample a new task.
Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 1 0]
 [0 0 0 0 0]
 [0 0 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]]
Picked all tasks!
Final task: print_adjacency_matrix
Graph before final task:[[0 0 0 1 0]
 [0 0 0 0 0]
 [0 0 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]]
Generating graph 3
-------------------
Graph before chain:[[0 0 0 0 1 0 1 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 1 1 0 0]
 [1 0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 1]
 [1 0 1 0 0 0 0 0]
 [1 0 0 0 0 1 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 1 0 1 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 1 1 0 0]
 [1 0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 1]
 [1 0 1 0 0 0 0 0]
 [1 0 0 0 0 1 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 1 0 1 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0]
 [0 0 0 0 1 1 0 0 0]
 [1 0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0]
 [1 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 1 0 1 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0]
 [0 0 0 0 1 1 0 0 0]
 [1 0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0]
 [1 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0]
 [0 0 0 0 1 1 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0]
 [1 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0]
 [0 0 0 0 1 1 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0]
 [1 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 1 0 0 1 0]
 [1 0 1 0 0 0 0 0]
 [1 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_exists
Graph before final task:[[0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 1 0 0 1 0]
 [1 0 1 0 0 0 0 0]
 [1 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 1 0 1 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 1 1 0 0]
 [1 0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 1]
 [1 0 1 0 0 0 0 0]
 [1 0 0 0 0 1 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 1 0 1 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 1 1 0 0]
 [1 0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 1]
 [1 0 1 0 0 0 0 0]
 [1 0 0 0 0 1 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 1 0 1 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1]
 [1 0 1 0 0 0 0 0]
 [1 0 0 0 0 1 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 1 0 1 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1]
 [1 0 1 0 0 0 0 0]
 [1 0 0 0 0 1 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1]
 [1 0 1 0 0 0 0 0]
 [1 0 0 0 0 1 0 0]]
Picked all tasks!
Final task: cycle
Graph before final task:[[0 0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1]
 [1 0 1 0 0 0 0 0]
 [1 0 0 0 0 1 0 0]]
-------------------
Graph before chain:[[0 0 0 0 1 0 1 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 1 1 0 0]
 [1 0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 1]
 [1 0 1 0 0 0 0 0]
 [1 0 0 0 0 1 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 1 0 1 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 1 1 0 0]
 [1 0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 1]
 [1 0 1 0 0 0 0 0]
 [1 0 0 0 0 1 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 1 0 1 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 1 0]
 [0 0 1 0 1 1 0 0]
 [1 0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 1]
 [1 0 1 0 0 0 0 0]
 [1 0 0 0 0 1 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 1 0 1 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 1 0]
 [0 0 1 0 1 1 0 0]
 [1 0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 1]
 [1 0 1 0 0 0 0 0]
 [1 0 0 0 0 1 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 1 0 1 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 1 0]
 [0 0 1 0 0 1 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1]
 [1 0 1 0 0 0 0 0]
 [1 0 0 0 0 1 0 0]]
Picked all tasks!
Final task: node_count
Graph before final task:[[0 0 0 0 1 0 1 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 1 0]
 [0 0 1 0 0 1 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1]
 [1 0 1 0 0 0 0 0]
 [1 0 0 0 0 1 0 0]]
-------------------
Graph before chain:[[0 0 0 0 1 0 1 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 1 1 0 0]
 [1 0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 1]
 [1 0 1 0 0 0 0 0]
 [1 0 0 0 0 1 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 1 0 1 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 1 1 0 0]
 [1 0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 1]
 [1 0 1 0 0 0 0 0]
 [1 0 0 0 0 1 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 1 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 1 1 0 0]
 [1 0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 1]
 [1 0 1 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 1 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 1 1 0 0]
 [1 0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 1]
 [1 0 1 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 1 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 0]
 [1 0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 1]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 1 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 0]
 [1 0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 1]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 1 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 0 1 1 0 0]
 [1 0 1 0 0 0 0]
 [0 0 1 0 0 0 1]
 [1 0 0 0 0 0 0]
 [0 0 0 0 1 0 0]]
Picked all tasks!
Final task: edge_count
Graph before final task:[[0 0 0 1 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 0 1 1 0 0]
 [1 0 1 0 0 0 0]
 [0 0 1 0 0 0 1]
 [1 0 0 0 0 0 0]
 [0 0 0 0 1 0 0]]
-------------------
Graph before chain:[[0 0 0 0 1 0 1 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 1 1 0 0]
 [1 0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 1]
 [1 0 1 0 0 0 0 0]
 [1 0 0 0 0 1 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 1 0 1 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 1 1 0 0]
 [1 0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 1]
 [1 0 1 0 0 0 0 0]
 [1 0 0 0 0 1 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 1 0 1 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 1 1 0 0]
 [1 0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [1 0 1 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 1 0 1 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 1 1 0 0]
 [1 0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [1 0 1 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 1 1 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [1 0 1 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: node_degree
Graph before final task:[[0 0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 1 1 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [1 0 1 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 1 0 1 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 1 1 0 0]
 [1 0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 1]
 [1 0 1 0 0 0 0 0]
 [1 0 0 0 0 1 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 1 0 1 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 1 1 0 0]
 [1 0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 1]
 [1 0 1 0 0 0 0 0]
 [1 0 0 0 0 1 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 1 0 1 1]
 [0 0 1 0 0 0 0 0]
 [0 1 0 0 0 0 1 0]
 [0 0 0 0 1 1 0 0]
 [1 0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 1]
 [1 0 1 0 0 0 0 0]
 [1 0 0 0 0 1 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 1 0 1 1]
 [0 0 1 0 0 0 0 0]
 [0 1 0 0 0 0 1 0]
 [0 0 0 0 1 1 0 0]
 [1 0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 1]
 [1 0 1 0 0 0 0 0]
 [1 0 0 0 0 1 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 1 0 1 1 0]
 [0 0 1 0 0 0 0 0 0]
 [0 1 0 0 0 0 1 0 0]
 [0 0 0 0 1 1 0 0 0]
 [1 0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0]
 [1 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: connected_nodes
Graph before final task:[[0 0 0 0 1 0 1 1 0]
 [0 0 1 0 0 0 0 0 0]
 [0 1 0 0 0 0 1 0 0]
 [0 0 0 0 1 1 0 0 0]
 [1 0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0]
 [1 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 1 0 1 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 1 1 0 0]
 [1 0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 1]
 [1 0 1 0 0 0 0 0]
 [1 0 0 0 0 1 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 1 0 1 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 1 1 0 0]
 [1 0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 1]
 [1 0 1 0 0 0 0 0]
 [1 0 0 0 0 1 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 1 0 1 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 1 0]
 [0 0 1 0 1 1 0 0]
 [1 0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 1]
 [1 0 1 0 0 0 0 0]
 [1 0 0 0 0 1 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 1 0 1 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 1 0]
 [0 0 1 0 1 1 0 0]
 [1 0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 1]
 [1 0 1 0 0 0 0 0]
 [1 0 0 0 0 1 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 1 0 1 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 1 0]
 [0 0 1 0 1 0 0 0]
 [1 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 1]
 [1 0 1 0 0 0 0 0]
 [1 0 0 0 0 1 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 1 0 1 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 1 0]
 [0 0 1 0 1 0 0 0]
 [1 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 1]
 [1 0 1 0 0 0 0 0]
 [1 0 0 0 0 1 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 1 0 1 0 1 1]
 [0 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 1 0]
 [0 0 1 0 1 0 0 0]
 [1 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 1]
 [1 0 1 0 0 0 0 0]
 [1 0 0 0 0 1 0 0]]
Picked all tasks!
Final task: print_adjacency_matrix
Graph before final task:[[0 0 1 0 1 0 1 1]
 [0 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 1 0]
 [0 0 1 0 1 0 0 0]
 [1 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 1]
 [1 0 1 0 0 0 0 0]
 [1 0 0 0 0 1 0 0]]
Generating graph 4
-------------------
Graph before chain:[[0 0 0 0 0 1 0 1 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0]
 [1 0 0 0 1 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [1 0 0 0 1 1 0 0 0 1]
 [0 0 0 0 0 0 1 0 0 1]
 [1 0 0 0 0 0 0 1 1 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 1 0 1 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0]
 [1 0 0 0 1 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [1 0 0 0 1 1 0 0 0 1]
 [0 0 0 0 0 0 1 0 0 1]
 [1 0 0 0 0 0 0 1 1 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 1 0 1 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0 0]
 [1 0 0 0 1 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0]
 [1 0 0 0 1 1 0 0 0 1 0]
 [0 0 0 0 0 0 1 0 0 1 0]
 [1 0 0 0 0 0 0 1 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 1 0 1 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0 0]
 [1 0 0 0 1 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0]
 [1 0 0 0 1 1 0 0 0 1 0]
 [0 0 0 0 0 0 1 0 0 1 0]
 [1 0 0 0 0 0 0 1 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 1 0 1 0 1 0]
 [0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 1 0 1 0 0 0]
 [1 0 0 0 1 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0]
 [1 0 0 0 1 1 0 0 0 1 0]
 [0 0 0 0 0 0 1 0 0 1 0]
 [1 0 0 0 0 0 0 1 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_exists
Graph before final task:[[0 0 0 0 0 1 0 1 0 1 0]
 [0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 1 0 1 0 0 0]
 [1 0 0 0 1 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0]
 [1 0 0 0 1 1 0 0 0 1 0]
 [0 0 0 0 0 0 1 0 0 1 0]
 [1 0 0 0 0 0 0 1 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 1 0 1 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0]
 [1 0 0 0 1 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [1 0 0 0 1 1 0 0 0 1]
 [0 0 0 0 0 0 1 0 0 1]
 [1 0 0 0 0 0 0 1 1 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 1 0 1 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0]
 [1 0 0 0 1 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [1 0 0 0 1 1 0 0 0 1]
 [0 0 0 0 0 0 1 0 0 1]
 [1 0 0 0 0 0 0 1 1 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 1 0 1 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0 0]
 [1 0 0 0 1 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0]
 [1 0 0 0 1 1 0 0 0 1 0]
 [0 0 0 0 0 0 1 0 0 1 0]
 [1 0 0 0 0 0 0 1 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 1 0 1 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0 0]
 [1 0 0 0 1 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0]
 [1 0 0 0 1 1 0 0 0 1 0]
 [0 0 0 0 0 0 1 0 0 1 0]
 [1 0 0 0 0 0 0 1 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 1 0 1 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0 0 0]
 [1 0 0 0 1 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0]
 [1 0 0 0 1 1 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0 0 1 0 0]
 [1 0 0 0 0 0 0 1 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 1 0 1 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0 0 0]
 [1 0 0 0 1 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0]
 [1 0 0 0 1 1 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0 0 1 0 0]
 [1 0 0 0 0 0 0 1 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0]
 [1 0 0 0 1 1 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0 0 1 0 0]
 [1 0 0 0 0 0 0 1 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: cycle
Graph before final task:[[0 0 0 0 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0]
 [1 0 0 0 1 1 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0 0 1 0 0]
 [1 0 0 0 0 0 0 1 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 1 0 1 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0]
 [1 0 0 0 1 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [1 0 0 0 1 1 0 0 0 1]
 [0 0 0 0 0 0 1 0 0 1]
 [1 0 0 0 0 0 0 1 1 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 1 0 1 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0]
 [1 0 0 0 1 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [1 0 0 0 1 1 0 0 0 1]
 [0 0 0 0 0 0 1 0 0 1]
 [1 0 0 0 0 0 0 1 1 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 1 0 1 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0]
 [1 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [1 0 0 0 1 1 0 0 0 1]
 [0 0 0 0 0 0 1 0 0 1]
 [1 0 0 0 0 0 0 1 1 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 1 0 1 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0]
 [1 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [1 0 0 0 1 1 0 0 0 1]
 [0 0 0 0 0 0 1 0 0 1]
 [1 0 0 0 0 0 0 1 1 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 1 0 1 0 1]
 [0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0]
 [1 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [1 0 0 0 1 1 0 0 0 1]
 [0 0 0 0 0 0 1 0 0 1]
 [1 0 0 0 0 0 0 1 1 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 1 0 1 0 1]
 [0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0]
 [1 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [1 0 0 0 1 1 0 0 0 1]
 [0 0 0 0 0 0 1 0 0 1]
 [1 0 0 0 0 0 0 1 1 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 1 0 1 0 1]
 [0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0]
 [1 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [1 0 0 0 1 1 0 0 0 1]
 [0 0 0 0 0 0 1 0 0 1]
 [1 0 1 0 0 0 0 1 1 0]]
Picked all tasks!
Final task: node_count
Graph before final task:[[0 0 0 0 0 1 0 1 0 1]
 [0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0]
 [1 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [1 0 0 0 1 1 0 0 0 1]
 [0 0 0 0 0 0 1 0 0 1]
 [1 0 1 0 0 0 0 1 1 0]]
-------------------
Graph before chain:[[0 0 0 0 0 1 0 1 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0]
 [1 0 0 0 1 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [1 0 0 0 1 1 0 0 0 1]
 [0 0 0 0 0 0 1 0 0 1]
 [1 0 0 0 0 0 0 1 1 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 1 0 1 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0]
 [1 0 0 0 1 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [1 0 0 0 1 1 0 0 0 1]
 [0 0 0 0 0 0 1 0 0 1]
 [1 0 0 0 0 0 0 1 1 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 1 0 1 0 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 1 0]
 [1 0 0 0 1 0 0 0 1]
 [0 0 0 0 0 1 0 0 1]
 [1 0 0 0 0 0 1 1 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 1 0 1 0 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 1 0]
 [1 0 0 0 1 0 0 0 1]
 [0 0 0 0 0 1 0 0 1]
 [1 0 0 0 0 0 1 1 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 1 0 1 0 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 1 0]
 [1 0 0 0 1 0 0 1 1]
 [0 0 0 0 0 1 1 0 1]
 [1 0 0 0 0 0 1 1 0]]
Picked all tasks!
Final task: edge_count
Graph before final task:[[0 0 0 0 1 0 1 0 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 1 0]
 [1 0 0 0 1 0 0 1 1]
 [0 0 0 0 0 1 1 0 1]
 [1 0 0 0 0 0 1 1 0]]
-------------------
Graph before chain:[[0 0 0 0 0 1 0 1 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0]
 [1 0 0 0 1 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [1 0 0 0 1 1 0 0 0 1]
 [0 0 0 0 0 0 1 0 0 1]
 [1 0 0 0 0 0 0 1 1 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 1 0 1 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0]
 [1 0 0 0 1 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [1 0 0 0 1 1 0 0 0 1]
 [0 0 0 0 0 0 1 0 0 1]
 [1 0 0 0 0 0 0 1 1 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 1 0 1 0 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 1 0 0]
 [1 0 0 1 0 0 1 0 0]
 [0 0 0 0 0 0 0 1 0]
 [1 0 0 1 1 0 0 0 1]
 [0 0 0 0 0 1 0 0 1]
 [1 0 0 0 0 0 1 1 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 1 0 1 0 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 1 0 0]
 [1 0 0 1 0 0 1 0 0]
 [0 0 0 0 0 0 0 1 0]
 [1 0 0 1 1 0 0 0 1]
 [0 0 0 0 0 1 0 0 1]
 [1 0 0 0 0 0 1 1 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 1 0 1 0 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [1 0 0 1 0 0 0 1]
 [0 0 0 0 1 0 0 1]
 [1 0 0 0 0 1 1 0]]
Picked all tasks!
Final task: node_degree
Graph before final task:[[0 0 0 1 0 1 0 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [1 0 0 1 0 0 0 1]
 [0 0 0 0 1 0 0 1]
 [1 0 0 0 0 1 1 0]]
-------------------
Graph before chain:[[0 0 0 0 0 1 0 1 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0]
 [1 0 0 0 1 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [1 0 0 0 1 1 0 0 0 1]
 [0 0 0 0 0 0 1 0 0 1]
 [1 0 0 0 0 0 0 1 1 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 1 0 1 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0]
 [1 0 0 0 1 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [1 0 0 0 1 1 0 0 0 1]
 [0 0 0 0 0 0 1 0 0 1]
 [1 0 0 0 0 0 0 1 1 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 1 0 1 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0]
 [1 0 0 0 1 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [1 0 0 0 1 1 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 1]
 [1 0 0 0 0 0 0 0 1 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 1 0 1 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0]
 [1 0 0 0 1 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [1 0 0 0 1 1 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 1]
 [1 0 0 0 0 0 0 0 1 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 1 0 1 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0 0]
 [1 0 0 0 1 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0]
 [1 0 0 0 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 1 0]
 [1 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 1 0 1 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0 0]
 [1 0 0 0 1 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0]
 [1 0 0 0 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 1 0]
 [1 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 0 1 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0 1 0]
 [1 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: connected_nodes
Graph before final task:[[0 0 0 0 0 1 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0 1 0]
 [1 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 1 0 1 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0]
 [1 0 0 0 1 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [1 0 0 0 1 1 0 0 0 1]
 [0 0 0 0 0 0 1 0 0 1]
 [1 0 0 0 0 0 0 1 1 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 1 0 1 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0]
 [1 0 0 0 1 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [1 0 0 0 1 1 0 0 0 1]
 [0 0 0 0 0 0 1 0 0 1]
 [1 0 0 0 0 0 0 1 1 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 1 0 1 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0]
 [1 0 0 0 1 0 0 1 0 0]
 [0 0 0 0 0 0 0 1 1 0]
 [1 0 0 0 1 1 1 0 0 1]
 [0 0 0 0 0 0 1 0 0 1]
 [1 0 0 0 0 0 0 1 1 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 1 0 1 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0]
 [1 0 0 0 1 0 0 1 0 0]
 [0 0 0 0 0 0 0 1 1 0]
 [1 0 0 0 1 1 1 0 0 1]
 [0 0 0 0 0 0 1 0 0 1]
 [1 0 0 0 0 0 0 1 1 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 1 0 1 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0 0]
 [1 0 0 0 1 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 1 1 0 0]
 [1 0 0 0 1 1 1 0 0 1 0]
 [0 0 0 0 0 0 1 0 0 1 0]
 [1 0 0 0 0 0 0 1 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 1 0 1 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0 0]
 [1 0 0 0 1 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 1 1 0 0]
 [1 0 0 0 1 1 1 0 0 1 0]
 [0 0 0 0 0 0 1 0 0 1 0]
 [1 0 0 0 0 0 0 1 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 0 0 1 0 1 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 1 1 0 0]
 [1 0 0 0 1 1 0 0 1 0]
 [0 0 0 0 0 1 0 0 1 0]
 [1 0 0 0 0 0 1 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: print_adjacency_matrix
Graph before final task:[[0 0 0 0 0 0 1 0 1 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 1 1 0 0]
 [1 0 0 0 1 1 0 0 1 0]
 [0 0 0 0 0 1 0 0 1 0]
 [1 0 0 0 0 0 1 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Generating graph 5
-------------------
Graph before chain:[[0 0 0 0 0 1]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 1]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 1]
 [0 0 1 0 0 0]
 [0 1 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 1]
 [0 0 1 0 0 0]
 [0 1 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 1]
 [0 0 1 0 0 0]
 [0 1 0 1 0 0]
 [0 0 1 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 1]
 [0 0 1 0 0 0]
 [0 1 0 1 0 0]
 [0 0 1 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 1]
 [0 0 1 0 0 0]
 [0 1 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]]
Picked all tasks!
Final task: edge_exists
Graph before final task:[[0 0 0 0 0 1]
 [0 0 1 0 0 0]
 [0 1 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 1]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 1]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]]

Graph is disconnected after removing node 0, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 1]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 1 0 0 0]
 [1 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 1]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 1 0 0 0]
 [1 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 1]
 [0 0 0 0 0]
 [0 0 1 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 1]
 [0 0 0 0 0]
 [0 0 1 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0]
 [0 0 1 0 0]
 [0 1 0 0 1]
 [0 0 0 0 0]
 [0 0 1 0 0]]
Picked all tasks!
Final task: cycle
Graph before final task:[[0 0 0 0 0]
 [0 0 1 0 0]
 [0 1 0 0 1]
 [0 0 0 0 0]
 [0 0 1 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 1]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 1]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 1 0]
 [0 0 1 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 1 0]
 [0 0 1 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]]
Picked all tasks!
Final task: node_count
Graph before final task:[[0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 1]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 1]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 1 0 0 0 1]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 1 0 0 0 1]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 1 0 0 0 1 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_count
Graph before final task:[[0 1 0 0 0 1 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 1]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 1]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]]

Graph has only one edge or one node, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 0 1]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 1 0 1]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 1]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 1]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 1]
 [0 0 0 1 0 0]
 [0 0 0 0 0 0]
 [0 1 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]]
Picked all tasks!
Final task: node_degree
Graph before final task:[[0 0 0 0 0 1]
 [0 0 0 1 0 0]
 [0 0 0 0 0 0]
 [0 1 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 1]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 1]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]

Graph is disconnected after removing node 0, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: connected_nodes
Graph before final task:[[0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 1]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 1]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]]

Graph has only one edge or one node, so we need to sample a new task.
Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]

Graph has only one edge or one node, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1]
 [1 0 0 0 0 0 0]
 [0 0 0 0 1 0 0]]
Picked all tasks!
Final task: print_adjacency_matrix
Graph before final task:[[0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1]
 [1 0 0 0 0 0 0]
 [0 0 0 0 1 0 0]]
Generating graph 6
-------------------
Graph before chain:[[0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [1 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [1 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]

Graph is disconnected after removing node 3, so we need to sample a new task.
Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [1 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [1 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 1 0]
 [1 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_exists
Graph before final task:[[0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 1 0]
 [1 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [1 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [1 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]

Graph is disconnected after removing node 3, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [1 0 1 0 0 0 0]
 [0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [1 0 1 0 0 0 0]
 [0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0]
 [0 0 0 1 0 0 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0]]
Picked all tasks!
Final task: cycle
Graph before final task:[[0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0]
 [0 0 0 1 0 0 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [1 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [1 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: node_count
Graph before final task:[[0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [1 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [1 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [1 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [1 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1]
 [1 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]]
Picked all tasks!
Final task: edge_count
Graph before final task:[[0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1]
 [1 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [1 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [1 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]

Graph is disconnected after removing node 3, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [1 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 1 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [1 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 0 1 1 0 0]
 [1 0 1 0 0 0 0]
 [0 0 1 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Picked all tasks!
Final task: node_degree
Graph before final task:[[0 0 0 1 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 0 1 1 0 0]
 [1 0 1 0 0 0 0]
 [0 0 1 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [1 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [1 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 1 0 0 0]
 [1 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 1 0 0 0]
 [1 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 1 0 0 0]
 [0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Picked all tasks!
Final task: connected_nodes
Graph before final task:[[0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 1 0 0 0]
 [0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [1 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [1 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]

Graph is disconnected after removing node 3, so we need to sample a new task.
Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [1 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [1 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 1 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: print_adjacency_matrix
Graph before final task:[[0 0 0 1 1 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Generating graph 7
-------------------
Graph before chain:[[0 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 1 0]
 [0 0 1 0 0]
 [0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 1 0]
 [0 0 1 0 0]
 [0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 1 0 0]
 [0 0 1 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 1 0 0]
 [0 0 1 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]

Graph has only one edge or one node, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 1 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 1 0 0]
 [0 0 1 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 1 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 1 0 0]
 [0 0 1 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 1 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_exists
Graph before final task:[[0 1 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 1 0]
 [0 0 1 0 0]
 [0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 1 0]
 [0 0 1 0 0]
 [0 0 0 0 0]]

Graph is disconnected after removing node 2, so we need to sample a new task.
Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 1 0 0]
 [0 0 1 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 1 0 0]
 [0 0 1 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]

Graph is disconnected after removing node 2, so we need to sample a new task.
Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Picked all tasks!
Final task: cycle
Graph before final task:[[0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 1 0]
 [0 0 1 0 0]
 [0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 1 0]
 [0 0 1 0 0]
 [0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 1 0 0]
 [0 0 1 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 1 0 0]
 [0 0 1 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 1 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 1 0 0]
 [0 0 1 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 1 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 1 0 0]
 [0 0 1 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 1 0 0]
 [0 0 1 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]
Picked all tasks!
Final task: node_count
Graph before final task:[[0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 1 0 0]
 [0 0 1 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 1 0]
 [0 0 1 0 0]
 [0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 1 0]
 [0 0 1 0 0]
 [0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0]
 [0 0 1 0 0]
 [0 1 0 1 0]
 [0 0 1 0 0]
 [0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0]
 [0 0 1 0 0]
 [0 1 0 1 0]
 [0 0 1 0 0]
 [0 0 0 0 0]]

Graph is disconnected after removing node 2, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 1]
 [0 0 1 0 0]
 [0 1 0 1 0]
 [0 0 1 0 0]
 [1 0 0 0 0]]
Picked all tasks!
Final task: edge_count
Graph before final task:[[0 0 0 0 1]
 [0 0 1 0 0]
 [0 1 0 1 0]
 [0 0 1 0 0]
 [1 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 1 0]
 [0 0 1 0 0]
 [0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 1 0]
 [0 0 1 0 0]
 [0 0 0 0 0]]

Graph is disconnected after removing node 2, so we need to sample a new task.
Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 1 0 0]
 [0 0 1 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 1 0 0]
 [0 0 1 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 1 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 1 0 0]
 [0 0 1 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]
Picked all tasks!
Final task: node_degree
Graph before final task:[[0 1 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 1 0 0]
 [0 0 1 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 1 0]
 [0 0 1 0 0]
 [0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 1 0]
 [0 0 1 0 0]
 [0 0 0 0 0]]

Graph is disconnected after removing node 2, so we need to sample a new task.
Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 1 0 0]
 [0 0 1 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 1 0 0]
 [0 0 1 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]

Graph is disconnected after removing node 2, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 1 0 1]
 [0 0 1 0 0 0]
 [0 0 0 0 0 0]
 [0 0 1 0 0 0]]
Picked all tasks!
Final task: connected_nodes
Graph before final task:[[0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 1 0 1]
 [0 0 1 0 0 0]
 [0 0 0 0 0 0]
 [0 0 1 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 1 0]
 [0 0 1 0 0]
 [0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 1 0]
 [0 0 1 0 0]
 [0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0]
 [0 0 1 0 0]
 [0 1 0 1 0]
 [0 0 1 0 0]
 [0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0]
 [0 0 1 0 0]
 [0 1 0 1 0]
 [0 0 1 0 0]
 [0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0]
 [0 0 1 0 0]
 [0 1 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 0]]
Picked all tasks!
Final task: print_adjacency_matrix
Graph before final task:[[0 0 0 0 0]
 [0 0 1 0 0]
 [0 1 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 0]]
Generating graph 8
-------------------
Graph before chain:[[0 0 1 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [1 0 0 1 0 1 0 0 0 1]
 [1 0 1 0 1 0 0 0 0 0]
 [1 0 0 1 0 0 1 0 1 0]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 1 1 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 1 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [1 0 0 1 0 1 0 0 0 1]
 [1 0 1 0 1 0 0 0 0 0]
 [1 0 0 1 0 0 1 0 1 0]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 1 1 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 1 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0]
 [1 0 0 1 0 1 0 0 0 1 0]
 [1 0 1 0 1 0 0 0 0 0 0]
 [1 0 0 1 0 0 1 0 1 0 0]
 [0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0]
 [0 1 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 1 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0]
 [1 0 0 1 0 1 0 0 0 1 0]
 [1 0 1 0 1 0 0 0 0 0 0]
 [1 0 0 1 0 0 1 0 1 0 0]
 [0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0]
 [0 1 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 1 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0]
 [1 0 0 1 0 1 0 0 0 1 0 0]
 [1 0 1 0 1 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 1 0 1 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0]
 [0 1 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_exists
Graph before final task:[[0 0 1 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0]
 [1 0 0 1 0 1 0 0 0 1 0 0]
 [1 0 1 0 1 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 1 0 1 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0]
 [0 1 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 1 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [1 0 0 1 0 1 0 0 0 1]
 [1 0 1 0 1 0 0 0 0 0]
 [1 0 0 1 0 0 1 0 1 0]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 1 1 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 1 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [1 0 0 1 0 1 0 0 0 1]
 [1 0 1 0 1 0 0 0 0 0]
 [1 0 0 1 0 0 1 0 1 0]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 1 1 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 1 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [1 0 0 1 0 1 0 0 0 1]
 [1 0 1 0 1 0 0 0 0 0]
 [1 0 0 1 0 0 1 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 1 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 1 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [1 0 0 1 0 1 0 0 0 1]
 [1 0 1 0 1 0 0 0 0 0]
 [1 0 0 1 0 0 1 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 1 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 1 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [1 0 0 1 0 1 0 0 0 1]
 [1 0 1 0 1 1 0 0 0 0]
 [1 0 0 1 0 0 1 0 0 0]
 [0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 1 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 1 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [1 0 0 1 0 1 0 0 0 1]
 [1 0 1 0 1 1 0 0 0 0]
 [1 0 0 1 0 0 1 0 0 0]
 [0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 1 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 1 1 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 1 0 1 0 0 0]
 [1 0 1 0 1 1 0 0 0]
 [1 0 0 1 0 0 1 0 0]
 [0 0 1 1 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: cycle
Graph before final task:[[0 0 1 1 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 1 0 1 0 0 0]
 [1 0 1 0 1 1 0 0 0]
 [1 0 0 1 0 0 1 0 0]
 [0 0 1 1 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 1 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [1 0 0 1 0 1 0 0 0 1]
 [1 0 1 0 1 0 0 0 0 0]
 [1 0 0 1 0 0 1 0 1 0]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 1 1 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 1 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [1 0 0 1 0 1 0 0 0 1]
 [1 0 1 0 1 0 0 0 0 0]
 [1 0 0 1 0 0 1 0 1 0]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 1 1 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 1 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [1 0 0 1 0 1 0 0 0 1]
 [1 0 1 0 1 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 1 0]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 1 1 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 1 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [1 0 0 1 0 1 0 0 0 1]
 [1 0 1 0 1 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 1 0]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 1 1 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 1 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [1 0 0 0 0 1 0 0 0 1]
 [1 0 0 0 1 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 1 0]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 1 1 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: node_count
Graph before final task:[[0 0 1 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [1 0 0 0 0 1 0 0 0 1]
 [1 0 0 0 1 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 1 0]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 1 1 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 1 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [1 0 0 1 0 1 0 0 0 1]
 [1 0 1 0 1 0 0 0 0 0]
 [1 0 0 1 0 0 1 0 1 0]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 1 1 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 1 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [1 0 0 1 0 1 0 0 0 1]
 [1 0 1 0 1 0 0 0 0 0]
 [1 0 0 1 0 0 1 0 1 0]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 1 1 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 1 1 1 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 1]
 [1 0 0 1 0 1 0 0 0 1]
 [1 0 1 0 1 0 0 0 0 0]
 [1 1 0 1 0 0 1 0 1 0]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 1 1 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 1 1 1 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 1]
 [1 0 0 1 0 1 0 0 0 1]
 [1 0 1 0 1 0 0 0 0 0]
 [1 1 0 1 0 0 1 0 1 0]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 1 1 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 1 1 1 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 1 0]
 [1 0 0 1 0 1 0 0 0 1 0]
 [1 0 1 0 1 0 0 0 0 0 0]
 [1 1 0 1 0 0 1 0 1 0 0]
 [0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0]
 [0 1 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_count
Graph before final task:[[0 0 1 1 1 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 1 0]
 [1 0 0 1 0 1 0 0 0 1 0]
 [1 0 1 0 1 0 0 0 0 0 0]
 [1 1 0 1 0 0 1 0 1 0 0]
 [0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0]
 [0 1 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 1 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [1 0 0 1 0 1 0 0 0 1]
 [1 0 1 0 1 0 0 0 0 0]
 [1 0 0 1 0 0 1 0 1 0]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 1 1 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 1 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [1 0 0 1 0 1 0 0 0 1]
 [1 0 1 0 1 0 0 0 0 0]
 [1 0 0 1 0 0 1 0 1 0]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 1 1 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1]
 [1 0 0 1 0 0 0 0 0]
 [1 0 1 0 0 1 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1]
 [1 0 0 1 0 0 0 0 0]
 [1 0 1 0 0 1 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 1 1 0 0 0 0 0]
 [1 0 1 0 0 0 0 0]
 [1 1 0 0 1 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 1 1 0 0 0 0 0]
 [1 0 1 0 0 0 0 0]
 [1 1 0 0 1 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 1 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [1 1 0 0 1 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: node_degree
Graph before final task:[[0 0 1 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [1 1 0 0 1 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 1 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [1 0 0 1 0 1 0 0 0 1]
 [1 0 1 0 1 0 0 0 0 0]
 [1 0 0 1 0 0 1 0 1 0]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 1 1 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 1 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [1 0 0 1 0 1 0 0 0 1]
 [1 0 1 0 1 0 0 0 0 0]
 [1 0 0 1 0 0 1 0 1 0]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 1 1 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 1 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [1 0 0 1 0 1 0 0 0 1]
 [1 0 1 0 1 0 0 0 0 0]
 [1 0 0 1 0 0 1 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 1 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 1 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [1 0 0 1 0 1 0 0 0 1]
 [1 0 1 0 1 0 0 0 0 0]
 [1 0 0 1 0 0 1 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 1 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 1 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0]
 [1 0 0 1 0 1 0 0 0 1 0]
 [1 0 1 0 1 0 0 0 0 0 0]
 [1 0 0 1 0 0 1 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 1 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 1 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0]
 [1 0 0 1 0 1 0 0 0 1 0]
 [1 0 1 0 1 0 0 0 0 0 0]
 [1 0 0 1 0 0 1 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 1 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 1 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [1 0 0 1 0 1 0 0 1 0]
 [1 0 1 0 1 0 0 0 0 0]
 [1 0 0 1 0 0 1 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: connected_nodes
Graph before final task:[[0 0 1 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [1 0 0 1 0 1 0 0 1 0]
 [1 0 1 0 1 0 0 0 0 0]
 [1 0 0 1 0 0 1 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 1 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [1 0 0 1 0 1 0 0 0 1]
 [1 0 1 0 1 0 0 0 0 0]
 [1 0 0 1 0 0 1 0 1 0]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 1 1 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 1 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [1 0 0 1 0 1 0 0 0 1]
 [1 0 1 0 1 0 0 0 0 0]
 [1 0 0 1 0 0 1 0 1 0]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 1 1 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 1 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0]
 [1 0 0 1 0 1 0 0 0 1 0]
 [1 0 1 0 1 0 0 0 0 0 0]
 [1 0 0 1 0 0 1 0 1 0 0]
 [0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0]
 [0 1 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 1 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0]
 [1 0 0 1 0 1 0 0 0 1 0]
 [1 0 1 0 1 0 0 0 0 0 0]
 [1 0 0 1 0 0 1 0 1 0 0]
 [0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0]
 [0 1 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [1 0 0 0 1 0 0 0 1 0]
 [1 0 0 0 0 1 0 1 0 0]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0]
 [0 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: print_adjacency_matrix
Graph before final task:[[0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [1 0 0 0 1 0 0 0 1 0]
 [1 0 0 0 0 1 0 1 0 0]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0]
 [0 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Generating graph 9
-------------------
Graph before chain:[[0 1 0 0 1 1 1 0 0 0]
 [1 0 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 1 0 0 1 1 1 0 0 0]
 [1 0 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 1 1 1 0 0 0]
 [0 0 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 1 1 1 0 0 0]
 [0 0 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 1 1 1 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_exists
Graph before final task:[[0 0 0 0 1 1 1 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 1 0 0 1 1 1 0 0 0]
 [1 0 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 1 0 0 1 1 1 0 0 0]
 [1 0 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 1 1 1 0 0 0]
 [0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 1 1 1 0 0 0]
 [0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: cycle
Graph before final task:[[0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 1 0 0 1 1 1 0 0 0]
 [1 0 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 1 0 0 1 1 1 0 0 0]
 [1 0 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 1 0 0 1 1 1 0 0 0]
 [1 0 1 0 0 1 0 1 0 0]
 [0 1 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 1 0 0 1 1 1 0 0 0]
 [1 0 1 0 0 1 0 1 0 0]
 [0 1 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 1 0 0 1 1 1 0 0 0]
 [1 0 1 0 0 1 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: node_count
Graph before final task:[[0 1 0 0 1 1 1 0 0 0]
 [1 0 1 0 0 1 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 1 0 0 1 1 1 0 0 0]
 [1 0 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 1 0 0 1 1 1 0 0 0]
 [1 0 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 1 0 0 1 1 1 0 0 0 0]
 [1 0 0 0 0 1 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 1 0 0 1 1 1 0 0 0 0]
 [1 0 0 0 0 1 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 1 0 0 1 0 1 0 0 0 0]
 [1 0 0 0 0 1 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_count
Graph before final task:[[0 1 0 0 1 0 1 0 0 0 0]
 [1 0 0 0 0 1 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 1 0 0 1 1 1 0 0 0]
 [1 0 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 1 0 0 1 1 1 0 0 0]
 [1 0 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: node_degree
Graph before final task:[[0 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 1 0 0 1 1 1 0 0 0]
 [1 0 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 1 0 0 1 1 1 0 0 0]
 [1 0 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 1 1 1 0 0 0]
 [0 0 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 1 1 1 0 0 0]
 [0 0 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 1 1 1 0 0 0]
 [0 0 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 1 1 1 0 0 0]
 [0 0 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 1 1 1 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: connected_nodes
Graph before final task:[[0 0 0 0 1 1 1 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 1 0 0 1 1 1 0 0 0]
 [1 0 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 1 0 0 1 1 1 0 0 0]
 [1 0 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 1 0 0 1 1 1 0 0 0 0]
 [1 0 0 0 0 1 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 1 0 0 1 1 1 0 0 0 0]
 [1 0 0 0 0 1 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 1 0 0 1 1 1 0 0 0 0 0]
 [1 0 0 0 0 1 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 1 0 0 1 1 1 0 0 0 0 0]
 [1 0 0 0 0 1 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 1 0 0 1 1 1 0 0 0 0 0]
 [1 0 0 0 0 1 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: print_adjacency_matrix
Graph before final task:[[0 1 0 0 1 1 1 0 0 0 0 0]
 [1 0 0 0 0 1 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]]
Generating graph 10
-------------------
Graph before chain:[[0 0 0 1 0 0 1 1 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 1]
 [1 0 1 0 1 1 0 0 0]
 [0 0 0 1 0 0 1 1 0]
 [0 0 0 1 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 1]
 [1 0 0 0 1 0 0 0 0]
 [1 0 1 0 0 0 1 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 1 0 0 1 1 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 1]
 [1 0 1 0 1 1 0 0 0]
 [0 0 0 1 0 0 1 1 0]
 [0 0 0 1 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 1]
 [1 0 0 0 1 0 0 0 0]
 [1 0 1 0 0 0 1 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 0 0 1 1 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 1]
 [1 0 1 0 1 1 0 1 0]
 [0 0 0 1 0 0 1 1 0]
 [0 0 0 1 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 1]
 [1 0 0 1 1 0 0 0 0]
 [1 0 1 0 0 0 1 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 1 0 0 1 1 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 1]
 [1 0 1 0 1 1 0 1 0]
 [0 0 0 1 0 0 1 1 0]
 [0 0 0 1 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 1]
 [1 0 0 1 1 0 0 0 0]
 [1 0 1 0 0 0 1 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 1 0 1 1 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1]
 [1 0 1 0 1 0 1 0]
 [0 0 0 1 0 0 0 0]
 [1 0 0 0 0 0 0 1]
 [1 0 0 1 0 0 0 0]
 [1 0 1 0 0 1 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 1 0 1 1 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1]
 [1 0 1 0 1 0 1 0]
 [0 0 0 1 0 0 0 0]
 [1 0 0 0 0 0 0 1]
 [1 0 0 1 0 0 0 0]
 [1 0 1 0 0 1 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 1 0 1 1 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1]
 [1 0 1 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 1]
 [1 0 0 1 0 0 0 0]
 [1 0 1 0 0 1 0 0]]
Picked all tasks!
Final task: edge_exists
Graph before final task:[[0 0 0 1 0 1 1 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1]
 [1 0 1 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 1]
 [1 0 0 1 0 0 0 0]
 [1 0 1 0 0 1 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0 0 1 1 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 1]
 [1 0 1 0 1 1 0 0 0]
 [0 0 0 1 0 0 1 1 0]
 [0 0 0 1 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 1]
 [1 0 0 0 1 0 0 0 0]
 [1 0 1 0 0 0 1 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 1 0 0 1 1 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 1]
 [1 0 1 0 1 1 0 0 0]
 [0 0 0 1 0 0 1 1 0]
 [0 0 0 1 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 1]
 [1 0 0 0 1 0 0 0 0]
 [1 0 1 0 0 0 1 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 1 0 0 1 1 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1]
 [1 0 0 0 1 1 0 0 0]
 [0 0 0 1 0 0 1 1 0]
 [0 0 0 1 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 1]
 [1 0 0 0 1 0 0 0 0]
 [1 0 1 0 0 0 1 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 1 0 0 1 1 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1]
 [1 0 0 0 1 1 0 0 0]
 [0 0 0 1 0 0 1 1 0]
 [0 0 0 1 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 1]
 [1 0 0 0 1 0 0 0 0]
 [1 0 1 0 0 0 1 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 1 0 0 1 1 1 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [1 0 0 0 1 1 0 0 0 0]
 [0 0 0 1 0 0 1 1 0 0]
 [0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 1 0]
 [1 0 0 0 1 0 0 0 0 0]
 [1 0 1 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 1 0 0 1 1 1 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [1 0 0 0 1 1 0 0 0 0]
 [0 0 0 1 0 0 1 1 0 0]
 [0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 1 0]
 [1 0 0 0 1 0 0 0 0 0]
 [1 0 1 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 1 0 0 1 1 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0]
 [1 0 0 0 1 1 0 0 0 0 0]
 [0 0 0 1 0 0 1 1 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 1 0 0]
 [1 0 0 0 1 0 0 0 0 0 0]
 [1 0 1 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: cycle
Graph before final task:[[0 0 0 1 0 0 1 1 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0]
 [1 0 0 0 1 1 0 0 0 0 0]
 [0 0 0 1 0 0 1 1 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 1 0 0]
 [1 0 0 0 1 0 0 0 0 0 0]
 [1 0 1 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0 0 1 1 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 1]
 [1 0 1 0 1 1 0 0 0]
 [0 0 0 1 0 0 1 1 0]
 [0 0 0 1 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 1]
 [1 0 0 0 1 0 0 0 0]
 [1 0 1 0 0 0 1 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 1 0 0 1 1 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 1]
 [1 0 1 0 1 1 0 0 0]
 [0 0 0 1 0 0 1 1 0]
 [0 0 0 1 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 1]
 [1 0 0 0 1 0 0 0 0]
 [1 0 1 0 0 0 1 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 1 0 0 1 1 1 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 1 0]
 [1 0 1 0 1 1 0 0 0 0]
 [0 0 0 1 0 0 1 1 0 0]
 [0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 1 0]
 [1 0 0 0 1 0 0 0 0 0]
 [1 0 1 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 1 0 0 1 1 1 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 1 0]
 [1 0 1 0 1 1 0 0 0 0]
 [0 0 0 1 0 0 1 1 0 0]
 [0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 1 0]
 [1 0 0 0 1 0 0 0 0 0]
 [1 0 1 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 1 0 0 1 1 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 1 0 0]
 [1 0 1 0 1 1 0 0 0 0 0]
 [0 0 0 1 0 0 1 1 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 1 0 0]
 [1 0 0 0 1 0 0 0 0 0 0]
 [1 0 1 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 1 0 0 1 1 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 1 0 0]
 [1 0 1 0 1 1 0 0 0 0 0]
 [0 0 0 1 0 0 1 1 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 1 0 0]
 [1 0 0 0 1 0 0 0 0 0 0]
 [1 0 1 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 1 0 1 1 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0]
 [1 0 1 0 1 0 0 0 0 0]
 [0 0 0 1 0 1 1 0 0 0]
 [1 0 0 0 1 0 0 1 0 0]
 [1 0 0 0 1 0 0 0 0 0]
 [1 0 1 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: node_count
Graph before final task:[[0 0 0 1 0 1 1 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0]
 [1 0 1 0 1 0 0 0 0 0]
 [0 0 0 1 0 1 1 0 0 0]
 [1 0 0 0 1 0 0 1 0 0]
 [1 0 0 0 1 0 0 0 0 0]
 [1 0 1 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0 0 1 1 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 1]
 [1 0 1 0 1 1 0 0 0]
 [0 0 0 1 0 0 1 1 0]
 [0 0 0 1 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 1]
 [1 0 0 0 1 0 0 0 0]
 [1 0 1 0 0 0 1 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 1 0 0 1 1 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 1]
 [1 0 1 0 1 1 0 0 0]
 [0 0 0 1 0 0 1 1 0]
 [0 0 0 1 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 1]
 [1 0 0 0 1 0 0 0 0]
 [1 0 1 0 0 0 1 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 0 1 1 1 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 1]
 [1 0 1 0 1 1 0 0 0]
 [0 0 0 1 0 0 1 1 0]
 [1 0 0 1 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 1]
 [1 0 0 0 1 0 0 0 0]
 [1 0 1 0 0 0 1 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 1 0 1 1 1 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 1]
 [1 0 1 0 1 1 0 0 0]
 [0 0 0 1 0 0 1 1 0]
 [1 0 0 1 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 1]
 [1 0 0 0 1 0 0 0 0]
 [1 0 1 0 0 0 1 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 1 1 1 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]
 [0 0 0 0 0 1 1 0]
 [1 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 1]
 [1 0 0 1 0 0 0 0]
 [1 0 1 0 0 1 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 1 1 1 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]
 [0 0 0 0 0 1 1 0]
 [1 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 1]
 [1 0 0 1 0 0 0 0]
 [1 0 1 0 0 1 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 1 1 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1]
 [0 0 0 0 1 1 0]
 [1 0 0 1 0 0 1]
 [1 0 0 1 0 0 0]
 [1 0 1 0 1 0 0]]
Picked all tasks!
Final task: edge_count
Graph before final task:[[0 0 0 0 1 1 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1]
 [0 0 0 0 1 1 0]
 [1 0 0 1 0 0 1]
 [1 0 0 1 0 0 0]
 [1 0 1 0 1 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0 0 1 1 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 1]
 [1 0 1 0 1 1 0 0 0]
 [0 0 0 1 0 0 1 1 0]
 [0 0 0 1 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 1]
 [1 0 0 0 1 0 0 0 0]
 [1 0 1 0 0 0 1 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 1 0 0 1 1 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 1]
 [1 0 1 0 1 1 0 0 0]
 [0 0 0 1 0 0 1 1 0]
 [0 0 0 1 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 1]
 [1 0 0 0 1 0 0 0 0]
 [1 0 1 0 0 0 1 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 0 0 1 1 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 1 0 0 0 1]
 [1 0 1 0 1 1 0 0 0]
 [0 0 1 1 0 0 1 1 0]
 [0 0 0 1 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 1]
 [1 0 0 0 1 0 0 0 0]
 [1 0 1 0 0 0 1 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 1 0 0 1 1 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 1 0 0 0 1]
 [1 0 1 0 1 1 0 0 0]
 [0 0 1 1 0 0 1 1 0]
 [0 0 0 1 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 1]
 [1 0 0 0 1 0 0 0 0]
 [1 0 1 0 0 0 1 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 1 0 0 1 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 1 0 0 1]
 [1 0 1 0 1 1 0 0]
 [0 0 1 1 0 0 1 0]
 [0 0 0 1 0 0 0 0]
 [1 0 0 0 1 0 0 1]
 [1 0 1 0 0 0 1 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 1 0 0 1 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 1 0 0 1]
 [1 0 1 0 1 1 0 0]
 [0 0 1 1 0 0 1 0]
 [0 0 0 1 0 0 0 0]
 [1 0 0 0 1 0 0 1]
 [1 0 1 0 0 0 1 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 1 0 0 1 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 1 0 0 1]
 [1 0 1 0 1 1 0 0]
 [0 0 1 1 0 0 1 0]
 [0 0 0 1 0 0 0 0]
 [1 0 0 0 1 0 0 0]
 [1 0 1 0 0 0 0 0]]
Picked all tasks!
Final task: node_degree
Graph before final task:[[0 0 0 1 0 0 1 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 1 0 0 1]
 [1 0 1 0 1 1 0 0]
 [0 0 1 1 0 0 1 0]
 [0 0 0 1 0 0 0 0]
 [1 0 0 0 1 0 0 0]
 [1 0 1 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0 0 1 1 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 1]
 [1 0 1 0 1 1 0 0 0]
 [0 0 0 1 0 0 1 1 0]
 [0 0 0 1 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 1]
 [1 0 0 0 1 0 0 0 0]
 [1 0 1 0 0 0 1 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 1 0 0 1 1 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 1]
 [1 0 1 0 1 1 0 0 0]
 [0 0 0 1 0 0 1 1 0]
 [0 0 0 1 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 1]
 [1 0 0 0 1 0 0 0 0]
 [1 0 1 0 0 0 1 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 1 0 0 1 1 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1]
 [1 0 0 0 1 1 0 0 0]
 [0 0 0 1 0 0 1 1 0]
 [0 0 0 1 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 1]
 [1 0 0 0 1 0 0 0 0]
 [1 0 1 0 0 0 1 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 1 0 0 1 1 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1]
 [1 0 0 0 1 1 0 0 0]
 [0 0 0 1 0 0 1 1 0]
 [0 0 0 1 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 1]
 [1 0 0 0 1 0 0 0 0]
 [1 0 1 0 0 0 1 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 1 0 0 1 1 1 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [1 0 0 0 1 1 0 0 0 0]
 [0 0 0 1 0 0 1 1 0 0]
 [0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 1 0]
 [1 0 0 0 1 0 0 0 0 0]
 [1 0 1 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 1 0 0 1 1 1 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [1 0 0 0 1 1 0 0 0 0]
 [0 0 0 1 0 0 1 1 0 0]
 [0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 1 0]
 [1 0 0 0 1 0 0 0 0 0]
 [1 0 1 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 0 0 1 1 1 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 1]
 [1 0 0 0 1 1 0 0 0 0]
 [0 0 0 1 0 0 1 1 0 0]
 [0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 1 0]
 [1 0 0 0 1 0 0 0 0 0]
 [1 0 1 0 0 0 1 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: connected_nodes
Graph before final task:[[0 0 0 1 0 0 1 1 1 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 1]
 [1 0 0 0 1 1 0 0 0 0]
 [0 0 0 1 0 0 1 1 0 0]
 [0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 1 0]
 [1 0 0 0 1 0 0 0 0 0]
 [1 0 1 0 0 0 1 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0 0 1 1 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 1]
 [1 0 1 0 1 1 0 0 0]
 [0 0 0 1 0 0 1 1 0]
 [0 0 0 1 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 1]
 [1 0 0 0 1 0 0 0 0]
 [1 0 1 0 0 0 1 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 1 0 0 1 1 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 1]
 [1 0 1 0 1 1 0 0 0]
 [0 0 0 1 0 0 1 1 0]
 [0 0 0 1 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 1]
 [1 0 0 0 1 0 0 0 0]
 [1 0 1 0 0 0 1 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 0 0 1 1 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 1 0 1]
 [1 0 1 0 1 1 0 0 0]
 [0 0 0 1 0 0 1 1 0]
 [0 0 0 1 0 0 0 0 0]
 [1 0 1 0 1 0 0 0 1]
 [1 0 0 0 1 0 0 0 0]
 [1 0 1 0 0 0 1 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 1 0 0 1 1 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 1 0 1]
 [1 0 1 0 1 1 0 0 0]
 [0 0 0 1 0 0 1 1 0]
 [0 0 0 1 0 0 0 0 0]
 [1 0 1 0 1 0 0 0 1]
 [1 0 0 0 1 0 0 0 0]
 [1 0 1 0 0 0 1 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 1 0 0 1 1 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1]
 [1 0 0 0 1 1 0 0 0]
 [0 0 0 1 0 0 1 1 0]
 [0 0 0 1 0 0 0 0 0]
 [1 0 1 0 1 0 0 0 1]
 [1 0 0 0 1 0 0 0 0]
 [1 0 1 0 0 0 1 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 1 0 0 1 1 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1]
 [1 0 0 0 1 1 0 0 0]
 [0 0 0 1 0 0 1 1 0]
 [0 0 0 1 0 0 0 0 0]
 [1 0 1 0 1 0 0 0 1]
 [1 0 0 0 1 0 0 0 0]
 [1 0 1 0 0 0 1 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 1 0 0 1 1 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1]
 [1 0 0 0 1 1 0 0 0]
 [0 0 0 1 0 0 1 1 0]
 [0 0 0 1 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 1]
 [1 0 0 0 1 0 0 0 0]
 [1 0 1 0 0 0 1 0 0]]
Picked all tasks!
Final task: print_adjacency_matrix
Graph before final task:[[0 0 0 1 0 0 1 1 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1]
 [1 0 0 0 1 1 0 0 0]
 [0 0 0 1 0 0 1 1 0]
 [0 0 0 1 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 1]
 [1 0 0 0 1 0 0 0 0]
 [1 0 1 0 0 0 1 0 0]]
Generating graph 11
-------------------
Graph before chain:[[0 0 0 1 0 0 1 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 1]
 [1 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0]
 [0 0 1 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 1 0 0 1 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 1]
 [1 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0]
 [0 0 1 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 1 0 0 1 0 0]
 [0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [1 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 1 0 0 1 0 0]
 [0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [1 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 1 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [1 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 1 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [1 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [1 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_exists
Graph before final task:[[0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [1 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0 0 1 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 1]
 [1 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0]
 [0 0 1 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 1 0 0 1 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 1]
 [1 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0]
 [0 0 1 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 1 0 0 1 0 0]
 [0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [1 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 1 0 0 1 0 0]
 [0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [1 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 0 0 1 0 0]
 [0 0 0 0 0 1 0 0 0]
 [0 0 0 1 0 0 0 1 0]
 [1 0 1 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: cycle
Graph before final task:[[0 0 0 1 0 0 1 0 0]
 [0 0 0 0 0 1 0 0 0]
 [0 0 0 1 0 0 0 1 0]
 [1 0 1 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0 0 1 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 1]
 [1 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0]
 [0 0 1 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 1 0 0 1 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 1]
 [1 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0]
 [0 0 1 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 1 0 0 1 0 0]
 [0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [1 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 1 0 0 1 0 0]
 [0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [1 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 0 0 1 0 0]
 [0 0 0 0 0 1 0 0 0]
 [0 0 0 0 1 0 0 1 0]
 [1 0 0 0 0 0 1 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 1 0 0 1 0 0]
 [0 0 0 0 0 1 0 0 0]
 [0 0 0 0 1 0 0 1 0]
 [1 0 0 0 0 0 1 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0]
 [0 0 0 0 1 0 0 1 0]
 [1 0 0 0 0 0 1 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: node_count
Graph before final task:[[0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0]
 [0 0 0 0 1 0 0 1 0]
 [1 0 0 0 0 0 1 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0 0 1 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 1]
 [1 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0]
 [0 0 1 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 1 0 0 1 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 1]
 [1 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0]
 [0 0 1 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0]
 [0 0 1 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0]
 [0 0 1 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 1 0 0 0 1 0]
 [0 0 0 0 0 1 0 0]
 [1 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0]
 [0 0 1 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 1 0 0 0 1 0]
 [0 0 0 0 0 1 0 0]
 [1 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0]
 [0 0 1 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 1 0 0 0 1 0]
 [0 0 0 0 0 1 1 0]
 [1 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [1 1 0 1 0 0 0 0]
 [0 0 1 0 0 0 0 0]]
Picked all tasks!
Final task: edge_count
Graph before final task:[[0 0 1 0 0 0 1 0]
 [0 0 0 0 0 1 1 0]
 [1 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [1 1 0 1 0 0 0 0]
 [0 0 1 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0 0 1 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 1]
 [1 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0]
 [0 0 1 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 1 0 0 1 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 1]
 [1 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0]
 [0 0 1 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 1 0 0 1 0 0]
 [0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [1 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 1 0 0 1 0 0]
 [0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [1 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 1 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0]
 [1 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: node_degree
Graph before final task:[[0 0 0 1 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0]
 [1 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0 0 1 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 1]
 [1 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0]
 [0 0 1 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 1 0 0 1 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 1]
 [1 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0]
 [0 0 1 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 1 0 0 1 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 1 0 0 1 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 1 0 0 1 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: connected_nodes
Graph before final task:[[0 0 0 1 0 0 1 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0 0 1 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 1]
 [1 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0]
 [0 0 1 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 1 0 0 1 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 1]
 [1 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0]
 [0 0 1 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 0 1 0]
 [0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 1 0]
 [0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 1]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 1 0 0 0]]
Picked all tasks!
Final task: print_adjacency_matrix
Graph before final task:[[0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 1]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 1 0 0 0]]
Generating graph 12
-------------------
Graph before chain:[[0 0 0 0 0]
 [0 0 1 0 1]
 [0 1 0 0 0]
 [0 0 0 0 0]
 [0 1 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0]
 [0 0 1 0 1]
 [0 1 0 0 0]
 [0 0 0 0 0]
 [0 1 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0]
 [0 0 0 0 1]
 [0 0 0 0 0]
 [0 0 0 0 0]
 [0 1 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0]
 [0 0 0 0 1]
 [0 0 0 0 0]
 [0 0 0 0 0]
 [0 1 0 0 0]]

Graph has only one edge or one node, so we need to sample a new task.
Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 1 0 0 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 1 0 0 0 0]
 [0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 1 1 0 0 0]
 [0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_exists
Graph before final task:[[0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 1 1 0 0 0]
 [0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0]
 [0 0 1 0 1]
 [0 1 0 0 0]
 [0 0 0 0 0]
 [0 1 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0]
 [0 0 1 0 1]
 [0 1 0 0 0]
 [0 0 0 0 0]
 [0 1 0 0 0]]

Graph is disconnected after removing node 1, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0]
 [0 0 1 1 1]
 [0 1 0 0 0]
 [0 1 0 0 0]
 [0 1 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0]
 [0 0 1 1 1]
 [0 1 0 0 0]
 [0 1 0 0 0]
 [0 1 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0]
 [0 0 1 0 1]
 [0 1 0 0 0]
 [0 0 0 0 0]
 [0 1 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0]
 [0 0 1 0 1]
 [0 1 0 0 0]
 [0 0 0 0 0]
 [0 1 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0]
 [0 0 1 0 0]
 [0 1 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 0]]
Picked all tasks!
Final task: cycle
Graph before final task:[[0 0 0 0 0]
 [0 0 1 0 0]
 [0 1 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0]
 [0 0 1 0 1]
 [0 1 0 0 0]
 [0 0 0 0 0]
 [0 1 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0]
 [0 0 1 0 1]
 [0 1 0 0 0]
 [0 0 0 0 0]
 [0 1 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0]
 [0 0 1 0 1 0]
 [0 1 0 0 0 0]
 [0 0 0 0 0 0]
 [0 1 0 0 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 0]
 [0 0 1 0 1 0]
 [0 1 0 0 0 0]
 [0 0 0 0 0 0]
 [0 1 0 0 0 0]
 [0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0]
 [0 0 1 0 1 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Picked all tasks!
Final task: node_count
Graph before final task:[[0 0 0 0 0 0 0]
 [0 0 1 0 1 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0]
 [0 0 1 0 1]
 [0 1 0 0 0]
 [0 0 0 0 0]
 [0 1 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0]
 [0 0 1 0 1]
 [0 1 0 0 0]
 [0 0 0 0 0]
 [0 1 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0]
 [0 0 1 0 0]
 [0 1 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0]
 [0 0 1 0 0]
 [0 1 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 0]]

Graph has only one edge or one node, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 1 0 0 0]
 [1 0 1 0 0]
 [0 1 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 0]]
Picked all tasks!
Final task: edge_count
Graph before final task:[[0 1 0 0 0]
 [1 0 1 0 0]
 [0 1 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0]
 [0 0 1 0 1]
 [0 1 0 0 0]
 [0 0 0 0 0]
 [0 1 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0]
 [0 0 1 0 1]
 [0 1 0 0 0]
 [0 0 0 0 0]
 [0 1 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0]
 [0 0 1 0 1 0]
 [0 1 0 0 0 0]
 [0 0 0 0 0 0]
 [0 1 0 0 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 0]
 [0 0 1 0 1 0]
 [0 1 0 0 0 0]
 [0 0 0 0 0 0]
 [0 1 0 0 0 0]
 [0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 1 0 0 0 0]
 [0 0 0 0 0 0]]
Picked all tasks!
Final task: node_degree
Graph before final task:[[0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 1 0 0 0 0]
 [0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0]
 [0 0 1 0 1]
 [0 1 0 0 0]
 [0 0 0 0 0]
 [0 1 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0]
 [0 0 1 0 1]
 [0 1 0 0 0]
 [0 0 0 0 0]
 [0 1 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0]
 [0 0 1 0 1 0]
 [0 1 0 0 0 0]
 [0 0 0 0 0 0]
 [0 1 0 0 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 0]
 [0 0 1 0 1 0]
 [0 1 0 0 0 0]
 [0 0 0 0 0 0]
 [0 1 0 0 0 0]
 [0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 1 0 0 0 0]
 [0 0 0 0 0 0]]
Picked all tasks!
Final task: connected_nodes
Graph before final task:[[0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 1 0 0 0 0]
 [0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0]
 [0 0 1 0 1]
 [0 1 0 0 0]
 [0 0 0 0 0]
 [0 1 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0]
 [0 0 1 0 1]
 [0 1 0 0 0]
 [0 0 0 0 0]
 [0 1 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0]
 [0 0 1 0 1]
 [0 1 0 0 1]
 [0 0 0 0 0]
 [0 1 1 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0]
 [0 0 1 0 1]
 [0 1 0 0 1]
 [0 0 0 0 0]
 [0 1 1 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0]
 [0 0 0 1]
 [0 0 0 0]
 [0 1 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0]
 [0 0 0 1]
 [0 0 0 0]
 [0 1 0 0]]

Graph has only one edge or one node, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0]
 [0 0 0 1]
 [0 0 0 1]
 [0 1 1 0]]
Picked all tasks!
Final task: print_adjacency_matrix
Graph before final task:[[0 0 0 0]
 [0 0 0 1]
 [0 0 0 1]
 [0 1 1 0]]
Generating graph 13
-------------------
Graph before chain:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0 1]
 [0 0 0 0 1 1 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_exists
Graph before final task:[[0 0 0 0 0 0 0 1]
 [0 0 0 0 1 1 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Graph has only one edge or one node, so we need to sample a new task.
Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]

Graph has only one edge or one node, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: cycle
Graph before final task:[[0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 1 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 1 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: node_count
Graph before final task:[[0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Graph has only one edge or one node, so we need to sample a new task.
Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]

Graph has only one edge or one node, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_count
Graph before final task:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Graph has only one edge or one node, so we need to sample a new task.
Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]

Graph is disconnected after removing node 1, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: node_degree
Graph before final task:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Graph is disconnected after removing node 1, so we need to sample a new task.
Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]
 [0 1 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: connected_nodes
Graph before final task:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]
 [0 1 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Graph has only one edge or one node, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Graph is disconnected after removing node 1, so we need to sample a new task.
Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 1 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 1 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: print_adjacency_matrix
Graph before final task:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Generating graph 14
-------------------
Graph before chain:[[0 1 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 1]
 [0 0 0 1 0]]
Task initially chosen: add_node
new_graph_str: [[0 1 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 1]
 [0 0 0 1 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 1 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 1 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 1 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 1 0 0]
 [0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 1 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_exists
Graph before final task:[[0 1 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 1 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 1]
 [0 0 0 1 0]]
Task initially chosen: remove_node
new_graph_str: [[0 1 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 1]
 [0 0 0 1 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 1 0 0]
 [1 0 0 0]
 [0 0 0 0]
 [0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 1 0 0]
 [1 0 0 0]
 [0 0 0 0]
 [0 0 0 0]]

Graph has only one edge or one node, so we need to sample a new task.
Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 1 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 1 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 0]]

Graph is disconnected after removing node 0, so we need to sample a new task.
Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 1 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]
Picked all tasks!
Final task: cycle
Graph before final task:[[0 1 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 1 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 1]
 [0 0 0 1 0]]
Task initially chosen: add_edge
new_graph_str: [[0 1 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 1]
 [0 0 0 1 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 1 0 0 1]
 [1 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 1]
 [1 0 0 1 0]]
Task initially chosen: remove_node
new_graph_str: [[0 1 0 0 1]
 [1 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 1]
 [1 0 0 1 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 1]
 [0 0 0 0]
 [0 0 0 1]
 [1 0 1 0]]
Picked all tasks!
Final task: node_count
Graph before final task:[[0 0 0 1]
 [0 0 0 0]
 [0 0 0 1]
 [1 0 1 0]]
-------------------
Graph before chain:[[0 1 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 1]
 [0 0 0 1 0]]
Task initially chosen: remove_node
new_graph_str: [[0 1 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 1]
 [0 0 0 1 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 1 0 0]
 [1 0 0 0]
 [0 0 0 0]
 [0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 1 0 0]
 [1 0 0 0]
 [0 0 0 0]
 [0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 1 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 0]]
Picked all tasks!
Final task: edge_count
Graph before final task:[[0 1 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 0]]
-------------------
Graph before chain:[[0 1 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 1]
 [0 0 0 1 0]]
Task initially chosen: add_node
new_graph_str: [[0 1 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 1]
 [0 0 0 1 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 1 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 1 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 1 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 1 0 0]
 [0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 1 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 0]]
Picked all tasks!
Final task: node_degree
Graph before final task:[[0 1 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 0]]
-------------------
Graph before chain:[[0 1 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 1]
 [0 0 0 1 0]]
Task initially chosen: add_node
new_graph_str: [[0 1 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 1]
 [0 0 0 1 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 1 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 1 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 1 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 1 0 0]
 [0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 1 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 1 0 1]
 [0 0 0 0 1 0]]
Task initially chosen: add_node
new_graph_str: [[0 1 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 1 0 1]
 [0 0 0 0 1 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 1 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0]
 [0 0 0 1 0 1 0]
 [0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]]
Picked all tasks!
Final task: connected_nodes
Graph before final task:[[0 1 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0]
 [0 0 0 1 0 1 0]
 [0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 1 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 1]
 [0 0 0 1 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 1 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 1]
 [0 0 0 1 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 1]
 [0 0 0 1 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 1]
 [0 0 0 1 0]]

Graph has only one edge or one node, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 1]
 [0 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 1]
 [1 0 0 1 0]]
Picked all tasks!
Final task: print_adjacency_matrix
Graph before final task:[[0 0 0 0 1]
 [0 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 1]
 [1 0 0 1 0]]
Generating graph 15
-------------------
Graph before chain:[[0 1 1 0 1 1 1 0 0 0]
 [1 0 0 0 1 0 0 0 1 1]
 [1 0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 1 0 0 0 0]
 [1 0 0 0 1 0 1 0 1 1]
 [1 0 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 1 0 0 1]
 [0 1 1 0 0 1 0 0 0 1]
 [0 1 1 0 0 1 0 1 1 0]]
Task initially chosen: add_edge
new_graph_str: [[0 1 1 0 1 1 1 0 0 0]
 [1 0 0 0 1 0 0 0 1 1]
 [1 0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 1 0 0 0 0]
 [1 0 0 0 1 0 1 0 1 1]
 [1 0 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 1 0 0 1]
 [0 1 1 0 0 1 0 0 0 1]
 [0 1 1 0 0 1 0 1 1 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 1 1 0 1 1 1 0 0 0]
 [1 0 0 0 1 0 0 0 1 1]
 [1 0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 1 0 0 0 1]
 [1 0 0 0 1 0 1 0 1 1]
 [1 0 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 1 0 0 1]
 [0 1 1 0 0 1 0 0 0 1]
 [0 1 1 0 1 1 0 1 1 0]]
Task initially chosen: remove_node
new_graph_str: [[0 1 1 0 1 1 1 0 0 0]
 [1 0 0 0 1 0 0 0 1 1]
 [1 0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 1 0 0 0 1]
 [1 0 0 0 1 0 1 0 1 1]
 [1 0 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 1 0 0 1]
 [0 1 1 0 0 1 0 0 0 1]
 [0 1 1 0 1 1 0 1 1 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 1 1 0 1 1 1 0 0]
 [1 0 0 0 1 0 0 0 1]
 [1 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 1 0 0 1]
 [1 0 0 0 1 0 1 0 1]
 [1 0 0 0 0 1 0 1 0]
 [0 0 0 0 0 0 1 0 1]
 [0 1 1 0 1 1 0 1 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 1 1 0 1 1 1 0 0]
 [1 0 0 0 1 0 0 0 1]
 [1 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 1 0 0 1]
 [1 0 0 0 1 0 1 0 1]
 [1 0 0 0 0 1 0 1 0]
 [0 0 0 0 0 0 1 0 1]
 [0 1 1 0 1 1 0 1 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 1 1 0 1 1 1 0 0]
 [1 0 0 0 1 0 0 0 1]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 1 0 0 1]
 [1 0 0 0 1 0 1 0 1]
 [1 0 0 0 0 1 0 1 0]
 [0 0 0 0 0 0 1 0 1]
 [0 1 0 0 1 1 0 1 0]]
Picked all tasks!
Final task: edge_exists
Graph before final task:[[0 1 1 0 1 1 1 0 0]
 [1 0 0 0 1 0 0 0 1]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 1 0 0 1]
 [1 0 0 0 1 0 1 0 1]
 [1 0 0 0 0 1 0 1 0]
 [0 0 0 0 0 0 1 0 1]
 [0 1 0 0 1 1 0 1 0]]
-------------------
Graph before chain:[[0 1 1 0 1 1 1 0 0 0]
 [1 0 0 0 1 0 0 0 1 1]
 [1 0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 1 0 0 0 0]
 [1 0 0 0 1 0 1 0 1 1]
 [1 0 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 1 0 0 1]
 [0 1 1 0 0 1 0 0 0 1]
 [0 1 1 0 0 1 0 1 1 0]]
Task initially chosen: remove_node
new_graph_str: [[0 1 1 0 1 1 1 0 0 0]
 [1 0 0 0 1 0 0 0 1 1]
 [1 0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 1 0 0 0 0]
 [1 0 0 0 1 0 1 0 1 1]
 [1 0 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 1 0 0 1]
 [0 1 1 0 0 1 0 0 0 1]
 [0 1 1 0 0 1 0 1 1 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 1 0 1 1 1 0 0 0]
 [1 0 0 1 0 0 0 1 1]
 [0 0 0 0 0 0 0 0 0]
 [1 1 0 0 1 0 0 0 0]
 [1 0 0 1 0 1 0 1 1]
 [1 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 1 0 0 1]
 [0 1 0 0 1 0 0 0 1]
 [0 1 0 0 1 0 1 1 0]]
Task initially chosen: add_edge
new_graph_str: [[0 1 0 1 1 1 0 0 0]
 [1 0 0 1 0 0 0 1 1]
 [0 0 0 0 0 0 0 0 0]
 [1 1 0 0 1 0 0 0 0]
 [1 0 0 1 0 1 0 1 1]
 [1 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 1 0 0 1]
 [0 1 0 0 1 0 0 0 1]
 [0 1 0 0 1 0 1 1 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 1 0 1 1 1 0 0 0]
 [1 0 0 1 1 0 0 1 1]
 [0 0 0 0 0 0 0 0 0]
 [1 1 0 0 1 0 0 0 0]
 [1 1 0 1 0 1 0 1 1]
 [1 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 1 0 0 1]
 [0 1 0 0 1 0 0 0 1]
 [0 1 0 0 1 0 1 1 0]]
Task initially chosen: add_node
new_graph_str: [[0 1 0 1 1 1 0 0 0]
 [1 0 0 1 1 0 0 1 1]
 [0 0 0 0 0 0 0 0 0]
 [1 1 0 0 1 0 0 0 0]
 [1 1 0 1 0 1 0 1 1]
 [1 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 1 0 0 1]
 [0 1 0 0 1 0 0 0 1]
 [0 1 0 0 1 0 1 1 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 1 0 1 1 1 0 0 0]
 [1 0 0 1 1 0 0 1 1]
 [0 0 0 0 0 0 0 0 0]
 [1 1 0 0 1 0 0 0 0]
 [1 1 0 1 0 1 0 1 1]
 [1 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 1 0 0 1]
 [0 1 0 0 1 0 0 0 1]
 [0 1 0 0 1 0 1 1 0]]
Picked all tasks!
Final task: cycle
Graph before final task:[[0 1 0 1 1 1 0 0 0]
 [1 0 0 1 1 0 0 1 1]
 [0 0 0 0 0 0 0 0 0]
 [1 1 0 0 1 0 0 0 0]
 [1 1 0 1 0 1 0 1 1]
 [1 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 1 0 0 1]
 [0 1 0 0 1 0 0 0 1]
 [0 1 0 0 1 0 1 1 0]]
-------------------
Graph before chain:[[0 1 1 0 1 1 1 0 0 0]
 [1 0 0 0 1 0 0 0 1 1]
 [1 0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 1 0 0 0 0]
 [1 0 0 0 1 0 1 0 1 1]
 [1 0 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 1 0 0 1]
 [0 1 1 0 0 1 0 0 0 1]
 [0 1 1 0 0 1 0 1 1 0]]
Task initially chosen: remove_node
new_graph_str: [[0 1 1 0 1 1 1 0 0 0]
 [1 0 0 0 1 0 0 0 1 1]
 [1 0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 1 0 0 0 0]
 [1 0 0 0 1 0 1 0 1 1]
 [1 0 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 1 0 0 1]
 [0 1 1 0 0 1 0 0 0 1]
 [0 1 1 0 0 1 0 1 1 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 1 0 1 1 1 0 0 0]
 [1 0 0 1 0 0 0 1 1]
 [0 0 0 0 0 0 0 0 0]
 [1 1 0 0 1 0 0 0 0]
 [1 0 0 1 0 1 0 1 1]
 [1 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 1 0 0 1]
 [0 1 0 0 1 0 0 0 1]
 [0 1 0 0 1 0 1 1 0]]
Task initially chosen: remove_node
new_graph_str: [[0 1 0 1 1 1 0 0 0]
 [1 0 0 1 0 0 0 1 1]
 [0 0 0 0 0 0 0 0 0]
 [1 1 0 0 1 0 0 0 0]
 [1 0 0 1 0 1 0 1 1]
 [1 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 1 0 0 1]
 [0 1 0 0 1 0 0 0 1]
 [0 1 0 0 1 0 1 1 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 1 1 1 1 0 0 0]
 [1 0 1 0 0 0 1 1]
 [1 1 0 1 0 0 0 0]
 [1 0 1 0 1 0 1 1]
 [1 0 0 1 0 1 0 0]
 [0 0 0 0 1 0 0 1]
 [0 1 0 1 0 0 0 1]
 [0 1 0 1 0 1 1 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 1 1 1 1 0 0 0]
 [1 0 1 0 0 0 1 1]
 [1 1 0 1 0 0 0 0]
 [1 0 1 0 1 0 1 1]
 [1 0 0 1 0 1 0 0]
 [0 0 0 0 1 0 0 1]
 [0 1 0 1 0 0 0 1]
 [0 1 0 1 0 1 1 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 1 1 1 1 0 0 0]
 [1 0 1 0 0 0 0 1]
 [1 1 0 1 0 0 0 0]
 [1 0 1 0 1 0 1 1]
 [1 0 0 1 0 1 0 0]
 [0 0 0 0 1 0 0 1]
 [0 0 0 1 0 0 0 1]
 [0 1 0 1 0 1 1 0]]
Picked all tasks!
Final task: node_count
Graph before final task:[[0 1 1 1 1 0 0 0]
 [1 0 1 0 0 0 0 1]
 [1 1 0 1 0 0 0 0]
 [1 0 1 0 1 0 1 1]
 [1 0 0 1 0 1 0 0]
 [0 0 0 0 1 0 0 1]
 [0 0 0 1 0 0 0 1]
 [0 1 0 1 0 1 1 0]]
-------------------
Graph before chain:[[0 1 1 0 1 1 1 0 0 0]
 [1 0 0 0 1 0 0 0 1 1]
 [1 0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 1 0 0 0 0]
 [1 0 0 0 1 0 1 0 1 1]
 [1 0 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 1 0 0 1]
 [0 1 1 0 0 1 0 0 0 1]
 [0 1 1 0 0 1 0 1 1 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 1 1 0 1 1 1 0 0 0]
 [1 0 0 0 1 0 0 0 1 1]
 [1 0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 1 0 0 0 0]
 [1 0 0 0 1 0 1 0 1 1]
 [1 0 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 1 0 0 1]
 [0 1 1 0 0 1 0 0 0 1]
 [0 1 1 0 0 1 0 1 1 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 1 1 0 1 1 1 0 0 0]
 [1 0 0 0 1 0 0 0 1 1]
 [1 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 1 0 0 0 0]
 [1 0 0 0 1 0 1 0 1 1]
 [1 0 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 1 0 0 1]
 [0 1 0 0 0 1 0 0 0 1]
 [0 1 1 0 0 1 0 1 1 0]]
Task initially chosen: remove_node
new_graph_str: [[0 1 1 0 1 1 1 0 0 0]
 [1 0 0 0 1 0 0 0 1 1]
 [1 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 1 0 0 0 0]
 [1 0 0 0 1 0 1 0 1 1]
 [1 0 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 1 0 0 1]
 [0 1 0 0 0 1 0 0 0 1]
 [0 1 1 0 0 1 0 1 1 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 1 1 1 1 1 0 0 0]
 [1 0 0 1 0 0 0 1 1]
 [1 0 0 0 0 0 0 0 1]
 [1 1 0 0 1 0 0 0 0]
 [1 0 0 1 0 1 0 1 1]
 [1 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 1 0 0 1]
 [0 1 0 0 1 0 0 0 1]
 [0 1 1 0 1 0 1 1 0]]
Picked all tasks!
Final task: edge_count
Graph before final task:[[0 1 1 1 1 1 0 0 0]
 [1 0 0 1 0 0 0 1 1]
 [1 0 0 0 0 0 0 0 1]
 [1 1 0 0 1 0 0 0 0]
 [1 0 0 1 0 1 0 1 1]
 [1 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 1 0 0 1]
 [0 1 0 0 1 0 0 0 1]
 [0 1 1 0 1 0 1 1 0]]
-------------------
Graph before chain:[[0 1 1 0 1 1 1 0 0 0]
 [1 0 0 0 1 0 0 0 1 1]
 [1 0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 1 0 0 0 0]
 [1 0 0 0 1 0 1 0 1 1]
 [1 0 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 1 0 0 1]
 [0 1 1 0 0 1 0 0 0 1]
 [0 1 1 0 0 1 0 1 1 0]]
Task initially chosen: add_node
new_graph_str: [[0 1 1 0 1 1 1 0 0 0]
 [1 0 0 0 1 0 0 0 1 1]
 [1 0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 1 0 0 0 0]
 [1 0 0 0 1 0 1 0 1 1]
 [1 0 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 1 0 0 1]
 [0 1 1 0 0 1 0 0 0 1]
 [0 1 1 0 0 1 0 1 1 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 1 1 0 1 1 1 0 0 0 0]
 [1 0 0 0 1 0 0 0 1 1 0]
 [1 0 0 0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 1 0 0 0 0 0]
 [1 0 0 0 1 0 1 0 1 1 0]
 [1 0 0 0 0 1 0 1 0 0 0]
 [0 0 0 0 0 0 1 0 0 1 0]
 [0 1 1 0 0 1 0 0 0 1 0]
 [0 1 1 0 0 1 0 1 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 1 1 0 1 1 1 0 0 0 0]
 [1 0 0 0 1 0 0 0 1 1 0]
 [1 0 0 0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 1 0 0 0 0 0]
 [1 0 0 0 1 0 1 0 1 1 0]
 [1 0 0 0 0 1 0 1 0 0 0]
 [0 0 0 0 0 0 1 0 0 1 0]
 [0 1 1 0 0 1 0 0 0 1 0]
 [0 1 1 0 0 1 0 1 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 1 1 0 1 1 1 0 0 1 0]
 [1 0 0 0 1 0 0 0 1 1 0]
 [1 0 0 0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 1 0 0 0 0 0]
 [1 0 0 0 1 0 1 0 1 1 0]
 [1 0 0 0 0 1 0 1 0 0 0]
 [0 0 0 0 0 0 1 0 0 1 0]
 [0 1 1 0 0 1 0 0 0 1 0]
 [1 1 1 0 0 1 0 1 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 1 1 0 1 1 1 0 0 1 0]
 [1 0 0 0 1 0 0 0 1 1 0]
 [1 0 0 0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 1 0 0 0 0 0]
 [1 0 0 0 1 0 1 0 1 1 0]
 [1 0 0 0 0 1 0 1 0 0 0]
 [0 0 0 0 0 0 1 0 0 1 0]
 [0 1 1 0 0 1 0 0 0 1 0]
 [1 1 1 0 0 1 0 1 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 1 1 0 1 1 1 0 0 1 0 0]
 [1 0 0 0 1 0 0 0 1 1 0 0]
 [1 0 0 0 0 0 0 0 1 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 1 0 1 1 0 0]
 [1 0 0 0 0 1 0 1 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 1 0 0]
 [0 1 1 0 0 1 0 0 0 1 0 0]
 [1 1 1 0 0 1 0 1 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: node_degree
Graph before final task:[[0 1 1 0 1 1 1 0 0 1 0 0]
 [1 0 0 0 1 0 0 0 1 1 0 0]
 [1 0 0 0 0 0 0 0 1 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 1 0 1 1 0 0]
 [1 0 0 0 0 1 0 1 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 1 0 0]
 [0 1 1 0 0 1 0 0 0 1 0 0]
 [1 1 1 0 0 1 0 1 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 1 1 0 1 1 1 0 0 0]
 [1 0 0 0 1 0 0 0 1 1]
 [1 0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 1 0 0 0 0]
 [1 0 0 0 1 0 1 0 1 1]
 [1 0 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 1 0 0 1]
 [0 1 1 0 0 1 0 0 0 1]
 [0 1 1 0 0 1 0 1 1 0]]
Task initially chosen: add_edge
new_graph_str: [[0 1 1 0 1 1 1 0 0 0]
 [1 0 0 0 1 0 0 0 1 1]
 [1 0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 1 0 0 0 0]
 [1 0 0 0 1 0 1 0 1 1]
 [1 0 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 1 0 0 1]
 [0 1 1 0 0 1 0 0 0 1]
 [0 1 1 0 0 1 0 1 1 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 1 1 0 1 1 1 0 0 0]
 [1 0 0 0 1 0 0 0 1 1]
 [1 0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 1 0 0 0 0]
 [1 1 0 0 0 1 0 0 0 0]
 [1 0 0 1 1 0 1 0 1 1]
 [1 0 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 1 0 0 1]
 [0 1 1 0 0 1 0 0 0 1]
 [0 1 1 0 0 1 0 1 1 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 1 1 0 1 1 1 0 0 0]
 [1 0 0 0 1 0 0 0 1 1]
 [1 0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 1 0 0 0 0]
 [1 1 0 0 0 1 0 0 0 0]
 [1 0 0 1 1 0 1 0 1 1]
 [1 0 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 1 0 0 1]
 [0 1 1 0 0 1 0 0 0 1]
 [0 1 1 0 0 1 0 1 1 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 1 1 0 1 1 1 0 0 0]
 [1 0 0 0 1 0 0 0 1 1]
 [1 0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 1 0 0 0 0]
 [1 1 0 0 0 1 0 0 0 0]
 [1 0 0 1 1 0 1 0 1 1]
 [1 0 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 1 1 0 0 1 0 0 0 1]
 [0 1 1 0 0 1 0 0 1 0]]
Picked all tasks!
Final task: connected_nodes
Graph before final task:[[0 1 1 0 1 1 1 0 0 0]
 [1 0 0 0 1 0 0 0 1 1]
 [1 0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 1 0 0 0 0]
 [1 1 0 0 0 1 0 0 0 0]
 [1 0 0 1 1 0 1 0 1 1]
 [1 0 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 1 1 0 0 1 0 0 0 1]
 [0 1 1 0 0 1 0 0 1 0]]
-------------------
Graph before chain:[[0 1 1 0 1 1 1 0 0 0]
 [1 0 0 0 1 0 0 0 1 1]
 [1 0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 1 0 0 0 0]
 [1 0 0 0 1 0 1 0 1 1]
 [1 0 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 1 0 0 1]
 [0 1 1 0 0 1 0 0 0 1]
 [0 1 1 0 0 1 0 1 1 0]]
Task initially chosen: add_edge
new_graph_str: [[0 1 1 0 1 1 1 0 0 0]
 [1 0 0 0 1 0 0 0 1 1]
 [1 0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 1 0 0 0 0]
 [1 0 0 0 1 0 1 0 1 1]
 [1 0 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 1 0 0 1]
 [0 1 1 0 0 1 0 0 0 1]
 [0 1 1 0 0 1 0 1 1 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 1 1 0 1 1 1 0 0 0]
 [1 0 0 0 1 0 0 0 1 1]
 [1 0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 1 0 0 0 0]
 [1 1 0 0 0 1 0 0 0 0]
 [1 0 0 1 1 0 1 0 1 1]
 [1 0 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 1 0 0 1]
 [0 1 1 0 0 1 0 0 0 1]
 [0 1 1 0 0 1 0 1 1 0]]
Task initially chosen: add_edge
new_graph_str: [[0 1 1 0 1 1 1 0 0 0]
 [1 0 0 0 1 0 0 0 1 1]
 [1 0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 1 0 0 0 0]
 [1 1 0 0 0 1 0 0 0 0]
 [1 0 0 1 1 0 1 0 1 1]
 [1 0 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 1 0 0 1]
 [0 1 1 0 0 1 0 0 0 1]
 [0 1 1 0 0 1 0 1 1 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 1 1 0 1 1 1 0 0 0]
 [1 0 0 0 1 1 0 0 1 1]
 [1 0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 1 0 0 0 0]
 [1 1 0 0 0 1 0 0 0 0]
 [1 1 0 1 1 0 1 0 1 1]
 [1 0 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 1 0 0 1]
 [0 1 1 0 0 1 0 0 0 1]
 [0 1 1 0 0 1 0 1 1 0]]
Picked all tasks!
Final task: print_adjacency_matrix
Graph before final task:[[0 1 1 0 1 1 1 0 0 0]
 [1 0 0 0 1 1 0 0 1 1]
 [1 0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 1 0 0 0 0]
 [1 1 0 0 0 1 0 0 0 0]
 [1 1 0 1 1 0 1 0 1 1]
 [1 0 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 1 0 0 1]
 [0 1 1 0 0 1 0 0 0 1]
 [0 1 1 0 0 1 0 1 1 0]]
Generating graph 16
-------------------
Graph before chain:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 1 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_exists
Graph before final task:[[0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 1 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]

Graph is disconnected after removing node 2, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: cycle
Graph before final task:[[0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Graph has only one edge or one node, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: node_count
Graph before final task:[[0 1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_count
Graph before final task:[[0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Graph is disconnected after removing node 2, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 0 0 0 0 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 0 0 0 0 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 1 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 1 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 1 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: node_degree
Graph before final task:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 1 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Graph has only one edge or one node, so we need to sample a new task.
Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]

Graph is disconnected after removing node 2, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: connected_nodes
Graph before final task:[[0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Graph is disconnected after removing node 2, so we need to sample a new task.
Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: print_adjacency_matrix
Graph before final task:[[0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Generating graph 17
-------------------
Graph before chain:[[0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Graph is disconnected after removing node 0, so we need to sample a new task.
Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_exists
Graph before final task:[[0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: cycle
Graph before final task:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: node_count
Graph before final task:[[0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]

Graph is disconnected after removing node 4, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_count
Graph before final task:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: node_degree
Graph before final task:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: connected_nodes
Graph before final task:[[0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: print_adjacency_matrix
Graph before final task:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Generating graph 18
-------------------
Graph before chain:[[0 0 0 1 0 1]
 [0 0 0 0 0 0]
 [0 0 0 0 0 1]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 1 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 1 0 1]
 [0 0 0 0 0 0]
 [0 0 0 0 0 1]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 1 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 1]
 [0 0 0 0 0]
 [0 0 0 0 1]
 [0 0 0 0 0]
 [1 0 1 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 1]
 [0 0 0 0 0]
 [0 0 0 0 1]
 [0 0 0 0 0]
 [1 0 1 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 1]
 [0 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 0]
 [1 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 1]
 [0 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 0]
 [1 0 0 0 0]]

Graph is disconnected after removing node 0, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 1]
 [0 0 0 0 0]
 [0 0 0 1 0]
 [0 0 1 0 0]
 [1 0 0 0 0]]
Picked all tasks!
Final task: edge_exists
Graph before final task:[[0 0 0 0 1]
 [0 0 0 0 0]
 [0 0 0 1 0]
 [0 0 1 0 0]
 [1 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0 1]
 [0 0 0 0 0 0]
 [0 0 0 0 0 1]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 1 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 1 0 1]
 [0 0 0 0 0 0]
 [0 0 0 0 0 1]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 1 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 1 1 0 1]
 [0 0 0 0 0 0]
 [1 0 0 0 0 1]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 1 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 1 1 0 1]
 [0 0 0 0 0 0]
 [1 0 0 0 0 1]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 1 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 1 1 0 1 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 1 1 0 1 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 1 1 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: cycle
Graph before final task:[[0 0 1 1 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0 1]
 [0 0 0 0 0 0]
 [0 0 0 0 0 1]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 1 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 1 0 1]
 [0 0 0 0 0 0]
 [0 0 0 0 0 1]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 1 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 1 0 1]
 [0 0 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]
 [1 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 1 0 1]
 [0 0 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]
 [1 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 1 0 1]
 [0 0 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 1]
 [1 0 0 1 0]]
Picked all tasks!
Final task: node_count
Graph before final task:[[0 0 1 0 1]
 [0 0 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 1]
 [1 0 0 1 0]]
-------------------
Graph before chain:[[0 0 0 1 0 1]
 [0 0 0 0 0 0]
 [0 0 0 0 0 1]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 1 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 1 0 1]
 [0 0 0 0 0 0]
 [0 0 0 0 0 1]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 1 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 0 1]
 [0 0 0 0 0 0]
 [0 0 0 0 1 1]
 [1 0 0 0 0 0]
 [0 0 1 0 0 0]
 [1 0 1 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 1 0 1]
 [0 0 0 0 0 0]
 [0 0 0 0 1 1]
 [1 0 0 0 0 0]
 [0 0 1 0 0 0]
 [1 0 1 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 1 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 1 1 0]
 [1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0]
 [1 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 1 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 1 1 0]
 [1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0]
 [1 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 0 1 1 1 0]
 [1 0 1 0 0 0 0]
 [0 0 1 0 0 0 0]
 [1 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_count
Graph before final task:[[0 0 0 1 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 0 1 1 1 0]
 [1 0 1 0 0 0 0]
 [0 0 1 0 0 0 0]
 [1 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0 1]
 [0 0 0 0 0 0]
 [0 0 0 0 0 1]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 1 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 1 0 1]
 [0 0 0 0 0 0]
 [0 0 0 0 0 1]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 1 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 0 1]
 [0 0 0 0 0 0]
 [0 0 0 1 0 1]
 [1 0 1 0 0 0]
 [0 0 0 0 0 0]
 [1 0 1 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 1 0 1]
 [0 0 0 0 0 0]
 [0 0 0 1 0 1]
 [1 0 1 0 0 0]
 [0 0 0 0 0 0]
 [1 0 1 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 1 0 1]
 [0 0 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]
 [1 0 0 0 0]]
Picked all tasks!
Final task: node_degree
Graph before final task:[[0 0 1 0 1]
 [0 0 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]
 [1 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0 1]
 [0 0 0 0 0 0]
 [0 0 0 0 0 1]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 1 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 1 0 1]
 [0 0 0 0 0 0]
 [0 0 0 0 0 1]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 1 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 0 1]
 [0 0 0 0 0 0]
 [0 0 0 0 0 1]
 [1 0 0 0 0 1]
 [0 0 0 0 0 0]
 [1 0 1 1 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 1 0 1]
 [0 0 0 0 0 0]
 [0 0 0 0 0 1]
 [1 0 0 0 0 1]
 [0 0 0 0 0 0]
 [1 0 1 1 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 1 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [1 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [1 0 1 1 0 0 0]
 [0 0 0 0 0 0 0]]
Picked all tasks!
Final task: connected_nodes
Graph before final task:[[0 0 0 1 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [1 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [1 0 1 1 0 0 0]
 [0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0 1]
 [0 0 0 0 0 0]
 [0 0 0 0 0 1]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 1 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 1 0 1]
 [0 0 0 0 0 0]
 [0 0 0 0 0 1]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 1 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 1 1]
 [0 0 0 0 0]
 [0 0 0 0 1]
 [1 0 0 0 0]
 [1 0 1 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 1 1]
 [0 0 0 0 0]
 [0 0 0 0 1]
 [1 0 0 0 0]
 [1 0 1 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 1]
 [0 0 0 0 0]
 [0 0 0 1 1]
 [1 0 1 0 0]
 [1 0 1 0 0]]
Picked all tasks!
Final task: print_adjacency_matrix
Graph before final task:[[0 0 0 1 1]
 [0 0 0 0 0]
 [0 0 0 1 1]
 [1 0 1 0 0]
 [1 0 1 0 0]]
Generating graph 19
-------------------
Graph before chain:[[0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [1 0 1 0 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [1 0 1 0 0 0]
 [0 0 0 0 0 0]]

Graph is disconnected after removing node 4, so we need to sample a new task.
Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_exists
Graph before final task:[[0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [1 0 1 0 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [1 0 1 0 0 0]
 [0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Picked all tasks!
Final task: cycle
Graph before final task:[[0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [1 0 1 0 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [1 0 1 0 0 0]
 [0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 1 0 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 1 0 0 0]
 [0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 1 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 1 0 0 0]
 [0 0 0 0 0 0]]
Picked all tasks!
Final task: node_count
Graph before final task:[[0 0 1 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 1 0 0 0]
 [0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [1 0 1 0 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [1 0 1 0 0 0]
 [0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 1 0 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 1 0 0 0]
 [0 0 0 0 0 0]]

Graph has only one edge or one node, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0]
 [0 0 0 1 0 0]
 [0 0 0 0 1 0]
 [0 1 0 0 0 0]
 [0 0 1 0 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 0]
 [0 0 0 1 0 0]
 [0 0 0 0 1 0]
 [0 1 0 0 0 0]
 [0 0 1 0 0 0]
 [0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 1 0 0 0]
 [0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_count
Graph before final task:[[0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 1 0 0 0]
 [0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [1 0 1 0 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [1 0 1 0 0 0]
 [0 0 0 0 0 0]]

Graph is disconnected after removing node 4, so we need to sample a new task.
Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]

Graph is disconnected after removing node 4, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1]
 [0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0]]
Picked all tasks!
Final task: node_degree
Graph before final task:[[0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1]
 [0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [1 0 1 0 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [1 0 1 0 0 0]
 [0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 1 1]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [1 0 1 0 0 0]
 [1 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 1 1]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [1 0 1 0 0 0]
 [1 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Picked all tasks!
Final task: connected_nodes
Graph before final task:[[0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [1 0 1 0 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [1 0 1 0 0 0]
 [0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 1 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 1 1 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 1 1 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Picked all tasks!
Final task: print_adjacency_matrix
Graph before final task:[[0 0 0 1 1 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Generating graph 20
-------------------
Graph before chain:[[0 0 1 0 0 1]
 [0 0 0 1 0 0]
 [1 0 0 1 0 1]
 [0 1 1 0 0 0]
 [0 0 0 0 0 0]
 [1 0 1 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 1 0 0 1]
 [0 0 0 1 0 0]
 [1 0 0 1 0 1]
 [0 1 1 0 0 0]
 [0 0 0 0 0 0]
 [1 0 1 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 1 0 0 1]
 [0 0 0 1 0 0]
 [1 0 0 1 0 0]
 [0 1 1 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 1 0 0 1]
 [0 0 0 1 0 0]
 [1 0 0 1 0 0]
 [0 1 1 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 1]
 [0 0 0 1 0 0]
 [0 0 0 1 0 0]
 [0 1 1 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]]
Picked all tasks!
Final task: edge_exists
Graph before final task:[[0 0 0 0 0 1]
 [0 0 0 1 0 0]
 [0 0 0 1 0 0]
 [0 1 1 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 1 0 0 1]
 [0 0 0 1 0 0]
 [1 0 0 1 0 1]
 [0 1 1 0 0 0]
 [0 0 0 0 0 0]
 [1 0 1 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 1 0 0 1]
 [0 0 0 1 0 0]
 [1 0 0 1 0 1]
 [0 1 1 0 0 0]
 [0 0 0 0 0 0]
 [1 0 1 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 1]
 [0 0 1 0 0]
 [0 1 0 0 0]
 [0 0 0 0 0]
 [1 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 1]
 [0 0 1 0 0]
 [0 1 0 0 0]
 [0 0 0 0 0]
 [1 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 1]
 [0 0 1 0 1]
 [0 1 0 0 0]
 [0 0 0 0 0]
 [1 1 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 1]
 [0 0 1 0 1]
 [0 1 0 0 0]
 [0 0 0 0 0]
 [1 1 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 1]
 [0 0 1 0 1]
 [0 1 0 0 0]
 [0 0 0 0 0]
 [1 1 0 0 0]]
Picked all tasks!
Final task: cycle
Graph before final task:[[0 0 0 0 1]
 [0 0 1 0 1]
 [0 1 0 0 0]
 [0 0 0 0 0]
 [1 1 0 0 0]]
-------------------
Graph before chain:[[0 0 1 0 0 1]
 [0 0 0 1 0 0]
 [1 0 0 1 0 1]
 [0 1 1 0 0 0]
 [0 0 0 0 0 0]
 [1 0 1 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 1 0 0 1]
 [0 0 0 1 0 0]
 [1 0 0 1 0 1]
 [0 1 1 0 0 0]
 [0 0 0 0 0 0]
 [1 0 1 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 1 0 0 1 0]
 [0 0 0 1 0 0 0]
 [1 0 0 1 0 1 0]
 [0 1 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 1 0 0 1 0]
 [0 0 0 1 0 0 0]
 [1 0 0 1 0 1 0]
 [0 1 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 1 0 0 1 0]
 [1 0 1 0 1 0]
 [0 1 0 0 0 0]
 [0 0 0 0 0 0]
 [1 1 0 0 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 1 0 0 1 0]
 [1 0 1 0 1 0]
 [0 1 0 0 0 0]
 [0 0 0 0 0 0]
 [1 1 0 0 0 0]
 [0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 1 0 0 1 0]
 [1 0 1 1 1 0]
 [0 1 0 0 0 0]
 [0 1 0 0 0 0]
 [1 1 0 0 0 0]
 [0 0 0 0 0 0]]
Picked all tasks!
Final task: node_count
Graph before final task:[[0 1 0 0 1 0]
 [1 0 1 1 1 0]
 [0 1 0 0 0 0]
 [0 1 0 0 0 0]
 [1 1 0 0 0 0]
 [0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 1 0 0 1]
 [0 0 0 1 0 0]
 [1 0 0 1 0 1]
 [0 1 1 0 0 0]
 [0 0 0 0 0 0]
 [1 0 1 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 1 0 0 1]
 [0 0 0 1 0 0]
 [1 0 0 1 0 1]
 [0 1 1 0 0 0]
 [0 0 0 0 0 0]
 [1 0 1 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 1 1 0 0 1]
 [1 0 0 1 0 0]
 [1 0 0 1 0 1]
 [0 1 1 0 0 0]
 [0 0 0 0 0 0]
 [1 0 1 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 1 1 0 0 1]
 [1 0 0 1 0 0]
 [1 0 0 1 0 1]
 [0 1 1 0 0 0]
 [0 0 0 0 0 0]
 [1 0 1 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 1 0 0 1]
 [0 0 0 1 0 0]
 [1 0 0 1 0 1]
 [0 1 1 0 0 0]
 [0 0 0 0 0 0]
 [1 0 1 0 0 0]]
Picked all tasks!
Final task: edge_count
Graph before final task:[[0 0 1 0 0 1]
 [0 0 0 1 0 0]
 [1 0 0 1 0 1]
 [0 1 1 0 0 0]
 [0 0 0 0 0 0]
 [1 0 1 0 0 0]]
-------------------
Graph before chain:[[0 0 1 0 0 1]
 [0 0 0 1 0 0]
 [1 0 0 1 0 1]
 [0 1 1 0 0 0]
 [0 0 0 0 0 0]
 [1 0 1 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 1 0 0 1]
 [0 0 0 1 0 0]
 [1 0 0 1 0 1]
 [0 1 1 0 0 0]
 [0 0 0 0 0 0]
 [1 0 1 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 1 0 0 1 0]
 [0 0 0 1 0 0 0]
 [1 0 0 1 0 1 0]
 [0 1 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 1 0 0 1 0]
 [0 0 0 1 0 0 0]
 [1 0 0 1 0 1 0]
 [0 1 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 1 0 0 0]
 [0 0 1 0 1 0]
 [1 1 0 0 0 0]
 [0 0 0 0 0 0]
 [0 1 0 0 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 1 0 0 0]
 [0 0 1 0 1 0]
 [1 1 0 0 0 0]
 [0 0 0 0 0 0]
 [0 1 0 0 0 0]
 [0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 1 0 0 0]
 [0 0 1 0 1 0]
 [1 1 0 0 0 0]
 [0 0 0 0 0 0]
 [0 1 0 0 0 0]
 [0 0 0 0 0 0]]
Picked all tasks!
Final task: node_degree
Graph before final task:[[0 0 1 0 0 0]
 [0 0 1 0 1 0]
 [1 1 0 0 0 0]
 [0 0 0 0 0 0]
 [0 1 0 0 0 0]
 [0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 1 0 0 1]
 [0 0 0 1 0 0]
 [1 0 0 1 0 1]
 [0 1 1 0 0 0]
 [0 0 0 0 0 0]
 [1 0 1 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 1 0 0 1]
 [0 0 0 1 0 0]
 [1 0 0 1 0 1]
 [0 1 1 0 0 0]
 [0 0 0 0 0 0]
 [1 0 1 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 1 0 0 1]
 [0 0 0 1 0 0]
 [1 0 0 1 0 0]
 [0 1 1 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 1 0 0 1]
 [0 0 0 1 0 0]
 [1 0 0 1 0 0]
 [0 1 1 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 1 0 0 1]
 [0 0 0 1 1 0]
 [1 0 0 1 0 0]
 [0 1 1 0 0 0]
 [0 1 0 0 0 0]
 [1 0 0 0 0 0]]
Picked all tasks!
Final task: connected_nodes
Graph before final task:[[0 0 1 0 0 1]
 [0 0 0 1 1 0]
 [1 0 0 1 0 0]
 [0 1 1 0 0 0]
 [0 1 0 0 0 0]
 [1 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 1 0 0 1]
 [0 0 0 1 0 0]
 [1 0 0 1 0 1]
 [0 1 1 0 0 0]
 [0 0 0 0 0 0]
 [1 0 1 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 1 0 0 1]
 [0 0 0 1 0 0]
 [1 0 0 1 0 1]
 [0 1 1 0 0 0]
 [0 0 0 0 0 0]
 [1 0 1 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 1 0 0]
 [0 0 1 0 1]
 [1 1 0 0 0]
 [0 0 0 0 0]
 [0 1 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 1 0 0]
 [0 0 1 0 1]
 [1 1 0 0 0]
 [0 0 0 0 0]
 [0 1 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 1 0 0]
 [0 0 1 0 1]
 [1 1 0 0 1]
 [0 0 0 0 0]
 [0 1 1 0 0]]
Picked all tasks!
Final task: print_adjacency_matrix
Graph before final task:[[0 0 1 0 0]
 [0 0 1 0 1]
 [1 1 0 0 1]
 [0 0 0 0 0]
 [0 1 1 0 0]]
Generating graph 21
-------------------
Graph before chain:[[0 0 0 1 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 1]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 1 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 1 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 1]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 1 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 1]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 1 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 1]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 1 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_exists
Graph before final task:[[0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 1]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 1 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 1 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 1]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 1 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 1]
 [0 0 0 0 0]
 [0 0 1 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 1]
 [0 0 0 0 0]
 [0 0 1 0 0]]

Graph has only one edge or one node, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 1 0 0]
 [0 0 0 0 0]
 [1 0 0 0 1]
 [0 0 0 0 0]
 [0 0 1 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 1 0 0]
 [0 0 0 0 0]
 [1 0 0 0 1]
 [0 0 0 0 0]
 [0 0 1 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 1 1 0 0]
 [1 0 0 0 0]
 [1 0 0 0 1]
 [0 0 0 0 0]
 [0 0 1 0 0]]
Picked all tasks!
Final task: cycle
Graph before final task:[[0 1 1 0 0]
 [1 0 0 0 0]
 [1 0 0 0 1]
 [0 0 0 0 0]
 [0 0 1 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 1]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 1 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 1 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 1]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 1 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 1]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 1 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 1]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 1 0 0 0]]

Graph is disconnected after removing node 2, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 1]
 [0 0 0 0 0 0]
 [0 0 1 0 0 0]
 [0 0 1 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 1]
 [0 0 0 0 0 0]
 [0 0 1 0 0 0]
 [0 0 1 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 1 0 0 0]
 [0 0 0 0 0 0]]
Picked all tasks!
Final task: node_count
Graph before final task:[[0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 1 0 0 0]
 [0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 1]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 1 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 1 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 1]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 1 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 1 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 1 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_count
Graph before final task:[[0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 1]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 1 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 1 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 1]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 1 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 1 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]
Picked all tasks!
Final task: node_degree
Graph before final task:[[0 0 0 1 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 1]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 1 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 1 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 1]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 1 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 0 0]
 [0 0 0 0 0 1]
 [0 0 0 0 0 1]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 1 1 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 1 0 0]
 [0 0 0 0 0 1]
 [0 0 0 0 0 1]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 1 1 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 1]
 [0 0 0 0 1]
 [0 0 0 0 0]
 [0 0 0 0 0]
 [1 1 0 0 0]]
Picked all tasks!
Final task: connected_nodes
Graph before final task:[[0 0 0 0 1]
 [0 0 0 0 1]
 [0 0 0 0 0]
 [0 0 0 0 0]
 [1 1 0 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 1]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 1 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 1 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 1]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 1 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 1 0 0 0 0]
 [0 0 0 0 0 0]]
Picked all tasks!
Final task: print_adjacency_matrix
Graph before final task:[[0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 1 0 0 0 0]
 [0 0 0 0 0 0]]
Generating graph 22
-------------------
Graph before chain:[[0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0]
 [0 0 0 1 0 0 1]
 [0 0 1 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0]
 [0 0 0 1 0 0 1]
 [0 0 1 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 1 0 0 1 0]
 [0 0 1 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 1 0 0 1 0]
 [0 0 1 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 1 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 1 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_exists
Graph before final task:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 1 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 1 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0]
 [0 0 0 1 0 0 1]
 [0 0 1 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0]
 [0 0 0 1 0 0 1]
 [0 0 1 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 1 0 0 1 0]
 [0 0 1 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 1 0 0 1 0]
 [0 0 1 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 1 0 0 1 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: cycle
Graph before final task:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 1 0 0 1 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0]
 [0 0 0 1 0 0 1]
 [0 0 1 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0]
 [0 0 0 1 0 0 1]
 [0 0 1 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 1 0 0 1 0]
 [0 0 1 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 1 0 0 1 0]
 [0 0 1 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0 0]
 [0 0 0 1 1 0 0 0]
 [0 0 0 1 0 0 1 0]
 [0 1 1 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: node_count
Graph before final task:[[0 0 0 0 0 0 0 0]
 [0 0 0 1 1 0 0 0]
 [0 0 0 1 0 0 1 0]
 [0 1 1 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0]
 [0 0 0 1 0 0 1]
 [0 0 1 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0]
 [0 0 0 1 0 0 1]
 [0 0 1 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 1 0 0 1 0]
 [0 0 1 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 1 0 0 1 0]
 [0 0 1 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 1 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 1 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 1 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_count
Graph before final task:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 1 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0]
 [0 0 0 1 0 0 1]
 [0 0 1 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0]
 [0 0 0 1 0 0 1]
 [0 0 1 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 1 0 0 1 0]
 [0 0 1 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 1 0 0 1 0]
 [0 0 1 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0]
 [0 0 0 1 0 0 1 0]
 [0 0 1 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0]
 [0 0 0 1 0 0 1 0]
 [0 0 1 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0]
 [0 0 0 1 0 0 1 0]
 [0 0 1 0 0 0 0 1]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]]
Picked all tasks!
Final task: node_degree
Graph before final task:[[0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0]
 [0 0 0 1 0 0 1 0]
 [0 0 1 0 0 0 0 1]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0]
 [0 0 0 1 0 0 1]
 [0 0 1 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0]
 [0 0 0 1 0 0 1]
 [0 0 1 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: connected_nodes
Graph before final task:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0]
 [0 0 0 1 0 0 1]
 [0 0 1 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0]
 [0 0 0 1 0 0 1]
 [0 0 1 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 1 0 0 1 0]
 [0 0 1 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 1 0 0 1 0]
 [0 0 1 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 1 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [1 0 0 1 0 0 1 0]
 [0 0 1 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: print_adjacency_matrix
Graph before final task:[[0 0 1 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [1 0 0 1 0 0 1 0]
 [0 0 1 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Generating graph 23
-------------------
Graph before chain:[[0 0 0 1 0]
 [0 0 0 1 0]
 [0 0 0 0 0]
 [1 1 0 0 0]
 [0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 1 0]
 [0 0 0 1 0]
 [0 0 0 0 0]
 [1 1 0 0 0]
 [0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0]
 [0 0 0 1 0]
 [0 0 0 0 0]
 [0 1 0 0 0]
 [0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0]
 [0 0 0 1 0]
 [0 0 0 0 0]
 [0 1 0 0 0]
 [0 0 0 0 0]]

Graph has only one edge or one node, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0]
 [0 0 0 1 0]
 [0 0 0 0 1]
 [0 1 0 0 0]
 [0 0 1 0 0]]
Picked all tasks!
Final task: edge_exists
Graph before final task:[[0 0 0 0 0]
 [0 0 0 1 0]
 [0 0 0 0 1]
 [0 1 0 0 0]
 [0 0 1 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0]
 [0 0 0 1 0]
 [0 0 0 0 0]
 [1 1 0 0 0]
 [0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 1 0]
 [0 0 0 1 0]
 [0 0 0 0 0]
 [1 1 0 0 0]
 [0 0 0 0 0]]

Graph is disconnected after removing node 3, so we need to sample a new task.
Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 1 0 0]
 [0 0 0 1 0 0]
 [0 0 0 0 0 0]
 [1 1 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 1 0 0]
 [0 0 0 1 0 0]
 [0 0 0 0 0 0]
 [1 1 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 1 0 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 1 0 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: cycle
Graph before final task:[[0 0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0]
 [0 0 0 1 0]
 [0 0 0 0 0]
 [1 1 0 0 0]
 [0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 1 0]
 [0 0 0 1 0]
 [0 0 0 0 0]
 [1 1 0 0 0]
 [0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 0]
 [0 0 0 1 0]
 [0 0 0 0 0]
 [1 1 0 0 1]
 [0 0 0 1 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 1 0]
 [0 0 0 1 0]
 [0 0 0 0 0]
 [1 1 0 0 1]
 [0 0 0 1 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 1 0 0]
 [0 0 0 1 0 0]
 [0 0 0 0 0 0]
 [1 1 0 0 1 0]
 [0 0 0 1 0 0]
 [0 0 0 0 0 0]]
Picked all tasks!
Final task: node_count
Graph before final task:[[0 0 0 1 0 0]
 [0 0 0 1 0 0]
 [0 0 0 0 0 0]
 [1 1 0 0 1 0]
 [0 0 0 1 0 0]
 [0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0]
 [0 0 0 1 0]
 [0 0 0 0 0]
 [1 1 0 0 0]
 [0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 1 0]
 [0 0 0 1 0]
 [0 0 0 0 0]
 [1 1 0 0 0]
 [0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 1]
 [0 0 0 1 0]
 [0 0 0 0 0]
 [1 1 0 0 0]
 [1 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 1 1]
 [0 0 0 1 0]
 [0 0 0 0 0]
 [1 1 0 0 0]
 [1 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 1]
 [0 0 0 1 0]
 [0 0 0 0 0]
 [0 1 0 0 0]
 [1 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 1]
 [0 0 0 1 0]
 [0 0 0 0 0]
 [0 1 0 0 0]
 [1 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 1]
 [0 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 0]
 [1 0 0 0 0]]
Picked all tasks!
Final task: edge_count
Graph before final task:[[0 0 0 0 1]
 [0 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 0]
 [1 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0]
 [0 0 0 1 0]
 [0 0 0 0 0]
 [1 1 0 0 0]
 [0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 1 0]
 [0 0 0 1 0]
 [0 0 0 0 0]
 [1 1 0 0 0]
 [0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 1 0 0]
 [0 0 0 1 0 0]
 [0 0 0 0 0 0]
 [1 1 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 1 0 0]
 [0 0 0 1 0 0]
 [0 0 0 0 0 0]
 [1 1 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 1 0 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Picked all tasks!
Final task: node_degree
Graph before final task:[[0 0 0 1 0 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0]
 [0 0 0 1 0]
 [0 0 0 0 0]
 [1 1 0 0 0]
 [0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 1 0]
 [0 0 0 1 0]
 [0 0 0 0 0]
 [1 1 0 0 0]
 [0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 1 1 0]
 [0 0 0 1 0]
 [1 0 0 0 0]
 [1 1 0 0 0]
 [0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 1 1 0]
 [0 0 0 1 0]
 [1 0 0 0 0]
 [1 1 0 0 0]
 [0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 1 1 0]
 [0 0 0 0 0]
 [1 0 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 1 1 0]
 [0 0 0 0 0]
 [1 0 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]]

Graph is disconnected after removing node 0, so we need to sample a new task.
Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 1 1 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]
Picked all tasks!
Final task: connected_nodes
Graph before final task:[[0 0 1 1 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0]
 [0 0 0 1 0]
 [0 0 0 0 0]
 [1 1 0 0 0]
 [0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 1 0]
 [0 0 0 1 0]
 [0 0 0 0 0]
 [1 1 0 0 0]
 [0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 1 0]
 [0 0 0 0 0]
 [0 0 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 1 0]
 [0 0 0 0 0]
 [0 0 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 1 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]
Picked all tasks!
Final task: print_adjacency_matrix
Graph before final task:[[0 0 0 1 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]
Generating graph 24
-------------------
Graph before chain:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 1]
 [0 0 0 0 0 0 1 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 0 1 0 0 0]
 [0 0 0 1 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 1]
 [0 0 0 0 0 0 1 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 0 1 0 0 0]
 [0 0 0 1 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 1 0 1 0]
 [0 0 0 0 0 0 1 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 1 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 1 0 1 0]
 [0 0 0 0 0 0 1 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 1 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 1 0 1 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_exists
Graph before final task:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 1 0 1 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 1]
 [0 0 0 0 0 0 1 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 0 1 0 0 0]
 [0 0 0 1 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 1]
 [0 0 0 0 0 0 1 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 0 1 0 0 0]
 [0 0 0 1 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0]
 [0 0 0 0 0 1 0 1]
 [0 0 0 0 0 0 1 0]
 [0 0 1 1 0 0 0 0]
 [0 0 1 0 1 0 0 0]
 [0 0 0 1 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0]
 [0 0 0 0 0 1 0 1]
 [0 0 0 0 0 0 1 0]
 [0 0 1 1 0 0 0 0]
 [0 0 1 0 1 0 0 0]
 [0 0 0 1 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0]
 [0 0 1 1 0 0 0]
 [0 0 0 1 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0]
 [0 0 1 1 0 0 0]
 [0 0 0 1 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 1 0 0 0]]
Picked all tasks!
Final task: cycle
Graph before final task:[[0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 1 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 1]
 [0 0 0 0 0 0 1 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 0 1 0 0 0]
 [0 0 0 1 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 1]
 [0 0 0 0 0 0 1 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 0 1 0 0 0]
 [0 0 0 1 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 1]
 [0 0 0 0 0 0 1 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 0 1 0 0 0]
 [0 0 0 1 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 1]
 [0 0 0 0 0 0 1 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 0 1 0 0 0]
 [0 0 0 1 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 1]
 [0 0 0 0 0 0 1 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 0 1 0 0 0]
 [0 0 0 1 0 0 0 0]]
Picked all tasks!
Final task: node_count
Graph before final task:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 1]
 [0 0 0 0 0 0 1 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 0 1 0 0 0]
 [0 0 0 1 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 1]
 [0 0 0 0 0 0 1 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 0 1 0 0 0]
 [0 0 0 1 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 1]
 [0 0 0 0 0 0 1 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 0 1 0 0 0]
 [0 0 0 1 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 1 1 0 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 1 1 0 0 0]
 [0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]]

Graph is disconnected after removing node 2, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_count
Graph before final task:[[0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 1]
 [0 0 0 0 0 0 1 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 0 1 0 0 0]
 [0 0 0 1 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 1]
 [0 0 0 0 0 0 1 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 0 1 0 0 0]
 [0 0 0 1 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 1]
 [1 0 0 0 0 0 1 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 0 1 0 0 0]
 [0 0 0 1 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 1]
 [1 0 0 0 0 0 1 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 0 1 0 0 0]
 [0 0 0 1 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 1]
 [1 0 0 0 0 0 1 1]
 [0 0 0 1 0 0 0 0]
 [0 0 1 0 1 0 0 0]
 [0 0 0 1 1 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 1]
 [1 0 0 0 0 0 1 1]
 [0 0 0 1 0 0 0 0]
 [0 0 1 0 1 0 0 0]
 [0 0 0 1 1 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 1 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 1 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 1]
 [1 0 0 0 0 0 1 1]
 [0 0 0 1 0 0 0 0]
 [0 0 1 0 1 0 0 0]
 [0 0 0 1 1 0 0 0]]
Picked all tasks!
Final task: node_degree
Graph before final task:[[0 0 0 0 1 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 1 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 1]
 [1 0 0 0 0 0 1 1]
 [0 0 0 1 0 0 0 0]
 [0 0 1 0 1 0 0 0]
 [0 0 0 1 1 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 1]
 [0 0 0 0 0 0 1 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 0 1 0 0 0]
 [0 0 0 1 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 1]
 [0 0 0 0 0 0 1 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 0 1 0 0 0]
 [0 0 0 1 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 1 0 1 0]
 [0 0 0 0 0 0 1 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 1 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 1 0 1 0]
 [0 0 0 0 0 0 1 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 1 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 0 0 1 0 0 0 0 0 0]
 [0 0 1 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: connected_nodes
Graph before final task:[[0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 0 0 1 0 0 0 0 0 0]
 [0 0 1 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 1]
 [0 0 0 0 0 0 1 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 0 1 0 0 0]
 [0 0 0 1 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 1]
 [0 0 0 0 0 0 1 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 0 1 0 0 0]
 [0 0 0 1 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 1]
 [0 0 0 0 0 0 1 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 0 1 0 0 0]
 [1 0 0 1 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 1]
 [0 0 0 0 0 0 1 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 0 1 0 0 0]
 [1 0 0 1 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 1 1 0 1]
 [0 0 0 1 0 0 1 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 0 1 0 0 0]
 [1 0 0 1 0 0 0 0]]
Picked all tasks!
Final task: print_adjacency_matrix
Graph before final task:[[0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 1 1 0 1]
 [0 0 0 1 0 0 1 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 0 1 0 0 0]
 [1 0 0 1 0 0 0 0]]
Generating graph 25
-------------------
Graph before chain:[[0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_exists
Graph before final task:[[0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Graph is disconnected after removing node 0, so we need to sample a new task.
Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: cycle
Graph before final task:[[0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 1 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: node_count
Graph before final task:[[0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_count
Graph before final task:[[0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Graph is disconnected after removing node 4, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: node_degree
Graph before final task:[[0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: connected_nodes
Graph before final task:[[0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: print_adjacency_matrix
Graph before final task:[[0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Generating graph 26
-------------------
Graph before chain:[[0 0 0 1 0]
 [0 0 0 0 0]
 [0 0 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 1 0]
 [0 0 0 0 0]
 [0 0 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]]

Graph is disconnected after removing node 0, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 0]
 [0 0 0 0 0]
 [0 0 0 1 0]
 [1 0 1 0 0]
 [0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 1 0]
 [0 0 0 0 0]
 [0 0 0 1 0]
 [1 0 1 0 0]
 [0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 1 0]
 [0 0 0 0 0]
 [0 0 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]]
Picked all tasks!
Final task: edge_exists
Graph before final task:[[0 0 0 1 0]
 [0 0 0 0 0]
 [0 0 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0]
 [0 0 0 0 0]
 [0 0 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 1 0]
 [0 0 0 0 0]
 [0 0 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]]

Graph is disconnected after removing node 0, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 0]
 [0 0 0 1 0]
 [0 0 0 0 0]
 [1 1 0 0 0]
 [0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 1 0]
 [0 0 0 1 0]
 [0 0 0 0 0]
 [1 1 0 0 0]
 [0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 1 0 0]
 [0 0 0 1 0 0]
 [0 0 0 0 0 0]
 [1 1 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 1 0 0]
 [0 0 0 1 0 0]
 [0 0 0 0 0 0]
 [1 1 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]

Graph is disconnected after removing node 3, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 0 0]
 [0 0 0 1 0 0]
 [0 0 0 1 0 0]
 [1 1 1 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]
Picked all tasks!
Final task: cycle
Graph before final task:[[0 0 0 1 0 0]
 [0 0 0 1 0 0]
 [0 0 0 1 0 0]
 [1 1 1 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0]
 [0 0 0 0 0]
 [0 0 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 1 0]
 [0 0 0 0 0]
 [0 0 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]]

Graph is disconnected after removing node 0, so we need to sample a new task.
Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 1 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 1 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0]]
Picked all tasks!
Final task: node_count
Graph before final task:[[0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0]
 [0 0 0 0 0]
 [0 0 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 1 0]
 [0 0 0 0 0]
 [0 0 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 1 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 1 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]

Graph is disconnected after removing node 0, so we need to sample a new task.
Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_count
Graph before final task:[[0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0]
 [0 0 0 0 0]
 [0 0 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 1 0]
 [0 0 0 0 0]
 [0 0 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 1]
 [0 0 0 0 0]
 [0 0 0 0 0]
 [1 0 0 0 0]
 [1 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 1 1]
 [0 0 0 0 0]
 [0 0 0 0 0]
 [1 0 0 0 0]
 [1 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 1 1 1]
 [0 0 0 0 0]
 [1 0 0 0 0]
 [1 0 0 0 0]
 [1 0 0 0 0]]
Picked all tasks!
Final task: node_degree
Graph before final task:[[0 0 1 1 1]
 [0 0 0 0 0]
 [1 0 0 0 0]
 [1 0 0 0 0]
 [1 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0]
 [0 0 0 0 0]
 [0 0 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 1 0]
 [0 0 0 0 0]
 [0 0 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 0]
 [0 0 0 0 0]
 [0 0 0 0 1]
 [1 0 0 0 0]
 [0 0 1 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 1 0]
 [0 0 0 0 0]
 [0 0 0 0 1]
 [1 0 0 0 0]
 [0 0 1 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 1]
 [0 0 0 0]
 [0 0 0 0]
 [1 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 1]
 [0 0 0 0]
 [0 0 0 0]
 [1 0 0 0]]

Graph has only one edge or one node, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1]
 [0 0 1 0]
 [0 1 0 0]
 [1 0 0 0]]
Picked all tasks!
Final task: connected_nodes
Graph before final task:[[0 0 0 1]
 [0 0 1 0]
 [0 1 0 0]
 [1 0 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0]
 [0 0 0 0 0]
 [0 0 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 1 0]
 [0 0 0 0 0]
 [0 0 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]]

Graph has only one edge or one node, so we need to sample a new task.
Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 1 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 1 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 0 0]
 [0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 1 0 0 0 0]
 [0 0 0 0 0 0]]
Picked all tasks!
Final task: print_adjacency_matrix
Graph before final task:[[0 0 0 1 0 0]
 [0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 1 0 0 0 0]
 [0 0 0 0 0 0]]
Generating graph 27
-------------------
Graph before chain:[[0 0 0 1 0 0 1 0 1 0]
 [0 0 0 1 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0]
 [1 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 1 0]
 [0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 1 0 0 1 0 1 0]
 [0 0 0 1 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0]
 [1 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 1 0]
 [0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 1 0 0 1 0 1 0]
 [0 0 0 1 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0]
 [1 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 1 0]
 [0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 1 0 0 1 0 1 0]
 [0 0 0 1 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0]
 [1 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 1 0]
 [0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 1 0 0 1 0 1 0 0]
 [0 0 0 1 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0]
 [1 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 1 0 0]
 [0 0 1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_exists
Graph before final task:[[0 0 0 1 0 0 1 0 1 0 0]
 [0 0 0 1 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0]
 [1 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 1 0 0]
 [0 0 1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0 0 1 0 1 0]
 [0 0 0 1 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0]
 [1 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 1 0]
 [0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 1 0 0 1 0 1 0]
 [0 0 0 1 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0]
 [1 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 1 0]
 [0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 1 0 0 1 0 1 0]
 [0 0 0 1 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0]
 [1 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 1 0]
 [0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 1 0 0 1 0 1 0]
 [0 0 0 1 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0]
 [1 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 1 0]
 [0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 1 0 1 0 1 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0]
 [1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 1 0]
 [0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 1 0 1 0 1 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0]
 [1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 1 0]
 [0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 1 0 1 0 1 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: cycle
Graph before final task:[[0 0 0 1 0 1 0 1 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0 0 1 0 1 0]
 [0 0 0 1 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0]
 [1 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 1 0]
 [0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 1 0 0 1 0 1 0]
 [0 0 0 1 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0]
 [1 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 1 0]
 [0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 0 0 1 0 1 0]
 [0 0 0 1 0 1 0 0 0 1]
 [0 0 0 1 0 0 0 1 0 0]
 [1 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 1 0]
 [0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 1 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 1 0 0 1 0 1 0]
 [0 0 0 1 0 1 0 0 0 1]
 [0 0 0 1 0 0 0 1 0 0]
 [1 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 1 0]
 [0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 1 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 1 0 0 1 0 1 0 0]
 [0 0 0 1 0 1 0 0 0 1 0]
 [0 0 0 1 0 0 0 1 0 0 0]
 [1 1 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 1 0 0]
 [0 0 1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 1 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 1 0 0 1 0 1 0 0]
 [0 0 0 1 0 1 0 0 0 1 0]
 [0 0 0 1 0 0 0 1 0 0 0]
 [1 1 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 1 0 0]
 [0 0 1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 1 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 0 1 0 1 0 0]
 [0 0 0 0 1 0 0 0 1 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 1 0 0]
 [0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: node_count
Graph before final task:[[0 0 0 0 0 1 0 1 0 0]
 [0 0 0 0 1 0 0 0 1 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 1 0 0]
 [0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0 0 1 0 1 0]
 [0 0 0 1 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0]
 [1 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 1 0]
 [0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 1 0 0 1 0 1 0]
 [0 0 0 1 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0]
 [1 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 1 0]
 [0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 0 0 1 0 1 0]
 [0 0 0 1 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0]
 [1 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 1 0 0 1 0 0 0 1 0]
 [1 0 0 0 0 0 0 0 1 0]
 [0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 1 0 0 1 0 1 0]
 [0 0 0 1 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0]
 [1 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 1 0 0 1 0 0 0 1 0]
 [1 0 0 0 0 0 0 0 1 0]
 [0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 1 0 0 1 0 1 0]
 [0 0 0 1 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0]
 [1 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 1 0 0 1 0 0 0 1 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 1 0 0 1 0 1 0]
 [0 0 0 1 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0]
 [1 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 1 0 0 1 0 0 0 1 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 1 0 0 1 0 1 0]
 [0 0 0 1 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0]
 [1 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 1 0 0 1 0 0 0 1 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_count
Graph before final task:[[0 0 0 1 0 0 1 0 1 0]
 [0 0 0 1 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0]
 [1 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 1 0 0 1 0 0 0 1 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0 0 1 0 1 0]
 [0 0 0 1 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0]
 [1 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 1 0]
 [0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 1 0 0 1 0 1 0]
 [0 0 0 1 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0]
 [1 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 1 0]
 [0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 1 0 0 1 0 1 0 0]
 [0 0 0 1 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0]
 [1 1 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 1 0 0]
 [0 0 1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 1 0 0 1 0 1 0 0]
 [0 0 0 1 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0]
 [1 1 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 1 0 0]
 [0 0 1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 1 0 0 1 0 1 0 0]
 [0 0 0 1 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0]
 [1 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 1 0 0]
 [0 0 1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 1 0 0 1 0 1 0 0]
 [0 0 0 1 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0]
 [1 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 1 0 0]
 [0 0 1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 0 0 1 0 1 0 0]
 [0 0 0 1 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0]
 [1 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 1 0 0]
 [0 0 1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: node_degree
Graph before final task:[[0 0 0 1 0 0 1 0 1 0 0]
 [0 0 0 1 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0]
 [1 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 1 0 0]
 [0 0 1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0 0 1 0 1 0]
 [0 0 0 1 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0]
 [1 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 1 0]
 [0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 1 0 0 1 0 1 0]
 [0 0 0 1 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0]
 [1 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 1 0]
 [0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 1 0 0 1 0 1 0 0]
 [0 0 0 1 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0]
 [1 1 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 1 0 0]
 [0 0 1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 1 0 0 1 0 1 0 0]
 [0 0 0 1 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0]
 [1 1 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 1 0 0]
 [0 0 1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 1 0 0 1 0 1 0 0 0]
 [0 0 0 1 0 1 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 0]
 [1 1 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 1 0 0 1 0 1 0 0 0]
 [0 0 0 1 0 1 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 0]
 [1 1 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 1 0 1 0 1 0 0 0]
 [0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 1 0 0 1 0 0 0 0]
 [1 1 1 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 1 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: connected_nodes
Graph before final task:[[0 0 0 1 0 1 0 1 0 0 0]
 [0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 1 0 0 1 0 0 0 0]
 [1 1 1 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 1 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0 0 1 0 1 0]
 [0 0 0 1 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0]
 [1 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 1 0]
 [0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 1 0 0 1 0 1 0]
 [0 0 0 1 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0]
 [1 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 1 0]
 [0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 0 0 1 1 1 0]
 [0 0 0 1 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0]
 [1 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 1 0]
 [1 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 1 0 0 1 1 1 0]
 [0 0 0 1 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0]
 [1 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 1 0]
 [1 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 1 0 0 1 1 1 0 0]
 [0 0 0 1 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0]
 [1 1 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 1 0 0]
 [1 0 1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 1 0 0 1 1 1 0 0]
 [0 0 0 1 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0]
 [1 1 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 1 0 0]
 [1 0 1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0 1 1 1 0 0]
 [0 0 0 1 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0]
 [0 1 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 1 0 0]
 [1 0 1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: print_adjacency_matrix
Graph before final task:[[0 0 0 0 0 0 1 1 1 0 0]
 [0 0 0 1 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0]
 [0 1 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 1 0 0]
 [1 0 1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Generating graph 28
-------------------
Graph before chain:[[0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]

Graph is disconnected after removing node 1, so we need to sample a new task.
Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Graph is disconnected after removing node 1, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]]
Picked all tasks!
Final task: edge_exists
Graph before final task:[[0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 1 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: cycle
Graph before final task:[[0 0 0 0 0 0 1 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]

Graph is disconnected after removing node 1, so we need to sample a new task.
Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]

Graph is disconnected after removing node 1, so we need to sample a new task.
Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: node_count
Graph before final task:[[0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Graph has only one edge or one node, so we need to sample a new task.
Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_count
Graph before final task:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 1 0 1 0 0]
 [0 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: node_degree
Graph before final task:[[0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 1 0 1 0 0]
 [0 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]

Graph has only one edge or one node, so we need to sample a new task.
Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: connected_nodes
Graph before final task:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]

Graph has only one edge or one node, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 1 0 0 0 0 0]
 [1 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 1 0 0 0 0 0]
 [1 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]

Graph is disconnected after removing node 1, so we need to sample a new task.
Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 1 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: print_adjacency_matrix
Graph before final task:[[0 1 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Generating graph 29
-------------------
Graph before chain:[[0 0 0 0 1]
 [0 0 0 0 0]
 [0 0 0 1 1]
 [0 0 1 0 1]
 [1 0 1 1 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 1]
 [0 0 0 0 0]
 [0 0 0 1 1]
 [0 0 1 0 1]
 [1 0 1 1 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 1]
 [0 0 0 0 0]
 [0 0 0 0 1]
 [0 0 0 0 1]
 [1 0 1 1 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 1]
 [0 0 0 0 0]
 [0 0 0 0 1]
 [0 0 0 0 1]
 [1 0 1 1 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 1]
 [0 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 1]
 [1 0 0 1 0]]
Picked all tasks!
Final task: edge_exists
Graph before final task:[[0 0 0 0 1]
 [0 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 1]
 [1 0 0 1 0]]
-------------------
Graph before chain:[[0 0 0 0 1]
 [0 0 0 0 0]
 [0 0 0 1 1]
 [0 0 1 0 1]
 [1 0 1 1 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 1]
 [0 0 0 0 0]
 [0 0 0 1 1]
 [0 0 1 0 1]
 [1 0 1 1 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 1 1]
 [0 0 1 0 1]
 [0 0 1 1 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 1 1]
 [0 0 1 0 1]
 [0 0 1 1 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 1]
 [0 0 0 0 0]
 [0 0 0 1 1]
 [0 0 1 0 1]
 [1 0 1 1 0]]
Picked all tasks!
Final task: cycle
Graph before final task:[[0 0 0 0 1]
 [0 0 0 0 0]
 [0 0 0 1 1]
 [0 0 1 0 1]
 [1 0 1 1 0]]
-------------------
Graph before chain:[[0 0 0 0 1]
 [0 0 0 0 0]
 [0 0 0 1 1]
 [0 0 1 0 1]
 [1 0 1 1 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 1]
 [0 0 0 0 0]
 [0 0 0 1 1]
 [0 0 1 0 1]
 [1 0 1 1 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 1]
 [0 0 0 0]
 [0 0 0 1]
 [1 0 1 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 1]
 [0 0 0 0]
 [0 0 0 1]
 [1 0 1 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 1]
 [0 0 0 0]
 [0 0 0 1]
 [1 0 1 0]]
Picked all tasks!
Final task: node_count
Graph before final task:[[0 0 0 1]
 [0 0 0 0]
 [0 0 0 1]
 [1 0 1 0]]
-------------------
Graph before chain:[[0 0 0 0 1]
 [0 0 0 0 0]
 [0 0 0 1 1]
 [0 0 1 0 1]
 [1 0 1 1 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 1]
 [0 0 0 0 0]
 [0 0 0 1 1]
 [0 0 1 0 1]
 [1 0 1 1 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 1]
 [0 0 0 0 0]
 [0 0 0 1 1]
 [0 0 1 0 0]
 [1 0 1 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 1]
 [0 0 0 0 0]
 [0 0 0 1 1]
 [0 0 1 0 0]
 [1 0 1 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 1]
 [0 0 1 1]
 [0 1 0 0]
 [1 1 0 0]]
Picked all tasks!
Final task: edge_count
Graph before final task:[[0 0 0 1]
 [0 0 1 1]
 [0 1 0 0]
 [1 1 0 0]]
-------------------
Graph before chain:[[0 0 0 0 1]
 [0 0 0 0 0]
 [0 0 0 1 1]
 [0 0 1 0 1]
 [1 0 1 1 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 1]
 [0 0 0 0 0]
 [0 0 0 1 1]
 [0 0 1 0 1]
 [1 0 1 1 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 1]
 [0 0 0 0 1]
 [0 0 0 1 1]
 [0 0 1 0 1]
 [1 1 1 1 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 1]
 [0 0 0 0 1]
 [0 0 0 1 1]
 [0 0 1 0 1]
 [1 1 1 1 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 1]
 [0 0 1 1]
 [0 1 0 1]
 [1 1 1 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 1]
 [0 0 1 1]
 [0 1 0 1]
 [1 1 1 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 1]
 [0 0 1]
 [1 1 0]]
Picked all tasks!
Final task: node_degree
Graph before final task:[[0 0 1]
 [0 0 1]
 [1 1 0]]
-------------------
Graph before chain:[[0 0 0 0 1]
 [0 0 0 0 0]
 [0 0 0 1 1]
 [0 0 1 0 1]
 [1 0 1 1 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 1]
 [0 0 0 0 0]
 [0 0 0 1 1]
 [0 0 1 0 1]
 [1 0 1 1 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 1]
 [0 0 0 0 0]
 [0 0 0 1 1]
 [0 0 1 0 0]
 [1 0 1 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 1]
 [0 0 0 0 0]
 [0 0 0 1 1]
 [0 0 1 0 0]
 [1 0 1 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 1 1]
 [0 0 1 0 0]
 [0 0 1 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 1 1]
 [0 0 1 0 0]
 [0 0 1 0 0]]

Graph is disconnected after removing node 2, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0]
 [0 0 0 0 1]
 [0 0 0 1 1]
 [0 0 1 0 0]
 [0 1 1 0 0]]
Picked all tasks!
Final task: connected_nodes
Graph before final task:[[0 0 0 0 0]
 [0 0 0 0 1]
 [0 0 0 1 1]
 [0 0 1 0 0]
 [0 1 1 0 0]]
-------------------
Graph before chain:[[0 0 0 0 1]
 [0 0 0 0 0]
 [0 0 0 1 1]
 [0 0 1 0 1]
 [1 0 1 1 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 1]
 [0 0 0 0 0]
 [0 0 0 1 1]
 [0 0 1 0 1]
 [1 0 1 1 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 1 0 0 1]
 [1 0 0 0 0]
 [0 0 0 1 1]
 [0 0 1 0 1]
 [1 0 1 1 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 1 0 0 1]
 [1 0 0 0 0]
 [0 0 0 1 1]
 [0 0 1 0 1]
 [1 0 1 1 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 1 0 0 1]
 [1 0 0 0 0]
 [0 0 0 0 1]
 [0 0 0 0 1]
 [1 0 1 1 0]]
Picked all tasks!
Final task: print_adjacency_matrix
Graph before final task:[[0 1 0 0 1]
 [1 0 0 0 0]
 [0 0 0 0 1]
 [0 0 0 0 1]
 [1 0 1 1 0]]
Generating graph 30
-------------------
Graph before chain:[[0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 1 0 0]
 [0 1 0 0 1 0 1 0 0 0]
 [0 0 0 0 0 0 1 1 0 0]
 [0 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 1 1 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 1 0 0]
 [0 1 0 0 1 0 1 0 0 0]
 [0 0 0 0 0 0 1 1 0 0]
 [0 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 1 1 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 1 0 0]
 [0 1 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 1 1 0 0]
 [0 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 1 0 0]
 [0 1 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 1 1 0 0]
 [0 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 1 0 0 0]
 [0 1 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 1 0 0 0]
 [0 1 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 1 0 0 0]
 [0 1 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 1 0 0 0]
 [0 1 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 1 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 1 0 0 0 0]
 [0 1 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_exists
Graph before final task:[[0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 1 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 1 0 0 0 0]
 [0 1 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 1 0 0]
 [0 1 0 0 1 0 1 0 0 0]
 [0 0 0 0 0 0 1 1 0 0]
 [0 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 1 1 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 1 0 0]
 [0 1 0 0 1 0 1 0 0 0]
 [0 0 0 0 0 0 1 1 0 0]
 [0 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 1 1 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 1 0 0]
 [0 1 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 1 1 0 0]
 [0 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 1 0 0]
 [0 1 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 1 1 0 0]
 [0 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 0 1 0 0]
 [0 1 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 1 1 0 0]
 [0 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: cycle
Graph before final task:[[0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 0 1 0 0]
 [0 1 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 1 1 0 0]
 [0 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 1 0 0]
 [0 1 0 0 1 0 1 0 0 0]
 [0 0 0 0 0 0 1 1 0 0]
 [0 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 1 1 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 1 0 0]
 [0 1 0 0 1 0 1 0 0 0]
 [0 0 0 0 0 0 1 1 0 0]
 [0 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 1 1 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 1 0 0 0]
 [0 1 0 0 1 0 1 0 0 0 0]
 [0 0 0 0 0 0 1 1 0 0 0]
 [0 1 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 1 1 1 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 1 0 0 0]
 [0 1 0 0 1 0 1 0 0 0 0]
 [0 0 0 0 0 0 1 1 0 0 0]
 [0 1 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 1 1 1 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 1 1 0 0 0]
 [0 0 0 0 1 0 1 0 0 0 0]
 [0 0 0 0 0 0 1 1 0 0 0]
 [0 1 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 1 1 1 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: node_count
Graph before final task:[[0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 1 1 0 0 0]
 [0 0 0 0 1 0 1 0 0 0 0]
 [0 0 0 0 0 0 1 1 0 0 0]
 [0 1 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 1 1 1 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 1 0 0]
 [0 1 0 0 1 0 1 0 0 0]
 [0 0 0 0 0 0 1 1 0 0]
 [0 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 1 1 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 1 0 0]
 [0 1 0 0 1 0 1 0 0 0]
 [0 0 0 0 0 0 1 1 0 0]
 [0 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 1 1 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 1 0]
 [0 1 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 1 1 0]
 [0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 1 1 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 1 0]
 [0 1 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 1 1 0]
 [0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 1 1 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 1 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 1 0]
 [1 1 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 1 1 0]
 [0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 1 1 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 1 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 1 0]
 [1 1 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 1 1 0]
 [0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 1 1 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 1 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 1 0 0]
 [1 1 0 0 1 0 1 0 0 0]
 [0 0 0 0 0 0 1 1 0 0]
 [0 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 1 1 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_count
Graph before final task:[[0 0 1 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 1 0 0]
 [1 1 0 0 1 0 1 0 0 0]
 [0 0 0 0 0 0 1 1 0 0]
 [0 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 1 1 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 1 0 0]
 [0 1 0 0 1 0 1 0 0 0]
 [0 0 0 0 0 0 1 1 0 0]
 [0 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 1 1 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 1 0 0]
 [0 1 0 0 1 0 1 0 0 0]
 [0 0 0 0 0 0 1 1 0 0]
 [0 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 1 1 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 1 0 0]
 [0 1 0 0 1 0 1 0 0 1]
 [0 0 0 0 0 0 1 1 0 0]
 [0 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 1 1 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 1 0 0]
 [0 1 0 0 1 0 1 0 0 1]
 [0 0 0 0 0 0 1 1 0 0]
 [0 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 1 1 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 1 0 0 0 0 0]
 [0 0 1 0 1 0 1 1 0 0]
 [0 1 0 0 1 0 1 0 0 1]
 [0 0 0 0 0 0 1 1 0 0]
 [1 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 1 1 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: node_degree
Graph before final task:[[0 0 0 0 1 0 0 0 0 0]
 [0 0 1 0 1 0 1 1 0 0]
 [0 1 0 0 1 0 1 0 0 1]
 [0 0 0 0 0 0 1 1 0 0]
 [1 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 1 1 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 1 0 0]
 [0 1 0 0 1 0 1 0 0 0]
 [0 0 0 0 0 0 1 1 0 0]
 [0 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 1 1 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 1 0 0]
 [0 1 0 0 1 0 1 0 0 0]
 [0 0 0 0 0 0 1 1 0 0]
 [0 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 1 1 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 1 0 0]
 [0 1 0 0 1 0 1 0 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 1 1 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 1 0 0]
 [0 1 0 0 1 0 1 0 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 1 1 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0 0 0 0]
 [0 0 1 1 1 0 1 1 0 0]
 [0 1 0 0 1 0 1 0 0 0]
 [0 1 0 0 0 0 1 0 0 0]
 [0 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 1 1 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 0 0 0 0 0]
 [0 0 1 1 1 0 1 1 0 0]
 [0 1 0 0 1 0 1 0 0 0]
 [0 1 0 0 0 0 1 0 0 0]
 [0 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 1 1 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0 0 0 0 0]
 [0 0 1 1 1 0 1 0 0 0]
 [0 1 0 0 1 0 1 0 0 0]
 [0 1 0 0 0 0 1 0 0 0]
 [0 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: connected_nodes
Graph before final task:[[0 0 0 0 0 0 0 0 0 0]
 [0 0 1 1 1 0 1 0 0 0]
 [0 1 0 0 1 0 1 0 0 0]
 [0 1 0 0 0 0 1 0 0 0]
 [0 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 1 0 0]
 [0 1 0 0 1 0 1 0 0 0]
 [0 0 0 0 0 0 1 1 0 0]
 [0 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 1 1 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 1 0 0]
 [0 1 0 0 1 0 1 0 0 0]
 [0 0 0 0 0 0 1 1 0 0]
 [0 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 1 1 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 1 0]
 [0 1 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 1 1 0]
 [0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 1 1 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 1 0]
 [0 1 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 1 1 0]
 [0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 1 1 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 1 0]
 [0 1 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 1 1 0]
 [0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 1 1 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 1 0]
 [0 1 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 1 1 0]
 [0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 1 1 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 1 0]
 [0 1 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 1 1 0]
 [0 1 1 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 1 1 0 0 0 0 0]
 [0 1 0 1 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: print_adjacency_matrix
Graph before final task:[[0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 1 0]
 [0 1 0 0 1 0 1 0 0]
 [0 0 0 0 0 0 1 1 0]
 [0 1 1 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 1 1 0 0 0 0 0]
 [0 1 0 1 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Generating graph 31
-------------------
Graph before chain:[[0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [1 0 0 0 1 0 0]
 [1 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [1 0 0 0 1 0 0]
 [1 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Graph is disconnected after removing node 0, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]
 [1 0 0 0 1 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_exists
Graph before final task:[[0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]
 [1 0 0 0 1 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [1 0 0 0 1 0 0]
 [1 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [1 0 0 0 1 0 0]
 [1 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 1 0 0]
 [1 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 1 0 0]
 [1 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 1]
 [0 0 1 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 1 0 0]
 [1 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 1]
 [0 0 1 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 1 0 0]
 [1 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 0 1]
 [0 0 1 0 0 0]
 [0 1 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]]
Picked all tasks!
Final task: cycle
Graph before final task:[[0 0 0 0 0 1]
 [0 0 1 0 0 0]
 [0 1 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [1 0 0 0 1 0 0]
 [1 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [1 0 0 0 1 0 0]
 [1 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]
 [1 0 0 0 1 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]
 [1 0 0 0 1 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 1 1 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0]
 [1 0 0 0 1 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 1 1 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0]
 [1 0 0 0 1 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 1 1 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [1 0 0 1 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: node_count
Graph before final task:[[0 0 0 0 1 1 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [1 0 0 1 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [1 0 0 0 1 0 0]
 [1 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [1 0 0 0 1 0 0]
 [1 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]
 [1 0 0 0 1 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]
 [1 0 0 0 1 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 1 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 1 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 1 0 0 0 0 1 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 1 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_count
Graph before final task:[[0 1 0 0 0 0 1 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 1 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [1 0 0 0 1 0 0]
 [1 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [1 0 0 0 1 0 0]
 [1 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 1 1]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [1 0 0 1 0 0]
 [1 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 1 1]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [1 0 0 1 0 0]
 [1 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 1 1]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [1 0 0 1 0 0]
 [1 0 0 0 0 0]]
Picked all tasks!
Final task: node_degree
Graph before final task:[[0 0 0 0 1 1]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [1 0 0 1 0 0]
 [1 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [1 0 0 0 1 0 0]
 [1 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [1 0 0 0 1 0 0]
 [1 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 1 0 0]
 [1 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 1 0 0]
 [1 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 1 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 1 0 0]
 [0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 1 0 0]
 [0 0 0 0 0 0]]
Picked all tasks!
Final task: connected_nodes
Graph before final task:[[0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 1 0 0]
 [0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [1 0 0 0 1 0 0]
 [1 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [1 0 0 0 1 0 0]
 [1 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]
 [1 0 0 0 1 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]
 [1 0 0 0 1 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0]
 [1 0 0 1 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Picked all tasks!
Final task: print_adjacency_matrix
Graph before final task:[[0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0]
 [1 0 0 1 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Generating graph 32
-------------------
Graph before chain:[[0 0 1 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 1 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 1 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 1 0 0]
 [0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 1 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 1 0 0]
 [0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]

Graph is disconnected after removing node 3, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0]]
Picked all tasks!
Final task: edge_exists
Graph before final task:[[0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 1 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 1 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 1 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 1 0 0]
 [0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 1 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 1 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Picked all tasks!
Final task: cycle
Graph before final task:[[0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 1 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 1 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 1 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 1 0 0]
 [0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 1 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 1 0 0]
 [0 0 0 0 0 0]]

Graph has only one edge or one node, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [1 0 0 1 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [1 0 0 1 0 0]
 [0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 0 1 0 0]
 [0 0 1 0 1 0]
 [1 0 0 1 0 0]
 [0 0 0 0 0 0]]
Picked all tasks!
Final task: node_count
Graph before final task:[[0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 0 1 0 0]
 [0 0 1 0 1 0]
 [1 0 0 1 0 0]
 [0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 1 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 1 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 1 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 1 0 0]
 [0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 1 0]
 [0 0 1 0 0]
 [0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 1 0]
 [0 0 1 0 0]
 [0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 1 1]
 [0 0 1 0 0]
 [0 0 1 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 1 1]
 [0 0 1 0 0]
 [0 0 1 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 1 1]
 [0 0 1 0 0]
 [0 0 1 0 0]]
Picked all tasks!
Final task: edge_count
Graph before final task:[[0 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 1 1]
 [0 0 1 0 0]
 [0 0 1 0 0]]
-------------------
Graph before chain:[[0 0 1 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 1 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 1 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 1 0 0]
 [0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 1 0 0]
 [0 0 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 1]
 [0 0 0 1 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 1 0 0]
 [0 0 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 1]
 [0 0 0 1 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 1 0 0]
 [0 0 0 0 0]
 [1 0 0 0 1]
 [0 0 0 0 1]
 [0 0 1 1 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 1 0 0]
 [0 0 0 0 0]
 [1 0 0 0 1]
 [0 0 0 0 1]
 [0 0 1 1 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 1 0]
 [0 0 0 0]
 [1 0 0 1]
 [0 0 1 0]]
Picked all tasks!
Final task: node_degree
Graph before final task:[[0 0 1 0]
 [0 0 0 0]
 [1 0 0 1]
 [0 0 1 0]]
-------------------
Graph before chain:[[0 0 1 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 1 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 1 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 1 0 0]
 [0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 1 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 1 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: connected_nodes
Graph before final task:[[0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 1 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 1 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 1 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 1 0 0]
 [0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 1 0]
 [0 0 1 0 0]
 [0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 1 0]
 [0 0 1 0 0]
 [0 0 0 0 0]]

Graph has only one edge or one node, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 1 0 0 0]
 [1 0 0 0 0]
 [0 0 0 1 0]
 [0 0 1 0 0]
 [0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 1 0 0 0]
 [1 0 0 0 0]
 [0 0 0 1 0]
 [0 0 1 0 0]
 [0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 1 0]
 [0 0 1 0 0]
 [0 0 0 0 0]]
Picked all tasks!
Final task: print_adjacency_matrix
Graph before final task:[[0 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 1 0]
 [0 0 1 0 0]
 [0 0 0 0 0]]
Generating graph 33
-------------------
Graph before chain:[[0 0 0 1 0]
 [0 0 1 0 0]
 [0 1 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 1 0]
 [0 0 1 0 0]
 [0 1 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 1 0 0]
 [0 0 1 0 0 0]
 [0 1 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 1 0 0]
 [0 0 1 0 0 0]
 [0 1 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0]
 [0 0 1 0 0 0]
 [0 1 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 0]
 [0 0 1 0 0 0]
 [0 1 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_exists
Graph before final task:[[0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0]
 [0 0 1 0 0]
 [0 1 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 1 0]
 [0 0 1 0 0]
 [0 1 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0]
 [0 0 1 0]
 [0 1 0 0]
 [0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0]
 [0 0 1 0]
 [0 1 0 0]
 [0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0]
 [0 0 1 0]
 [0 1 0 0]
 [0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0]
 [0 0 1 0]
 [0 1 0 0]
 [0 0 0 0]]

Graph is disconnected after removing node 1, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1]
 [0 0 1 0]
 [0 1 0 0]
 [1 0 0 0]]
Picked all tasks!
Final task: cycle
Graph before final task:[[0 0 0 1]
 [0 0 1 0]
 [0 1 0 0]
 [1 0 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0]
 [0 0 1 0 0]
 [0 1 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 1 0]
 [0 0 1 0 0]
 [0 1 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 0]
 [0 0 1 0 0]
 [0 1 0 0 0]
 [1 0 0 0 1]
 [0 0 0 1 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 1 0]
 [0 0 1 0 0]
 [0 1 0 0 0]
 [1 0 0 0 1]
 [0 0 0 1 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 0]
 [0 0 1 1 0]
 [0 1 0 0 0]
 [1 1 0 0 1]
 [0 0 0 1 0]]
Picked all tasks!
Final task: node_count
Graph before final task:[[0 0 0 1 0]
 [0 0 1 1 0]
 [0 1 0 0 0]
 [1 1 0 0 1]
 [0 0 0 1 0]]
-------------------
Graph before chain:[[0 0 0 1 0]
 [0 0 1 0 0]
 [0 1 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 1 0]
 [0 0 1 0 0]
 [0 1 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 1 0 0]
 [0 0 1 0 0 0]
 [0 1 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 1 0 0]
 [0 0 1 0 0 0]
 [0 1 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 0 0]
 [0 0 1 0 0 0]
 [0 1 0 0 1 0]
 [1 0 0 0 0 0]
 [0 0 1 0 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 1 0 0]
 [0 0 1 0 0 0]
 [0 1 0 0 1 0]
 [1 0 0 0 0 0]
 [0 0 1 0 0 0]
 [0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 1 0 0 0]
 [0 0 1 0 0 0 0]
 [0 1 0 0 1 0 0]
 [1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_count
Graph before final task:[[0 0 0 1 0 0 0]
 [0 0 1 0 0 0 0]
 [0 1 0 0 1 0 0]
 [1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0]
 [0 0 1 0 0]
 [0 1 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 1 0]
 [0 0 1 0 0]
 [0 1 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 0]
 [0 0 1 0 0]
 [0 1 0 1 0]
 [1 0 1 0 0]
 [0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 1 0]
 [0 0 1 0 0]
 [0 1 0 1 0]
 [1 0 1 0 0]
 [0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 1 0 0]
 [1 0 1 0]
 [0 1 0 0]
 [0 0 0 0]]
Picked all tasks!
Final task: node_degree
Graph before final task:[[0 1 0 0]
 [1 0 1 0]
 [0 1 0 0]
 [0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0]
 [0 0 1 0 0]
 [0 1 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 1 0]
 [0 0 1 0 0]
 [0 1 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 0]
 [0 0 1 1 0]
 [0 1 0 0 0]
 [1 1 0 0 0]
 [0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 1 0]
 [0 0 1 1 0]
 [0 1 0 0 0]
 [1 1 0 0 0]
 [0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 0]
 [0 0 1 1 0]
 [0 1 0 0 1]
 [1 1 0 0 0]
 [0 0 1 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 1 0]
 [0 0 1 1 0]
 [0 1 0 0 1]
 [1 1 0 0 0]
 [0 0 1 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 1 0 0]
 [0 0 1 1 0 0]
 [0 1 0 0 1 0]
 [1 1 0 0 0 0]
 [0 0 1 0 0 0]
 [0 0 0 0 0 0]]
Picked all tasks!
Final task: connected_nodes
Graph before final task:[[0 0 0 1 0 0]
 [0 0 1 1 0 0]
 [0 1 0 0 1 0]
 [1 1 0 0 0 0]
 [0 0 1 0 0 0]
 [0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0]
 [0 0 1 0 0]
 [0 1 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 1 0]
 [0 0 1 0 0]
 [0 1 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 1 0]
 [0 0 0 0]
 [1 0 0 0]
 [0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 1 0]
 [0 0 0 0]
 [1 0 0 0]
 [0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 1 0]
 [0 0 0 0]
 [1 0 0 0]
 [0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 1 0]
 [0 0 0 0]
 [1 0 0 0]
 [0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 1 0]
 [0 0 0 0]
 [1 0 0 0]
 [0 0 0 0]]
Picked all tasks!
Final task: print_adjacency_matrix
Graph before final task:[[0 0 1 0]
 [0 0 0 0]
 [1 0 0 0]
 [0 0 0 0]]
Generating graph 34
-------------------
Graph before chain:[[0 0 0 0 0 1 0 1]
 [0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [1 1 0 0 0 0 0 0]
 [0 1 1 0 1 0 0 0]
 [1 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 1 0 1]
 [0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [1 1 0 0 0 0 0 0]
 [0 1 1 0 1 0 0 0]
 [1 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 1 0 1 0]
 [0 0 0 0 0 1 1 0 0]
 [0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0]
 [1 1 0 0 0 0 0 0 0]
 [0 1 1 0 1 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 1 0 1 0]
 [0 0 0 0 0 1 1 0 0]
 [0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0]
 [1 1 0 0 0 0 0 0 0]
 [0 1 1 0 1 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 1 1 0 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [1 1 0 0 0 0 0 0 0 0]
 [0 1 1 0 1 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_exists
Graph before final task:[[0 0 0 0 0 1 0 1 0 0]
 [0 0 0 0 0 1 1 0 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [1 1 0 0 0 0 0 0 0 0]
 [0 1 1 0 1 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 1 0 1]
 [0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [1 1 0 0 0 0 0 0]
 [0 1 1 0 1 0 0 0]
 [1 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 1 0 1]
 [0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [1 1 0 0 0 0 0 0]
 [0 1 1 0 1 0 0 0]
 [1 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 1 0 1 0]
 [0 0 0 0 0 1 1 0 0]
 [0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0]
 [1 1 0 0 0 0 0 0 0]
 [0 1 1 0 1 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 1 0 1 0]
 [0 0 0 0 0 1 1 0 0]
 [0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0]
 [1 1 0 0 0 0 0 0 0]
 [0 1 1 0 1 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 1 0 0]
 [0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0]
 [0 1 0 0 0 0 0 0 0]
 [0 1 1 0 1 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 1 0 0]
 [0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0]
 [0 1 0 0 0 0 0 0 0]
 [0 1 1 0 1 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 1 1 0 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 1 1 0 1 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: cycle
Graph before final task:[[0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 1 1 0 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 1 1 0 1 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 1 0 1]
 [0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [1 1 0 0 0 0 0 0]
 [0 1 1 0 1 0 0 0]
 [1 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 1 0 1]
 [0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [1 1 0 0 0 0 0 0]
 [0 1 1 0 1 0 0 0]
 [1 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 1 0 1]
 [0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0]
 [1 1 0 0 1 0 0 0]
 [0 1 1 0 1 0 0 0]
 [1 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 1 0 1]
 [0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0]
 [1 1 0 0 1 0 0 0]
 [0 1 1 0 1 0 0 0]
 [1 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 1 0 1]
 [0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]
 [1 1 0 0 1 0 0 0]
 [0 1 1 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 1 0 1]
 [0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]
 [1 1 0 0 1 0 0 0]
 [0 1 1 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 1 0 1]
 [0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 1 0 1 0 0]
 [1 1 0 0 1 0 0 0]
 [0 1 1 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: node_count
Graph before final task:[[0 0 0 0 0 1 0 1]
 [0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 1 0 1 0 0]
 [1 1 0 0 1 0 0 0]
 [0 1 1 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 1 0 1]
 [0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [1 1 0 0 0 0 0 0]
 [0 1 1 0 1 0 0 0]
 [1 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 1 0 1]
 [0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [1 1 0 0 0 0 0 0]
 [0 1 1 0 1 0 0 0]
 [1 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 1 0 1]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [1 0 0 0 0 0 0]
 [0 1 0 1 0 0 0]
 [1 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 1 0 1]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [1 0 0 0 0 0 0]
 [0 1 0 1 0 0 0]
 [1 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 1 0 1]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [1 0 0 0 0 0 0]
 [0 1 0 1 0 0 0]
 [1 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_count
Graph before final task:[[0 0 0 0 1 0 1]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [1 0 0 0 0 0 0]
 [0 1 0 1 0 0 0]
 [1 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 1 0 1]
 [0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [1 1 0 0 0 0 0 0]
 [0 1 1 0 1 0 0 0]
 [1 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 1 0 1]
 [0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [1 1 0 0 0 0 0 0]
 [0 1 1 0 1 0 0 0]
 [1 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 1 0 1]
 [0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 1 0]
 [1 1 0 0 0 0 0 0]
 [0 1 1 0 1 0 0 0]
 [1 0 0 1 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 1 0 1]
 [0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 1 0]
 [1 1 0 0 0 0 0 0]
 [0 1 1 0 1 0 0 0]
 [1 0 0 1 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 1 0 1]
 [0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]
 [0 0 0 0 0 1 1 0]
 [1 1 0 0 1 0 0 0]
 [0 1 1 0 1 0 0 0]
 [1 0 0 1 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 1 0 1]
 [0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]
 [0 0 0 0 0 1 1 0]
 [1 1 0 0 1 0 0 0]
 [0 1 1 0 1 0 0 0]
 [1 0 0 1 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 1 0 1]
 [0 0 0 0 1 1 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 1 1 0]
 [1 1 0 1 0 0 0]
 [0 1 1 1 0 0 0]
 [1 0 0 0 0 0 0]]
Picked all tasks!
Final task: node_degree
Graph before final task:[[0 0 0 0 1 0 1]
 [0 0 0 0 1 1 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 1 1 0]
 [1 1 0 1 0 0 0]
 [0 1 1 1 0 0 0]
 [1 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 1 0 1]
 [0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [1 1 0 0 0 0 0 0]
 [0 1 1 0 1 0 0 0]
 [1 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 1 0 1]
 [0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [1 1 0 0 0 0 0 0]
 [0 1 1 0 1 0 0 0]
 [1 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 1 0 1]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [1 1 0 0 0 0 0 0]
 [0 0 1 0 1 0 0 0]
 [1 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 1 0 1]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [1 1 0 0 0 0 0 0]
 [0 0 1 0 1 0 0 0]
 [1 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 0 1 0 1]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [1 1 0 0 0 0 0 0]
 [0 0 1 0 1 0 0 0]
 [1 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 1 0 1 0 1]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [1 1 0 0 0 0 0 0]
 [0 0 1 0 1 0 0 0]
 [1 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 1 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [1 0 0 0 0 0 0]
 [0 1 0 1 0 0 0]
 [0 0 0 0 0 0 0]]
Picked all tasks!
Final task: connected_nodes
Graph before final task:[[0 0 0 0 1 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [1 0 0 0 0 0 0]
 [0 1 0 1 0 0 0]
 [0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 1 0 1]
 [0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [1 1 0 0 0 0 0 0]
 [0 1 1 0 1 0 0 0]
 [1 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 1 0 1]
 [0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [1 1 0 0 0 0 0 0]
 [0 1 1 0 1 0 0 0]
 [1 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0 0 1]
 [0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 1 0 0 0 0 0 0]
 [0 1 1 0 1 0 0 0]
 [1 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 0 1]
 [0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 1 0 0 0 0 0 0]
 [0 1 1 0 1 0 0 0]
 [1 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 0 0 1]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 1 1 0 1 0 0]
 [1 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 0 1]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 1 1 0 1 0 0]
 [1 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0 1]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 1 1 0 0 0 0]
 [1 0 0 0 0 0 0]]
Picked all tasks!
Final task: print_adjacency_matrix
Graph before final task:[[0 0 0 0 0 0 1]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 1 1 0 0 0 0]
 [1 0 0 0 0 0 0]]
Generating graph 35
-------------------
Graph before chain:[[0 0 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_exists
Graph before final task:[[0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: cycle
Graph before final task:[[0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 1 0 0 0 0 0]
 [1 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 1]
 [0 0 0 0 0 1 0]]
Picked all tasks!
Final task: node_count
Graph before final task:[[0 1 0 0 0 0 0]
 [1 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 1]
 [0 0 0 0 0 1 0]]
-------------------
Graph before chain:[[0 0 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_count
Graph before final task:[[0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 1 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 1 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]]
Picked all tasks!
Final task: node_degree
Graph before final task:[[0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 1 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: connected_nodes
Graph before final task:[[0 0 1 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: print_adjacency_matrix
Graph before final task:[[0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Generating graph 36
-------------------
Graph before chain:[[0 0 0 1 0 0 0 0 1]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 1 0]
 [1 0 0 0 0 0 0 0 1]
 [0 1 1 0 0 1 0 0 0]
 [0 0 0 0 1 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 1 0 0 0]
 [1 0 0 1 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 1 0 0 0 0 1]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 1 0]
 [1 0 0 0 0 0 0 0 1]
 [0 1 1 0 0 1 0 0 0]
 [0 0 0 0 1 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 1 0 0 0]
 [1 0 0 1 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 1 0 0 0 0 1 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 1 0 0 1 0 0]
 [1 0 0 0 0 0 0 0 1 0]
 [0 1 1 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 1 0 0 0 0]
 [1 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 1 0 0 0 0 1 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 1 0 0 1 0 0]
 [1 0 0 0 0 0 0 0 1 0]
 [0 1 1 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 1 0 0 0 0]
 [1 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 1 0 0 0 1 0]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 1 0 0]
 [1 0 0 0 0 0 0 1 0]
 [0 1 1 0 0 1 0 0 0]
 [0 0 0 0 1 0 1 0 0]
 [0 0 1 0 0 1 0 0 0]
 [1 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 1 0 0 0 1 0]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 1 0 0]
 [1 0 0 0 0 0 0 1 0]
 [0 1 1 0 0 1 0 0 0]
 [0 0 0 0 1 0 1 0 0]
 [0 0 1 0 0 1 0 0 0]
 [1 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 0 0 0 1 0]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 1 0 0]
 [1 0 0 0 0 0 1 1 0]
 [0 1 1 0 0 1 0 0 0]
 [0 0 0 0 1 0 1 0 0]
 [0 0 1 1 0 1 0 0 0]
 [1 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_exists
Graph before final task:[[0 0 0 1 0 0 0 1 0]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 1 0 0]
 [1 0 0 0 0 0 1 1 0]
 [0 1 1 0 0 1 0 0 0]
 [0 0 0 0 1 0 1 0 0]
 [0 0 1 1 0 1 0 0 0]
 [1 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0 0 0 0 1]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 1 0]
 [1 0 0 0 0 0 0 0 1]
 [0 1 1 0 0 1 0 0 0]
 [0 0 0 0 1 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 1 0 0 0]
 [1 0 0 1 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 1 0 0 0 0 1]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 1 0]
 [1 0 0 0 0 0 0 0 1]
 [0 1 1 0 0 1 0 0 0]
 [0 0 0 0 1 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 1 0 0 0]
 [1 0 0 1 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 1 0 0 0 0 1 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 1 0 0 1 0 0]
 [1 0 0 0 0 0 0 0 1 0]
 [0 1 1 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 1 0 0 0 0]
 [1 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 1 0 0 0 0 1 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 1 0 0 1 0 0]
 [1 0 0 0 0 0 0 0 1 0]
 [0 1 1 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 1 0 0 0 0]
 [1 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 1 0 0 0 0 1 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 1 0 0 1 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 1 1 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 1 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 1 0 0 0 0 1 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 1 0 0 1 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 1 1 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 1 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 1 0 0 0 0 1 0]
 [0 0 0 1 0 0 1 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 1 0 0 1 0 0 0 0]
 [0 0 0 1 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 1 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: cycle
Graph before final task:[[0 0 1 0 0 0 0 1 0]
 [0 0 0 1 0 0 1 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 1 0 0 1 0 0 0 0]
 [0 0 0 1 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 1 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0 0 0 0 1]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 1 0]
 [1 0 0 0 0 0 0 0 1]
 [0 1 1 0 0 1 0 0 0]
 [0 0 0 0 1 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 1 0 0 0]
 [1 0 0 1 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 1 0 0 0 0 1]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 1 0]
 [1 0 0 0 0 0 0 0 1]
 [0 1 1 0 0 1 0 0 0]
 [0 0 0 0 1 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 1 0 0 0]
 [1 0 0 1 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 1 0 0 0 0 1]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]
 [1 0 0 0 0 0 0 0 1]
 [0 1 1 0 0 1 0 0 0]
 [0 0 0 0 1 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0]
 [1 0 0 1 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 1 0 0 0 0 1]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]
 [1 0 0 0 0 0 0 0 1]
 [0 1 1 0 0 1 0 0 0]
 [0 0 0 0 1 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0]
 [1 0 0 1 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 1 0 0 0 0 1]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]
 [1 0 0 0 0 0 0 0 1]
 [0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0]
 [1 0 0 1 0 0 0 0 0]]
Picked all tasks!
Final task: node_count
Graph before final task:[[0 0 0 1 0 0 0 0 1]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]
 [1 0 0 0 0 0 0 0 1]
 [0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0]
 [1 0 0 1 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0 0 0 0 1]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 1 0]
 [1 0 0 0 0 0 0 0 1]
 [0 1 1 0 0 1 0 0 0]
 [0 0 0 0 1 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 1 0 0 0]
 [1 0 0 1 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 1 0 0 0 0 1]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 1 0]
 [1 0 0 0 0 0 0 0 1]
 [0 1 1 0 0 1 0 0 0]
 [0 0 0 0 1 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 1 0 0 0]
 [1 0 0 1 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 1 0 0 1]
 [1 0 0 0 0 0 0 0]
 [0 1 1 0 0 1 0 0]
 [0 0 0 0 1 0 0 1]
 [0 0 0 0 0 0 0 0]
 [0 0 1 0 0 1 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 1 0 0 1]
 [1 0 0 0 0 0 0 0]
 [0 1 1 0 0 1 0 0]
 [0 0 0 0 1 0 0 1]
 [0 0 0 0 0 0 0 0]
 [0 0 1 0 0 1 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 1 0 0 0 0]
 [0 0 0 1 0 0 1]
 [1 0 0 0 0 0 0]
 [0 1 0 0 1 0 0]
 [0 0 0 1 0 0 1]
 [0 0 0 0 0 0 0]
 [0 1 0 0 1 0 0]]
Picked all tasks!
Final task: edge_count
Graph before final task:[[0 0 1 0 0 0 0]
 [0 0 0 1 0 0 1]
 [1 0 0 0 0 0 0]
 [0 1 0 0 1 0 0]
 [0 0 0 1 0 0 1]
 [0 0 0 0 0 0 0]
 [0 1 0 0 1 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0 0 0 0 1]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 1 0]
 [1 0 0 0 0 0 0 0 1]
 [0 1 1 0 0 1 0 0 0]
 [0 0 0 0 1 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 1 0 0 0]
 [1 0 0 1 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 1 0 0 0 0 1]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 1 0]
 [1 0 0 0 0 0 0 0 1]
 [0 1 1 0 0 1 0 0 0]
 [0 0 0 0 1 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 1 0 0 0]
 [1 0 0 1 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 0 0 0 0 1]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 1 1 0]
 [1 0 0 0 0 0 0 0 1]
 [0 1 1 0 0 1 0 0 0]
 [0 0 0 0 1 0 0 1 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 1 0 0 1 0 0 0]
 [1 0 0 1 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 1 0 0 0 0 1]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 1 1 0]
 [1 0 0 0 0 0 0 0 1]
 [0 1 1 0 0 1 0 0 0]
 [0 0 0 0 1 0 0 1 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 1 0 0 1 0 0 0]
 [1 0 0 1 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 1 0 0 0 0 1]
 [0 0 0 1 0 0 0 0]
 [1 0 0 0 0 0 0 1]
 [0 1 0 0 1 0 0 0]
 [0 0 0 1 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [1 0 1 0 0 0 0 0]]
Picked all tasks!
Final task: node_degree
Graph before final task:[[0 0 1 0 0 0 0 1]
 [0 0 0 1 0 0 0 0]
 [1 0 0 0 0 0 0 1]
 [0 1 0 0 1 0 0 0]
 [0 0 0 1 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [1 0 1 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0 0 0 0 1]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 1 0]
 [1 0 0 0 0 0 0 0 1]
 [0 1 1 0 0 1 0 0 0]
 [0 0 0 0 1 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 1 0 0 0]
 [1 0 0 1 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 1 0 0 0 0 1]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 1 0]
 [1 0 0 0 0 0 0 0 1]
 [0 1 1 0 0 1 0 0 0]
 [0 0 0 0 1 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 1 0 0 0]
 [1 0 0 1 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 0 0 0 0 1]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 1 1]
 [1 0 0 0 0 0 0 0 1]
 [0 1 1 0 0 1 0 0 0]
 [0 0 0 0 1 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 1 0 0 0]
 [1 0 1 1 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 1 0 0 0 0 1]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 1 1]
 [1 0 0 0 0 0 0 0 1]
 [0 1 1 0 0 1 0 0 0]
 [0 0 0 0 1 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 1 0 0 0]
 [1 0 1 1 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 0 0 0 0 1]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 1 1]
 [1 0 0 0 0 0 1 0 1]
 [0 1 1 0 0 1 0 0 0]
 [0 0 0 0 1 0 0 1 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 1 0 0 1 0 0 0]
 [1 0 1 1 0 0 0 0 0]]
Picked all tasks!
Final task: connected_nodes
Graph before final task:[[0 0 0 1 0 0 0 0 1]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 1 1]
 [1 0 0 0 0 0 1 0 1]
 [0 1 1 0 0 1 0 0 0]
 [0 0 0 0 1 0 0 1 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 1 0 0 1 0 0 0]
 [1 0 1 1 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 1 0 0 0 0 1]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 1 0]
 [1 0 0 0 0 0 0 0 1]
 [0 1 1 0 0 1 0 0 0]
 [0 0 0 0 1 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 1 0 0 0]
 [1 0 0 1 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 1 0 0 0 0 1]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 1 0]
 [1 0 0 0 0 0 0 0 1]
 [0 1 1 0 0 1 0 0 0]
 [0 0 0 0 1 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 1 0 0 0]
 [1 0 0 1 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 1 1 0 0 0 0 1]
 [0 0 0 0 1 0 0 0 0]
 [1 0 0 0 1 0 0 1 0]
 [1 0 0 0 0 0 0 0 1]
 [0 1 1 0 0 1 0 0 0]
 [0 0 0 0 1 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 1 0 0 0]
 [1 0 0 1 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 1 1 0 0 0 0 1]
 [0 0 0 0 1 0 0 0 0]
 [1 0 0 0 1 0 0 1 0]
 [1 0 0 0 0 0 0 0 1]
 [0 1 1 0 0 1 0 0 0]
 [0 0 0 0 1 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 1 0 0 0]
 [1 0 0 1 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 1 1 0 0 0 1]
 [0 0 0 0 1 0 0 0]
 [1 0 0 0 1 0 1 0]
 [1 0 0 0 0 0 0 1]
 [0 1 1 0 0 1 0 0]
 [0 0 0 0 1 0 1 0]
 [0 0 1 0 0 1 0 0]
 [1 0 0 1 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 1 1 0 0 0 1]
 [0 0 0 0 1 0 0 0]
 [1 0 0 0 1 0 1 0]
 [1 0 0 0 0 0 0 1]
 [0 1 1 0 0 1 0 0]
 [0 0 0 0 1 0 1 0]
 [0 0 1 0 0 1 0 0]
 [1 0 0 1 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 1 1 0 0 1]
 [0 0 0 0 1 0 0]
 [1 0 0 0 1 1 0]
 [1 0 0 0 0 0 1]
 [0 1 1 0 0 0 0]
 [0 0 1 0 0 0 0]
 [1 0 0 1 0 0 0]]
Picked all tasks!
Final task: print_adjacency_matrix
Graph before final task:[[0 0 1 1 0 0 1]
 [0 0 0 0 1 0 0]
 [1 0 0 0 1 1 0]
 [1 0 0 0 0 0 1]
 [0 1 1 0 0 0 0]
 [0 0 1 0 0 0 0]
 [1 0 0 1 0 0 0]]
Generating graph 37
-------------------
Graph before chain:[[0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]]

Graph has only one edge or one node, so we need to sample a new task.
Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]

Graph is disconnected after removing node 3, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]]
Picked all tasks!
Final task: edge_exists
Graph before final task:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]]

Graph is disconnected after removing node 3, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 1]
 [0 0 0 0 0 1 0]
 [0 0 0 0 1 0 0]
 [0 0 0 1 0 0 0]]
Picked all tasks!
Final task: cycle
Graph before final task:[[0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 1]
 [0 0 0 0 0 1 0]
 [0 0 0 0 1 0 0]
 [0 0 0 1 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]]

Graph is disconnected after removing node 3, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0]
 [1 0 0 0 0 0 1]
 [0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0]
 [1 0 0 0 0 0 1]
 [0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [1 0 0 0 0 0 1 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: node_count
Graph before final task:[[0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [1 0 0 0 0 0 1 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Graph has only one edge or one node, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1]
 [0 0 0 0 0 0 1 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1]
 [0 0 0 0 0 0 1 0]]

Graph is disconnected after removing node 6, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1]
 [0 0 0 0 0 0 1 0]]
Picked all tasks!
Final task: edge_count
Graph before final task:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1]
 [0 0 0 0 0 0 1 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]]

Graph has only one edge or one node, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1]
 [0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1]
 [0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 1]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 1 0 0 0]]
Picked all tasks!
Final task: node_degree
Graph before final task:[[0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 1]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 1 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]]

Graph has only one edge or one node, so we need to sample a new task.
Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Graph has only one edge or one node, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: connected_nodes
Graph before final task:[[0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]]

Graph is disconnected after removing node 3, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1]
 [0 0 0 0 0 0 1]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 1 1 0 0 0]]
Picked all tasks!
Final task: print_adjacency_matrix
Graph before final task:[[0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1]
 [0 0 0 0 0 0 1]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 1 1 0 0 0]]
Generating graph 38
-------------------
Graph before chain:[[0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]]
Picked all tasks!
Final task: edge_exists
Graph before final task:[[0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]]

Graph is disconnected after removing node 4, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]

Graph is disconnected after removing node 9, so we need to sample a new task.
Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: cycle
Graph before final task:[[0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]]

Graph is disconnected after removing node 4, so we need to sample a new task.
Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]

Graph has only one edge or one node, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: node_count
Graph before final task:[[0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]]

Graph is disconnected after removing node 4, so we need to sample a new task.
Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_count
Graph before final task:[[0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]]

Graph is disconnected after removing node 4, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]]

Graph is disconnected after removing node 4, so we need to sample a new task.
Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: node_degree
Graph before final task:[[0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: connected_nodes
Graph before final task:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: print_adjacency_matrix
Graph before final task:[[0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Generating graph 39
-------------------
Graph before chain:[[0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 1 0 0 0 0 0 0 0 1]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 1 0 0 0 0 0 0 0 1]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 1 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_exists
Graph before final task:[[0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 1 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 1 0 0 0 0 0 0 0 1]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 1 0 0 0 0 0 0 0 1]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 1 1 0 0 0 0 0 0 1]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 1 1 0 0 0 0 0 0 1]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0]
 [0 1 1 0 0 0 0 0 0 1 0]
 [0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: cycle
Graph before final task:[[0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0]
 [0 1 1 0 0 0 0 0 0 1 0]
 [0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 1 0 0 0 0 0 0 0 1]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 1 0 0 0 0 0 0 0 1]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0]]
Picked all tasks!
Final task: node_count
Graph before final task:[[0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 1 0 0 0 0 0 0 0 1]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 1 0 0 0 0 0 0 0 1]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 1 0 0 0 0 0 0 0 1]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 1 0 0 0 0 0 0 0 1]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 1 0 0 0 1 1]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 1 0 0 0]
 [0 1 0 0 0 0 0 0 0 1]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0]]
Picked all tasks!
Final task: edge_count
Graph before final task:[[0 0 0 0 1 0 0 0 1 1]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 1 0 0 0]
 [0 1 0 0 0 0 0 0 0 1]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 1 0 0 0 0 0 0 0 1]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 1 0 0 0 0 0 0 0 1]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 0 0 0 1 0]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 0 1 0]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0 1 1]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0]]
Picked all tasks!
Final task: node_degree
Graph before final task:[[0 0 0 0 0 0 0 1 1]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 1 0 0 0 0 0 0 0 1]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 1 0 0 0 0 0 0 0 1]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 1 0 0 0 0 1 0 0 1]
 [0 0 0 0 1 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 1 0 0 0 0 1 0 0 1]
 [0 0 0 0 1 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 0 0 0 1 0]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0]
 [0 1 0 0 0 1 0 0 1]
 [0 0 0 1 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]]
Picked all tasks!
Final task: connected_nodes
Graph before final task:[[0 0 0 0 0 0 0 1 0]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0]
 [0 1 0 0 0 1 0 0 1]
 [0 0 0 1 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 1 0 0 0 0 0 0 0 1]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 1 0 0 0 0 0 0 0 1]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: print_adjacency_matrix
Graph before final task:[[0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Generating graph 40
-------------------
Graph before chain:[[0 1 1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 1 1]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 1 1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 1 1]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 1 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 1 1 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 1 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 1 1 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 1 1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 1 1 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 1 1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 1 1 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 1 1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 1 1 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_exists
Graph before final task:[[0 1 1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 1 1 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 1 1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 1 1]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 1 1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 1 1]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 1 1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 1 1]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [0 1 0 0 0 1 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 1 1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 1 1]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [0 1 0 0 0 1 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 1 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 1 1 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 1 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 1 1 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 1 1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 1 1 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: cycle
Graph before final task:[[0 1 1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 1 1 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 1 1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 1 1]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 1 1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 1 1]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 1 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 1 1 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 1 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 1 1 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: node_count
Graph before final task:[[0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 1 1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 1 1]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 1 1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 1 1]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_count
Graph before final task:[[0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 1 1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 1 1]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 1 1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 1 1]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 1 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 1 1 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 1 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 1 1 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 1 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 1 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: node_degree
Graph before final task:[[0 1 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 1 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 1 1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 1 1]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 1 1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 1 1]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 1 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 1 1 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 1 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 1 1 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 1 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 1 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 1 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 1 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 1 1 0 0 0 0 0 0]
 [1 0 0 0 0 0 1 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: connected_nodes
Graph before final task:[[0 1 1 0 0 0 0 0 0]
 [1 0 0 0 0 0 1 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 1 1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 1 1]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 1 1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 1 1]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 1 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 1 1 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 1 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 1 1 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 1 1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 1 1 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 1 1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 1 1 0 0]
 [1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 1 1 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 1 1 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: print_adjacency_matrix
Graph before final task:[[0 1 1 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 1 1 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0]]
Generating graph 41
-------------------
Graph before chain:[[0 0 0 0 0 1 1]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 1 1]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 1 1 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 1 1 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0 1 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_exists
Graph before final task:[[0 0 0 0 0 0 1 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 1 1]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 1 1]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]]
Picked all tasks!
Final task: cycle
Graph before final task:[[0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 1 1]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 1 1]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0 1]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 1]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 1]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 1]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 1]
 [0 0 0 1 0 0 1]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 1 0 1 0 0 0]]
Picked all tasks!
Final task: node_count
Graph before final task:[[0 0 0 0 0 0 1]
 [0 0 0 1 0 0 1]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 1 0 1 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 1 1]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 1 1]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 1 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 1 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 1 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 1 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 1 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_count
Graph before final task:[[0 0 0 0 0 1 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 1 1]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 1 1]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 1 1 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 1 1 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 1 1 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: node_degree
Graph before final task:[[0 0 0 0 0 1 1 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 1 1]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 1 1]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: connected_nodes
Graph before final task:[[0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 1 1]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 1 1]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 0 1]
 [0 0 0 1 0 0]
 [0 0 0 0 0 0]
 [0 1 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 1]
 [0 0 0 1 0 0]
 [0 0 0 0 0 0]
 [0 1 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 1]
 [0 0 0 1 0]
 [0 0 0 0 0]
 [0 1 0 0 0]
 [1 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 1]
 [0 0 0 1 0]
 [0 0 0 0 0]
 [0 1 0 0 0]
 [1 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 1]
 [0 0 0 1 0]
 [0 0 0 0 0]
 [0 1 0 0 0]
 [1 0 0 0 0]]
Picked all tasks!
Final task: print_adjacency_matrix
Graph before final task:[[0 0 0 0 1]
 [0 0 0 1 0]
 [0 0 0 0 0]
 [0 1 0 0 0]
 [1 0 0 0 0]]
Generating graph 42
-------------------
Graph before chain:[[0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0]
 [1 0 0 0 0 1 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 1 0 1 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0]
 [1 0 0 0 0 1 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 1 0 1 0 0]
 [0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 1 0 1 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 1 0 1 0 0]
 [0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 1 0 1 0 1]
 [0 0 0 0 0 1 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 1 0 1 0 1]
 [0 0 0 0 0 1 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 0 1 0]
 [0 0 1 1 0 1]
 [0 0 0 0 1 0]]
Picked all tasks!
Final task: edge_exists
Graph before final task:[[0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 0 1 0]
 [0 0 1 1 0 1]
 [0 0 0 0 1 0]]
-------------------
Graph before chain:[[0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0]
 [1 0 0 0 0 1 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 1 0 1 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0]
 [1 0 0 0 0 1 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 1 0 1 0 0]
 [0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 1 0 0 0 0]
 [1 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 1 0 1 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 1 0 0 0 0]
 [1 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 1 0 1 0 0]
 [0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 1 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 1 0 0]
 [0 0 0 0 0 0]]
Picked all tasks!
Final task: cycle
Graph before final task:[[0 1 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 1 0 0]
 [0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0]
 [1 0 0 0 0 1 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 1 0 1 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0]
 [1 0 0 0 0 1 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 1 0 1 0 0]
 [0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 1 0 0 0]
 [0 0 0 1 0 0]
 [1 0 0 0 0 1]
 [0 1 0 0 0 0]
 [0 0 0 0 0 1]
 [0 0 1 0 1 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 1 0 0 0]
 [0 0 0 1 0 0]
 [1 0 0 0 0 1]
 [0 1 0 0 0 0]
 [0 0 0 0 0 1]
 [0 0 1 0 1 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0]
 [1 0 0 0 0 1 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 1 0 1 0 0]
 [0 0 0 0 0 0 0]]
Picked all tasks!
Final task: node_count
Graph before final task:[[0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0]
 [1 0 0 0 0 1 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 1 0 1 0 0]
 [0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0]
 [1 0 0 0 0 1 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 1 0 1 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0]
 [1 0 0 0 0 1 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 1 0 1 0 0]
 [0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0]
 [1 0 0 0 0 1 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0]
 [1 0 0 0 0 1 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 1 1]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0]
 [0 0 1 0 0 0 0]]
Picked all tasks!
Final task: edge_count
Graph before final task:[[0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 1 1]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0]
 [0 0 1 0 0 0 0]]
-------------------
Graph before chain:[[0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0]
 [1 0 0 0 0 1 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 1 0 1 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0]
 [1 0 0 0 0 1 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 1 0 1 0 0]
 [0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [1 0 0 0 0 1 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 1 0 1 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [1 0 0 0 0 1 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 1 0 1 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [1 0 0 0 0 1 0 0]
 [0 1 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 0]
 [0 0 1 0 1 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [1 0 0 0 0 1 0 0]
 [0 1 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 0]
 [0 0 1 0 1 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [1 0 0 1 0 1 0 0]
 [0 1 1 0 0 0 1 0]
 [0 0 0 0 0 1 0 0]
 [0 0 1 0 1 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: node_degree
Graph before final task:[[0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [1 0 0 1 0 1 0 0]
 [0 1 1 0 0 0 1 0]
 [0 0 0 0 0 1 0 0]
 [0 0 1 0 1 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0]
 [1 0 0 0 0 1 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 1 0 1 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0]
 [1 0 0 0 0 1 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 1 0 1 0 0]
 [0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0]
 [1 0 0 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0]
 [1 0 0 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 1 0 0]
 [0 0 1 0 0 0 0]]
Picked all tasks!
Final task: connected_nodes
Graph before final task:[[0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 1 0 0]
 [0 0 1 0 0 0 0]]
-------------------
Graph before chain:[[0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0]
 [1 0 0 0 0 1 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 1 0 1 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0]
 [1 0 0 0 0 1 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 1 0 1 0 0]
 [0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [1 0 0 0 0 1 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 1 0 1 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [1 0 0 0 0 1 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 1 0 1 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 1 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Picked all tasks!
Final task: print_adjacency_matrix
Graph before final task:[[0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 1 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Generating graph 43
-------------------
Graph before chain:[[0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0]
 [0 0 1 0 1 0 1]
 [0 0 0 0 0 1 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0]
 [0 0 1 0 1 0 1]
 [0 0 0 0 0 1 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 1 0 0 0 1]
 [0 0 0 0 0 1 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 1 0 0 0 1]
 [0 0 0 0 0 1 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 1 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 1 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_exists
Graph before final task:[[0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0]
 [0 0 1 0 1 0 1]
 [0 0 0 0 0 1 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0]
 [0 0 1 0 1 0 1]
 [0 0 0 0 0 1 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 1 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [1 0 0 0 1 0]
 [0 0 1 1 0 1]
 [0 0 0 0 1 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 1 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [1 0 0 0 1 0]
 [0 0 1 1 0 1]
 [0 0 0 0 1 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 1 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [1 0 0 0 0 0]
 [0 0 1 0 0 1]
 [0 0 0 0 1 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 1 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [1 0 0 0 0 0]
 [0 0 1 0 0 1]
 [0 0 0 0 1 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 1 0 0]
 [0 0 0 0 1 0]
 [0 0 0 0 1 0]
 [1 0 0 0 0 0]
 [0 1 1 0 0 1]
 [0 0 0 0 1 0]]
Picked all tasks!
Final task: cycle
Graph before final task:[[0 0 0 1 0 0]
 [0 0 0 0 1 0]
 [0 0 0 0 1 0]
 [1 0 0 0 0 0]
 [0 1 1 0 0 1]
 [0 0 0 0 1 0]]
-------------------
Graph before chain:[[0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0]
 [0 0 1 0 1 0 1]
 [0 0 0 0 0 1 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0]
 [0 0 1 0 1 0 1]
 [0 0 0 0 0 1 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0]
 [0 0 1 0 1 0 1 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0]
 [0 0 1 0 1 0 1 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0]
 [0 1 1 0 1 0 1 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: node_count
Graph before final task:[[0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0]
 [0 1 1 0 1 0 1 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0]
 [0 0 1 0 1 0 1]
 [0 0 0 0 0 1 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0]
 [0 0 1 0 1 0 1]
 [0 0 0 0 0 1 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0]
 [0 0 1 0 1 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0]
 [0 0 1 0 1 0 0]
 [0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 1 0 0 1 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0]
 [0 0 1 0 1 0 0]
 [0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_count
Graph before final task:[[0 1 0 0 1 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0]
 [0 0 1 0 1 0 0]
 [0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0]
 [0 0 1 0 1 0 1]
 [0 0 0 0 0 1 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0]
 [0 0 1 0 1 0 1]
 [0 0 0 0 0 1 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 1 0 1 0 1]
 [0 0 0 0 1 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 1 0 1 0 1]
 [0 0 0 0 1 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 1 0 0 0 0]
 [1 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 1 0 1 0 1]
 [0 0 0 0 1 0]]
Task initially chosen: add_node
new_graph_str: [[0 1 0 0 0 0]
 [1 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 1 0 1 0 1]
 [0 0 0 0 1 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 1 0 0 0 0]
 [1 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 1 0 1 0 1]
 [0 0 0 0 1 0]]
Picked all tasks!
Final task: node_degree
Graph before final task:[[0 1 0 0 0 0]
 [1 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 1 0 1 0 1]
 [0 0 0 0 1 0]]
-------------------
Graph before chain:[[0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0]
 [0 0 1 0 1 0 1]
 [0 0 0 0 0 1 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0]
 [0 0 1 0 1 0 1]
 [0 0 0 0 0 1 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 1 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0]
 [0 1 0 0 0 0 0]
 [1 0 0 0 0 1 0]
 [0 0 1 0 1 0 1]
 [0 0 0 0 0 1 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 1 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0]
 [0 1 0 0 0 0 0]
 [1 0 0 0 0 1 0]
 [0 0 1 0 1 0 1]
 [0 0 0 0 0 1 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 1 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0]
 [0 1 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 1 0 0 0 1]
 [0 0 0 0 0 1 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 1 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0]
 [0 1 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 1 0 0 0 1]
 [0 0 0 0 0 1 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 1 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0]
 [0 1 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]]
Picked all tasks!
Final task: connected_nodes
Graph before final task:[[0 0 0 0 1 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0]
 [0 1 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0]
 [0 0 1 0 1 0 1]
 [0 0 0 0 0 1 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0]
 [0 0 1 0 1 0 1]
 [0 0 0 0 0 1 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 1 0 0]
 [0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [1 0 0 0 1 0]
 [0 1 0 1 0 1]
 [0 0 0 0 1 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 1 0 0]
 [0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [1 0 0 0 1 0]
 [0 1 0 1 0 1]
 [0 0 0 0 1 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 1 0 0]
 [0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [1 0 0 0 1 0]
 [0 1 0 1 0 1]
 [0 0 0 0 1 0]]
Picked all tasks!
Final task: print_adjacency_matrix
Graph before final task:[[0 0 0 1 0 0]
 [0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [1 0 0 0 1 0]
 [0 1 0 1 0 1]
 [0 0 0 0 1 0]]
Generating graph 44
-------------------
Graph before chain:[[0 0 1 0 0 1 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0]
 [1 0 0 0 1 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 1 0 0 0]
 [1 1 1 0 0 0 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 1 0 0 1 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0]
 [1 0 0 0 1 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 1 0 0 0]
 [1 1 1 0 0 0 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 1 0 0 1 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0]
 [1 0 0 0 1 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]
 [1 1 1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 1 0 0 1 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0]
 [1 0 0 0 1 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]
 [1 1 1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 1 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0 0]
 [1 0 0 0 1 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [1 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_exists
Graph before final task:[[0 0 1 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0 0]
 [1 0 0 0 1 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [1 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 1 0 0 1 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0]
 [1 0 0 0 1 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 1 0 0 0]
 [1 1 1 0 0 0 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 1 0 0 1 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0]
 [1 0 0 0 1 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 1 0 0 0]
 [1 1 1 0 0 0 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 1 0 0 1 0 0 0]
 [0 0 0 0 0 1 1 0 0]
 [1 0 0 0 1 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 1 0 0]
 [1 1 1 0 0 0 0 0 0]
 [0 1 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 1 0 0 1 0 0 0]
 [0 0 0 0 0 1 1 0 0]
 [1 0 0 0 1 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 1 0 0]
 [1 1 1 0 0 0 0 0 0]
 [0 1 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 1 0 0 1 0 0 0]
 [0 0 0 0 0 1 1 0 0]
 [1 0 0 0 1 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 1 0 0]
 [1 1 1 0 0 0 0 0 0]
 [0 1 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 1 0 0 1 0 0 0]
 [0 0 0 0 0 1 1 0 0]
 [1 0 0 0 1 1 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 1 0 0]
 [1 1 1 0 0 0 0 0 0]
 [0 1 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 1 0 0 0]
 [0 0 0 0 1 1 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]
 [1 1 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: cycle
Graph before final task:[[0 0 0 0 1 0 0 0]
 [0 0 0 0 1 1 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]
 [1 1 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 1 0 0 1 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0]
 [1 0 0 0 1 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 1 0 0 0]
 [1 1 1 0 0 0 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 1 0 0 1 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0]
 [1 0 0 0 1 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 1 0 0 0]
 [1 1 1 0 0 0 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 1 0 0 1 0 0 0 0]
 [1 0 0 1 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 1 0 0 0]
 [1 1 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 1 0 0 1 0 0 0 0]
 [1 0 0 1 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 1 0 0 0]
 [1 1 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 1 0 0 0 0]
 [0 0 0 1 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 1 0 0 0]
 [1 1 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: node_count
Graph before final task:[[0 0 0 0 1 0 0 0 0]
 [0 0 0 1 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 1 0 0 0]
 [1 1 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 1 0 0 1 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0]
 [1 0 0 0 1 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 1 0 0 0]
 [1 1 1 0 0 0 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 1 0 0 1 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0]
 [1 0 0 0 1 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 1 0 0 0]
 [1 1 1 0 0 0 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 1 0 0 1 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0]
 [1 0 0 0 1 1 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 1 0 0 0 1 0 0 0]
 [1 1 1 1 0 0 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 1 0 0 1 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0]
 [1 0 0 0 1 1 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0]
 [0 0 1 0 0 0 1 0 0 0]
 [1 1 1 1 0 0 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 1 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0]
 [1 0 0 0 1 1 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0]
 [0 0 1 0 0 0 1 0 0 0 0]
 [1 1 1 1 0 0 0 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_count
Graph before final task:[[0 0 1 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0]
 [1 0 0 0 1 1 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0]
 [0 0 1 0 0 0 1 0 0 0 0]
 [1 1 1 1 0 0 0 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 1 0 0 1 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0]
 [1 0 0 0 1 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 1 0 0 0]
 [1 1 1 0 0 0 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 1 0 0 1 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0]
 [1 0 0 0 1 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 1 0 0 0]
 [1 1 1 0 0 0 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 1 0 0 1 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0]
 [1 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 1 0 0 0]
 [1 1 0 0 0 0 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 1 0 0 1 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0]
 [1 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 1 0 0 0]
 [1 1 0 0 0 0 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 1 0 0 1 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0]
 [1 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]
 [1 1 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: node_degree
Graph before final task:[[0 0 1 0 0 1 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0]
 [1 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0]
 [1 1 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 1 0 0 1 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0]
 [1 0 0 0 1 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 1 0 0 0]
 [1 1 1 0 0 0 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 1 0 0 1 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0]
 [1 0 0 0 1 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 1 0 0 0]
 [1 1 1 0 0 0 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 1 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0]
 [1 0 0 0 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 1 0 0 0 0]
 [1 1 1 0 0 0 0 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 1 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0]
 [1 0 0 0 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 1 0 0 0 0]
 [1 1 1 0 0 0 0 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 1 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0]
 [1 1 1 0 0 0 0 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: connected_nodes
Graph before final task:[[0 0 1 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0]
 [1 1 1 0 0 0 0 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 1 0 0 1 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0]
 [1 0 0 0 1 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 1 0 0 0]
 [1 1 1 0 0 0 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 1 0 0 1 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0]
 [1 0 0 0 1 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 1 0 0 0]
 [1 1 1 0 0 0 0 0 0 0]
 [0 1 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 1 1 0 0 0]
 [0 0 0 1 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 1 0 0 0]
 [1 1 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 1 1 0 0 0]
 [0 0 0 1 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 1 0 0 0]
 [1 1 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 1 1 0 0 0]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0]
 [1 1 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: print_adjacency_matrix
Graph before final task:[[0 0 0 0 1 1 0 0 0]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0]
 [1 1 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Generating graph 45
-------------------
Graph before chain:[[0 0 1 0 0]
 [0 0 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 1 0 0]
 [0 0 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 1 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 1 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]

Graph has only one edge or one node, so we need to sample a new task.
Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]

Graph has only one edge or one node, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 1 0 0 0 0]
 [0 0 1 0 0 0 0]
 [1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_exists
Graph before final task:[[0 0 1 0 0 0 0]
 [0 0 1 0 0 0 0]
 [1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 1 0 0]
 [0 0 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 1 0 0]
 [0 0 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 0]]

Graph is disconnected after removing node 0, so we need to sample a new task.
Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 1 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 1 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 1 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 1 0 0 0]
 [0 0 0 0 0 0]]
Picked all tasks!
Final task: cycle
Graph before final task:[[0 0 1 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 1 0 0 0]
 [0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 1 0 0]
 [0 0 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 1 0 0]
 [0 0 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 0]]

Graph is disconnected after removing node 0, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 1 0 0]
 [0 0 0 0 0]
 [1 0 0 1 0]
 [0 0 1 0 0]
 [0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 1 0 0]
 [0 0 0 0 0]
 [1 0 0 1 0]
 [0 0 1 0 0]
 [0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 1 0 0]
 [0 0 0 0 1]
 [1 0 0 1 0]
 [0 0 1 0 0]
 [0 1 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 1 0 0]
 [0 0 0 0 1]
 [1 0 0 1 0]
 [0 0 1 0 0]
 [0 1 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 1 0 0]
 [0 0 0 1 1]
 [1 0 0 1 0]
 [0 1 1 0 0]
 [0 1 0 0 0]]
Picked all tasks!
Final task: node_count
Graph before final task:[[0 0 1 0 0]
 [0 0 0 1 1]
 [1 0 0 1 0]
 [0 1 1 0 0]
 [0 1 0 0 0]]
-------------------
Graph before chain:[[0 0 1 0 0]
 [0 0 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 1 0 0]
 [0 0 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 1 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 1 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_count
Graph before final task:[[0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 1 0 0]
 [0 0 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 1 0 0]
 [0 0 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 1 1 0]
 [0 0 0 0 0]
 [1 0 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 1 1 0]
 [0 0 0 0 0]
 [1 0 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]]

Graph is disconnected after removing node 0, so we need to sample a new task.
Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 1 1 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 1 1 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 1 1 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Picked all tasks!
Final task: node_degree
Graph before final task:[[0 0 1 1 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 1 0 0]
 [0 0 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 1 0 0]
 [0 0 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 0]]

Graph is disconnected after removing node 0, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 1 0 0]
 [0 0 0 0 0]
 [1 0 0 1 0]
 [0 0 1 0 0]
 [0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 1 0 0]
 [0 0 0 0 0]
 [1 0 0 1 0]
 [0 0 1 0 0]
 [0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 1 0 1]
 [0 0 0 0 0]
 [1 0 0 1 0]
 [0 0 1 0 0]
 [1 0 0 0 0]]
Picked all tasks!
Final task: connected_nodes
Graph before final task:[[0 0 1 0 1]
 [0 0 0 0 0]
 [1 0 0 1 0]
 [0 0 1 0 0]
 [1 0 0 0 0]]
-------------------
Graph before chain:[[0 0 1 0 0]
 [0 0 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 1 0 0]
 [0 0 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 0]]

Graph is disconnected after removing node 0, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 1 0 0]
 [0 0 0 0 0]
 [1 0 0 1 0]
 [0 0 1 0 0]
 [0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 1 0 0]
 [0 0 0 0 0]
 [1 0 0 1 0]
 [0 0 1 0 0]
 [0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 1 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 1 0 0]
 [0 0 1 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]
Picked all tasks!
Final task: print_adjacency_matrix
Graph before final task:[[0 0 1 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 1 0 0]
 [0 0 1 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]
Generating graph 46
-------------------
Graph before chain:[[0 1 0 1 0 0 1 0 1]
 [1 0 0 1 0 0 1 1 0]
 [0 0 0 0 0 0 1 0 0]
 [1 1 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 1 1 1 0 0 0 1 0]
 [0 1 0 1 0 0 1 0 0]
 [1 0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 1 0 1 0 0 1 0 1]
 [1 0 0 1 0 0 1 1 0]
 [0 0 0 0 0 0 1 0 0]
 [1 1 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 1 1 1 0 0 0 1 0]
 [0 1 0 1 0 0 1 0 0]
 [1 0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 1 0 1 0 0 1 0 1 0]
 [1 0 0 1 0 0 1 1 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [1 1 0 0 0 0 1 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 1 1 1 0 0 0 1 0 0]
 [0 1 0 1 0 0 1 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 1 0 1 0 0 1 0 1 0]
 [1 0 0 1 0 0 1 1 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [1 1 0 0 0 0 1 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 1 1 1 0 0 0 1 0 0]
 [0 1 0 1 0 0 1 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 1 0 0 0 0 1 0 1 0]
 [1 0 0 1 0 0 1 1 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 1 0 0 0 0 1 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 1 1 1 0 0 0 1 0 0]
 [0 1 0 1 0 0 1 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_exists
Graph before final task:[[0 1 0 0 0 0 1 0 1 0]
 [1 0 0 1 0 0 1 1 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [0 1 0 0 0 0 1 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 1 1 1 0 0 0 1 0 0]
 [0 1 0 1 0 0 1 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 1 0 1 0 0 1 0 1]
 [1 0 0 1 0 0 1 1 0]
 [0 0 0 0 0 0 1 0 0]
 [1 1 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 1 1 1 0 0 0 1 0]
 [0 1 0 1 0 0 1 0 0]
 [1 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 1 0 1 0 0 1 0 1]
 [1 0 0 1 0 0 1 1 0]
 [0 0 0 0 0 0 1 0 0]
 [1 1 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 1 1 1 0 0 0 1 0]
 [0 1 0 1 0 0 1 0 0]
 [1 0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 1 0 1 0 0 1 0 1]
 [1 0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 1 0 0]
 [1 0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 1 1 1 0 0 0 1 0]
 [0 1 0 1 0 0 1 0 0]
 [1 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 1 0 1 0 0 1 0 1]
 [1 0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 1 0 0]
 [1 0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 1 1 1 0 0 0 1 0]
 [0 1 0 1 0 0 1 0 0]
 [1 0 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 1 1 0 0 1 0 1]
 [1 0 0 0 0 1 1 0]
 [1 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 1 1 0 0 0 1 0]
 [0 1 1 0 0 1 0 0]
 [1 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 1 1 0 0 1 0 1]
 [1 0 0 0 0 1 1 0]
 [1 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 1 1 0 0 0 1 0]
 [0 1 1 0 0 1 0 0]
 [1 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 1 1 0 0 1 1]
 [1 0 0 0 0 1 0]
 [1 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 1 1 0 0 0 0]
 [1 0 0 0 0 0 0]]
Picked all tasks!
Final task: cycle
Graph before final task:[[0 1 1 0 0 1 1]
 [1 0 0 0 0 1 0]
 [1 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 1 1 0 0 0 0]
 [1 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 1 0 1 0 0 1 0 1]
 [1 0 0 1 0 0 1 1 0]
 [0 0 0 0 0 0 1 0 0]
 [1 1 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 1 1 1 0 0 0 1 0]
 [0 1 0 1 0 0 1 0 0]
 [1 0 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 1 0 1 0 0 1 0 1]
 [1 0 0 1 0 0 1 1 0]
 [0 0 0 0 0 0 1 0 0]
 [1 1 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 1 1 1 0 0 0 1 0]
 [0 1 0 1 0 0 1 0 0]
 [1 0 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 1 0 1 0 0 1 0 1]
 [1 0 0 1 0 0 1 1 1]
 [0 0 0 0 0 0 1 0 0]
 [1 1 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 1 1 1 0 0 0 1 0]
 [0 1 0 1 0 0 1 0 0]
 [1 1 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 1 0 1 0 0 1 0 1]
 [1 0 0 1 0 0 1 1 1]
 [0 0 0 0 0 0 1 0 0]
 [1 1 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 1 1 1 0 0 0 1 0]
 [0 1 0 1 0 0 1 0 0]
 [1 1 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 1 0 1 0 0 1 0 0]
 [1 0 0 1 0 0 1 1 1]
 [0 0 0 0 0 0 1 0 0]
 [1 1 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 1 1 1 0 0 0 1 0]
 [0 1 0 1 0 0 1 0 0]
 [0 1 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: node_count
Graph before final task:[[0 1 0 1 0 0 1 0 0]
 [1 0 0 1 0 0 1 1 1]
 [0 0 0 0 0 0 1 0 0]
 [1 1 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 1 1 1 0 0 0 1 0]
 [0 1 0 1 0 0 1 0 0]
 [0 1 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 1 0 1 0 0 1 0 1]
 [1 0 0 1 0 0 1 1 0]
 [0 0 0 0 0 0 1 0 0]
 [1 1 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 1 1 1 0 0 0 1 0]
 [0 1 0 1 0 0 1 0 0]
 [1 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 1 0 1 0 0 1 0 1]
 [1 0 0 1 0 0 1 1 0]
 [0 0 0 0 0 0 1 0 0]
 [1 1 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 1 1 1 0 0 0 1 0]
 [0 1 0 1 0 0 1 0 0]
 [1 0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 1 0 1 0 0 1 0 1]
 [1 0 0 1 0 0 1 1 0]
 [0 0 0 0 0 0 1 0 0]
 [1 1 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 1 1 1 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 1 0 1 0 0 1 0 1]
 [1 0 0 1 0 0 1 1 0]
 [0 0 0 0 0 0 1 0 0]
 [1 1 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 1 1 1 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 1 0 1 0 0 1 0 1]
 [1 0 0 1 0 0 1 1 0]
 [0 0 0 0 0 0 1 0 0]
 [1 1 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [1 1 1 1 0 0 0 0 0]
 [0 1 0 1 0 1 0 0 0]
 [1 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_count
Graph before final task:[[0 1 0 1 0 0 1 0 1]
 [1 0 0 1 0 0 1 1 0]
 [0 0 0 0 0 0 1 0 0]
 [1 1 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [1 1 1 1 0 0 0 0 0]
 [0 1 0 1 0 1 0 0 0]
 [1 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 1 0 1 0 0 1 0 1]
 [1 0 0 1 0 0 1 1 0]
 [0 0 0 0 0 0 1 0 0]
 [1 1 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 1 1 1 0 0 0 1 0]
 [0 1 0 1 0 0 1 0 0]
 [1 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 1 0 1 0 0 1 0 1]
 [1 0 0 1 0 0 1 1 0]
 [0 0 0 0 0 0 1 0 0]
 [1 1 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 1 1 1 0 0 0 1 0]
 [0 1 0 1 0 0 1 0 0]
 [1 0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 1 0 1 0 0 1 0 1]
 [1 0 0 1 0 0 1 0 0]
 [0 0 0 0 0 0 1 0 0]
 [1 1 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 1 1 1 0 0 0 1 0]
 [0 0 0 1 0 0 1 0 0]
 [1 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 1 0 1 0 0 1 0 1]
 [1 0 0 1 0 0 1 0 0]
 [0 0 0 0 0 0 1 0 0]
 [1 1 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 1 1 1 0 0 0 1 0]
 [0 0 0 1 0 0 1 0 0]
 [1 0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 1 0 0 1 0 1]
 [0 0 0 1 0 0 1 0 0]
 [0 0 0 0 0 0 1 0 0]
 [1 1 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 1 1 1 0 0 0 1 0]
 [0 0 0 1 0 0 1 0 0]
 [1 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: node_degree
Graph before final task:[[0 0 0 1 0 0 1 0 1]
 [0 0 0 1 0 0 1 0 0]
 [0 0 0 0 0 0 1 0 0]
 [1 1 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 1 1 1 0 0 0 1 0]
 [0 0 0 1 0 0 1 0 0]
 [1 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 1 0 1 0 0 1 0 1]
 [1 0 0 1 0 0 1 1 0]
 [0 0 0 0 0 0 1 0 0]
 [1 1 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 1 1 1 0 0 0 1 0]
 [0 1 0 1 0 0 1 0 0]
 [1 0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 1 0 1 0 0 1 0 1]
 [1 0 0 1 0 0 1 1 0]
 [0 0 0 0 0 0 1 0 0]
 [1 1 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 1 1 1 0 0 0 1 0]
 [0 1 0 1 0 0 1 0 0]
 [1 0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 1 0 1 0 0 1 0 1 0]
 [1 0 0 1 0 0 1 1 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [1 1 0 0 0 0 1 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 1 1 1 0 0 0 1 0 0]
 [0 1 0 1 0 0 1 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 1 0 1 0 0 1 0 1 0]
 [1 0 0 1 0 0 1 1 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [1 1 0 0 0 0 1 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 1 1 1 0 0 0 1 0 0]
 [0 1 0 1 0 0 1 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 1 0 1 0 0 1 0 1 0]
 [1 0 0 1 0 0 1 1 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [1 1 0 0 1 0 1 1 0 0]
 [0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 1 1 1 0 0 0 1 0 0]
 [0 1 0 1 0 0 1 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: connected_nodes
Graph before final task:[[0 1 0 1 0 0 1 0 1 0]
 [1 0 0 1 0 0 1 1 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [1 1 0 0 1 0 1 1 0 0]
 [0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 1 1 1 0 0 0 1 0 0]
 [0 1 0 1 0 0 1 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 1 0 1 0 0 1 0 1]
 [1 0 0 1 0 0 1 1 0]
 [0 0 0 0 0 0 1 0 0]
 [1 1 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 1 1 1 0 0 0 1 0]
 [0 1 0 1 0 0 1 0 0]
 [1 0 0 0 0 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 1 0 1 0 0 1 0 1]
 [1 0 0 1 0 0 1 1 0]
 [0 0 0 0 0 0 1 0 0]
 [1 1 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 1 1 1 0 0 0 1 0]
 [0 1 0 1 0 0 1 0 0]
 [1 0 0 0 0 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 1 0 1 0 0 1 0 1 0]
 [1 0 0 1 0 0 1 1 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [1 1 0 0 0 0 1 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 1 1 1 0 0 0 1 0 0]
 [0 1 0 1 0 0 1 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 1 0 1 0 0 1 0 1 0]
 [1 0 0 1 0 0 1 1 0 0]
 [0 0 0 0 0 0 1 0 0 0]
 [1 1 0 0 0 0 1 1 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [1 1 1 1 0 0 0 1 0 0]
 [0 1 0 1 0 0 1 0 0 0]
 [1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 1 0 1 0 1 0 1 0]
 [1 0 0 1 0 1 1 0 0]
 [0 0 0 0 0 1 0 0 0]
 [1 1 0 0 0 1 1 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 1 1 1 0 0 1 0 0]
 [0 1 0 1 0 1 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: print_adjacency_matrix
Graph before final task:[[0 1 0 1 0 1 0 1 0]
 [1 0 0 1 0 1 1 0 0]
 [0 0 0 0 0 1 0 0 0]
 [1 1 0 0 0 1 1 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 1 1 1 0 0 1 0 0]
 [0 1 0 1 0 1 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Generating graph 47
-------------------
Graph before chain:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 1 0 0 0 1]
 [0 0 0 0 0 0 1 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 1 0 0 0 1]
 [0 0 0 0 0 0 1 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 1 1 0 0 1]
 [0 0 0 0 0 1 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 1 1 0 0 1]
 [0 0 0 0 0 1 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 1 1 0 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 1 1 0 0 0]
 [0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 1 1 0 0 0]
 [1 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_exists
Graph before final task:[[0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 1 1 0 0 0]
 [1 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 1 0 0 0 1]
 [0 0 0 0 0 0 1 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 1 0 0 0 1]
 [0 0 0 0 0 0 1 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 1 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 1 0 0 0 1]
 [0 0 0 1 0 0 1 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 1 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 1 0 0 0 1]
 [0 0 0 1 0 0 1 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1]
 [0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [0 0 1 1 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1]
 [0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [0 0 1 1 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1]
 [0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 1 1 0 0 0]]
Picked all tasks!
Final task: cycle
Graph before final task:[[0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1]
 [0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 1 1 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 1 0 0 0 1]
 [0 0 0 0 0 0 1 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 1 0 0 0 1]
 [0 0 0 0 0 0 1 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 1 0 0 0 1]
 [0 0 0 0 0 1 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 1 0 0 0 1]
 [0 0 0 0 0 1 0]]

Graph is disconnected after removing node 6, so we need to sample a new task.
Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 1 0 0 0 1]
 [0 0 0 0 0 1 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 1 0 0 0 1]
 [0 0 0 0 0 1 0]]

Graph is disconnected after removing node 6, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 1 0 0 0 1]
 [0 0 0 0 0 1 0]]
Picked all tasks!
Final task: node_count
Graph before final task:[[0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 1 0 0 0 1]
 [0 0 0 0 0 1 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 1 0 0 0 1]
 [0 0 0 0 0 0 1 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 1 0 0 0 1]
 [0 0 0 0 0 0 1 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 1 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 1 0 0 0 1]
 [0 0 0 0 0 0 1 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 1 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 1 0 0 0 1]
 [0 0 0 0 0 0 1 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0]
 [0 1 0 0 0 1 1 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 1 1 0 0 0 1 0]
 [0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_count
Graph before final task:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0]
 [0 1 0 0 0 1 1 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 1 1 0 0 0 1 0]
 [0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 1 0 0 0 1]
 [0 0 0 0 0 0 1 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 1 0 0 0 1]
 [0 0 0 0 0 0 1 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 1 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 1 1 0 0 0]
 [0 0 1 1 0 0 0 1]
 [0 0 0 0 0 0 1 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 1 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 1 1 0 0 0]
 [0 0 1 1 0 0 0 1]
 [0 0 0 0 0 0 1 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 1 0]
 [0 0 0 0 0 1 1 0]
 [0 0 0 1 1 0 0 0]
 [0 0 1 1 1 0 0 1]
 [0 0 0 0 0 0 1 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 1 0]
 [0 0 0 0 0 1 1 0]
 [0 0 0 1 1 0 0 0]
 [0 0 1 1 1 0 0 1]
 [0 0 0 0 0 0 1 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 1 0]
 [0 0 0 0 0 1 1 0]
 [0 0 0 1 1 0 0 0]
 [0 0 1 1 1 0 0 0]
 [0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: node_degree
Graph before final task:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 1 0]
 [0 0 0 0 0 1 1 0]
 [0 0 0 1 1 0 0 0]
 [0 0 1 1 1 0 0 0]
 [0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 1 0 0 0 1]
 [0 0 0 0 0 0 1 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 1 0 0 0 1]
 [0 0 0 0 0 0 1 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 1 1 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 1 1 0 0 0 1 0]
 [0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 1 1 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 1 1 0 0 0 1 0]
 [0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 1 1 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 1 0 0 1 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: connected_nodes
Graph before final task:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 1 1 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 1 0 0 1 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 1 0 0 0 1]
 [0 0 0 0 0 0 1 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 1 1 0 0 0 1]
 [0 0 0 0 0 0 1 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]]
Picked all tasks!
Final task: print_adjacency_matrix
Graph before final task:[[0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]]
Generating graph 48
-------------------
Graph before chain:[[0 0 0 0 1 0 0 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]
 [1 0 0 0 0 0 1 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 1 0 0 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]
 [1 0 0 0 0 0 1 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 1 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [1 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 1 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [1 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [1 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [1 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [1 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_exists
Graph before final task:[[0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [1 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 1 0 0 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]
 [1 0 0 0 0 0 1 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 1 0 0 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]
 [1 0 0 0 0 0 1 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]
 [1 0 0 0 0 0 1 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]
 [1 0 0 0 0 0 1 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [1 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: cycle
Graph before final task:[[0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [1 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 1 0 0 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]
 [1 0 0 0 0 0 1 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 1 0 0 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]
 [1 0 0 0 0 0 1 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1]
 [0 0 0 0 0 1 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1]
 [0 0 0 0 0 1 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1]
 [0 0 0 0 0 1 0]]
Picked all tasks!
Final task: node_count
Graph before final task:[[0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1]
 [0 0 0 0 0 1 0]]
-------------------
Graph before chain:[[0 0 0 0 1 0 0 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]
 [1 0 0 0 0 0 1 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 1 0 0 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]
 [1 0 0 0 0 0 1 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 1 0 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 1 0 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]]

Graph is disconnected after removing node 0, so we need to sample a new task.
Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 1 0 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]]
Picked all tasks!
Final task: edge_count
Graph before final task:[[0 0 0 0 1 0 1]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 1 0 0 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]
 [1 0 0 0 0 0 1 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 1 0 0 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]
 [1 0 0 0 0 0 1 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 1 0 0 1]
 [0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]
 [1 1 0 0 0 0 1 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 1 0 0 1]
 [0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]
 [1 1 0 0 0 0 1 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 1 0 0 1 0]
 [0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [1 1 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: node_degree
Graph before final task:[[0 0 0 0 1 0 0 1 0]
 [0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0]
 [1 1 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 1 0 0 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]
 [1 0 0 0 0 0 1 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 1 0 0 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]
 [1 0 0 0 0 0 1 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0]]

Graph has only one edge or one node, so we need to sample a new task.
Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

Graph has only one edge or one node, so we need to sample a new task.
Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
Picked all tasks!
Final task: connected_nodes
Graph before final task:[[0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 1 0 0 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]
 [1 0 0 0 0 0 1 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 1 0 0 1]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]
 [1 0 0 0 0 0 1 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 1 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 1 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 1]
 [0 0 0 0 0 0 1 0]]
Picked all tasks!
Final task: print_adjacency_matrix
Graph before final task:[[0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 1]
 [0 0 0 0 0 0 1 0]]
Generating graph 49
-------------------
Graph before chain:[[0 0 0 0 1]
 [0 0 1 0 0]
 [0 1 0 0 0]
 [0 0 0 0 1]
 [1 0 0 1 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 1]
 [0 0 1 0 0]
 [0 1 0 0 0]
 [0 0 0 0 1]
 [1 0 0 1 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 1]
 [0 0 1 0 0]
 [0 1 0 0 1]
 [0 0 0 0 1]
 [1 0 1 1 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 1]
 [0 0 1 0 0]
 [0 1 0 0 1]
 [0 0 0 0 1]
 [1 0 1 1 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 1 0 0]
 [1 0 0 1]
 [0 0 0 1]
 [0 1 1 0]]
Picked all tasks!
Final task: edge_exists
Graph before final task:[[0 1 0 0]
 [1 0 0 1]
 [0 0 0 1]
 [0 1 1 0]]
-------------------
Graph before chain:[[0 0 0 0 1]
 [0 0 1 0 0]
 [0 1 0 0 0]
 [0 0 0 0 1]
 [1 0 0 1 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 1]
 [0 0 1 0 0]
 [0 1 0 0 0]
 [0 0 0 0 1]
 [1 0 0 1 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 1]
 [0 0 1 0 0]
 [0 1 0 0 0]
 [0 0 0 0 0]
 [1 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 1]
 [0 0 1 0 0]
 [0 1 0 0 0]
 [0 0 0 0 0]
 [1 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 1 0]
 [0 0 1 0 0 0]
 [0 1 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 1 0]
 [0 0 1 0 0 0]
 [0 1 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0 0]
 [0 0 1 0 0 0]
 [0 1 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]
Picked all tasks!
Final task: cycle
Graph before final task:[[0 0 0 0 0 0]
 [0 0 1 0 0 0]
 [0 1 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 1]
 [0 0 1 0 0]
 [0 1 0 0 0]
 [0 0 0 0 1]
 [1 0 0 1 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 1]
 [0 0 1 0 0]
 [0 1 0 0 0]
 [0 0 0 0 1]
 [1 0 0 1 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 1]
 [0 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 1]
 [1 0 0 1 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 1]
 [0 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 1]
 [1 0 0 1 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [1 0 0 1 0 0]
 [0 0 0 0 0 0]]
Picked all tasks!
Final task: node_count
Graph before final task:[[0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [1 0 0 1 0 0]
 [0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 1]
 [0 0 1 0 0]
 [0 1 0 0 0]
 [0 0 0 0 1]
 [1 0 0 1 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 1]
 [0 0 1 0 0]
 [0 1 0 0 0]
 [0 0 0 0 1]
 [1 0 0 1 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 1]
 [0 0 1 0 0]
 [0 1 0 1 0]
 [0 0 1 0 1]
 [1 0 0 1 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 1]
 [0 0 1 0 0]
 [0 1 0 1 0]
 [0 0 1 0 1]
 [1 0 0 1 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 0]
 [0 0 1 0 0]
 [0 1 0 1 0]
 [0 0 1 0 1]
 [0 0 0 1 0]]
Picked all tasks!
Final task: edge_count
Graph before final task:[[0 0 0 0 0]
 [0 0 1 0 0]
 [0 1 0 1 0]
 [0 0 1 0 1]
 [0 0 0 1 0]]
-------------------
Graph before chain:[[0 0 0 0 1]
 [0 0 1 0 0]
 [0 1 0 0 0]
 [0 0 0 0 1]
 [1 0 0 1 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 1]
 [0 0 1 0 0]
 [0 1 0 0 0]
 [0 0 0 0 1]
 [1 0 0 1 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 1]
 [0 0 1 0 0]
 [0 1 0 0 0]
 [0 0 0 0 0]
 [1 0 0 0 0]]
Task initially chosen: add_node
new_graph_str: [[0 0 0 0 1]
 [0 0 1 0 0]
 [0 1 0 0 0]
 [0 0 0 0 0]
 [1 0 0 0 0]]

Task add_node works!
Augmenting graph...
Graph after augmenting via task add_node:[[0 0 0 0 1 0]
 [0 0 1 0 0 0]
 [0 1 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]]
Picked all tasks!
Final task: node_degree
Graph before final task:[[0 0 0 0 1 0]
 [0 0 1 0 0 0]
 [0 1 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]]
-------------------
Graph before chain:[[0 0 0 0 1]
 [0 0 1 0 0]
 [0 1 0 0 0]
 [0 0 0 0 1]
 [1 0 0 1 0]]
Task initially chosen: add_edge
new_graph_str: [[0 0 0 0 1]
 [0 0 1 0 0]
 [0 1 0 0 0]
 [0 0 0 0 1]
 [1 0 0 1 0]]

Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 0 0 1]
 [0 0 1 0 1]
 [0 1 0 0 0]
 [0 0 0 0 1]
 [1 1 0 1 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 1]
 [0 0 1 0 1]
 [0 1 0 0 0]
 [0 0 0 0 1]
 [1 1 0 1 0]]

Task remove_node works!
Augmenting graph...
Graph after augmenting via task remove_node:[[0 0 0 1]
 [0 0 0 0]
 [0 0 0 1]
 [1 0 1 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 1]
 [0 0 0 0]
 [0 0 0 1]
 [1 0 1 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0]
 [0 0 0 0]
 [0 0 0 1]
 [0 0 1 0]]
Picked all tasks!
Final task: connected_nodes
Graph before final task:[[0 0 0 0]
 [0 0 0 0]
 [0 0 0 1]
 [0 0 1 0]]
-------------------
Graph before chain:[[0 0 0 0 1]
 [0 0 1 0 0]
 [0 1 0 0 0]
 [0 0 0 0 1]
 [1 0 0 1 0]]
Task initially chosen: remove_edge
new_graph_str: [[0 0 0 0 1]
 [0 0 1 0 0]
 [0 1 0 0 0]
 [0 0 0 0 1]
 [1 0 0 1 0]]

Task remove_edge works!
Augmenting graph...
Graph after augmenting via task remove_edge:[[0 0 0 0 1]
 [0 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 1]
 [1 0 0 1 0]]
Task initially chosen: remove_node
new_graph_str: [[0 0 0 0 1]
 [0 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 1]
 [1 0 0 1 0]]

Graph is disconnected after removing node 4, so we need to sample a new task.
Task add_edge works!
Augmenting graph...
Graph after augmenting via task add_edge:[[0 0 1 0 1]
 [0 0 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 1]
 [1 0 0 1 0]]
Picked all tasks!
Final task: print_adjacency_matrix
Graph before final task:[[0 0 1 0 1]
 [0 0 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 1]
 [1 0 0 1 0]]
Data generation complete!
